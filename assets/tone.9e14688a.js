const Ni="14.8.40",ri=(s,t,e)=>({endTime:t,insertTime:e,type:"exponentialRampToValue",value:s}),oi=(s,t,e)=>({endTime:t,insertTime:e,type:"linearRampToValue",value:s}),gs=(s,t)=>({startTime:t,type:"setValue",value:s}),Oi=(s,t,e)=>({duration:e,startTime:t,type:"setValueCurve",values:s}),Di=(s,t,{startTime:e,target:n,timeConstant:i})=>n+(t-n)*Math.exp((e-s)/i),Ie=s=>s.type==="exponentialRampToValue",Mn=s=>s.type==="linearRampToValue",re=s=>Ie(s)||Mn(s),Is=s=>s.type==="setValue",Xt=s=>s.type==="setValueCurve",Rn=(s,t,e,n)=>{const i=s[t];return i===void 0?n:re(i)||Is(i)?i.value:Xt(i)?i.values[i.values.length-1]:Di(e,Rn(s,t-1,i.startTime,n),i)},ai=(s,t,e,n,i)=>e===void 0?[n.insertTime,i]:re(e)?[e.endTime,e.value]:Is(e)?[e.startTime,e.value]:Xt(e)?[e.startTime+e.duration,e.values[e.values.length-1]]:[e.startTime,Rn(s,t-1,e.startTime,i)],ys=s=>s.type==="cancelAndHold",vs=s=>s.type==="cancelScheduledValues",ie=s=>ys(s)||vs(s)?s.cancelTime:Ie(s)||Mn(s)?s.endTime:s.startTime,ci=(s,t,e,{endTime:n,value:i})=>e===i?i:0<e&&0<i||e<0&&i<0?e*(i/e)**((s-t)/(n-t)):0,ui=(s,t,e,{endTime:n,value:i})=>e+(s-t)/(n-t)*(i-e),Lr=(s,t)=>{const e=Math.floor(t),n=Math.ceil(t);return e===n?s[e]:(1-(t-e))*s[e]+(1-(n-t))*s[n]},jr=(s,{duration:t,startTime:e,values:n})=>{const i=(s-e)/t*(n.length-1);return Lr(n,i)},kn=s=>s.type==="setTarget";class Br{constructor(t){this._automationEvents=[],this._currenTime=0,this._defaultValue=t}[Symbol.iterator](){return this._automationEvents[Symbol.iterator]()}add(t){const e=ie(t);if(ys(t)||vs(t)){const n=this._automationEvents.findIndex(r=>vs(t)&&Xt(r)?r.startTime+r.duration>=e:ie(r)>=e),i=this._automationEvents[n];if(n!==-1&&(this._automationEvents=this._automationEvents.slice(0,n)),ys(t)){const r=this._automationEvents[this._automationEvents.length-1];if(i!==void 0&&re(i)){if(kn(r))throw new Error("The internal list is malformed.");const o=Xt(r)?r.startTime+r.duration:ie(r),a=Xt(r)?r.values[r.values.length-1]:r.value,c=Ie(i)?ci(e,o,a,i):ui(e,o,a,i),u=Ie(i)?ri(c,e,this._currenTime):oi(c,e,this._currenTime);this._automationEvents.push(u)}r!==void 0&&kn(r)&&this._automationEvents.push(gs(this.getValue(e),e)),r!==void 0&&Xt(r)&&r.startTime+r.duration>e&&(this._automationEvents[this._automationEvents.length-1]=Oi(new Float32Array([6,7]),r.startTime,e-r.startTime))}}else{const n=this._automationEvents.findIndex(o=>ie(o)>e),i=n===-1?this._automationEvents[this._automationEvents.length-1]:this._automationEvents[n-1];if(i!==void 0&&Xt(i)&&ie(i)+i.duration>e)return!1;const r=Ie(t)?ri(t.value,t.endTime,this._currenTime):Mn(t)?oi(t.value,e,this._currenTime):t;if(n===-1)this._automationEvents.push(r);else{if(Xt(t)&&e+t.duration>ie(this._automationEvents[n]))return!1;this._automationEvents.splice(n,0,r)}}return!0}flush(t){const e=this._automationEvents.findIndex(n=>ie(n)>t);if(e>1){const n=this._automationEvents.slice(e-1),i=n[0];kn(i)&&n.unshift(gs(Rn(this._automationEvents,e-2,i.startTime,this._defaultValue),i.startTime)),this._automationEvents=n}}getValue(t){if(this._automationEvents.length===0)return this._defaultValue;const e=this._automationEvents.findIndex(o=>ie(o)>t),n=this._automationEvents[e],i=(e===-1?this._automationEvents.length:e)-1,r=this._automationEvents[i];if(r!==void 0&&kn(r)&&(n===void 0||!re(n)||n.insertTime>t))return Di(t,Rn(this._automationEvents,i-1,r.startTime,this._defaultValue),r);if(r!==void 0&&Is(r)&&(n===void 0||!re(n)))return r.value;if(r!==void 0&&Xt(r)&&(n===void 0||!re(n)||r.startTime+r.duration>t))return t<r.startTime+r.duration?jr(t,r):r.values[r.values.length-1];if(r!==void 0&&re(r)&&(n===void 0||!re(n)))return r.value;if(n!==void 0&&Ie(n)){const[o,a]=ai(this._automationEvents,i,r,n,this._defaultValue);return ci(t,o,a,n)}if(n!==void 0&&Mn(n)){const[o,a]=ai(this._automationEvents,i,r,n,this._defaultValue);return ui(t,o,a,n)}return this._defaultValue}}const Ur=s=>({cancelTime:s,type:"cancelAndHold"}),Gr=s=>({cancelTime:s,type:"cancelScheduledValues"}),zr=(s,t)=>({endTime:t,type:"exponentialRampToValue",value:s}),$r=(s,t)=>({endTime:t,type:"linearRampToValue",value:s}),Zr=(s,t,e)=>({startTime:t,target:s,timeConstant:e,type:"setTarget"}),Xr=()=>new DOMException("","AbortError"),Yr=s=>(t,e,[n,i,r],o)=>{s(t[i],[e,n,r],a=>a[0]===e&&a[1]===n,o)},Hr=s=>(t,e,n)=>{const i=[];for(let r=0;r<n.numberOfInputs;r+=1)i.push(new Set);s.set(t,{activeInputs:i,outputs:new Set,passiveInputs:new WeakMap,renderer:e})},Qr=s=>(t,e)=>{s.set(t,{activeInputs:new Set,passiveInputs:new WeakMap,renderer:e})},Ve=new WeakSet,Ei=new WeakMap,Ms=new WeakMap,Ii=new WeakMap,Rs=new WeakMap,es=new WeakMap,Mi=new WeakMap,ws=new WeakMap,Ts=new WeakMap,bs=new WeakMap,Ri={construct(){return Ri}},Jr=s=>{try{const t=new Proxy(s,Ri);new t}catch{return!1}return!0},li=/^import(?:(?:[\s]+[\w]+|(?:[\s]+[\w]+[\s]*,)?[\s]*\{[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?(?:[\s]*,[\s]*[\w]+(?:[\s]+as[\s]+[\w]+)?)*[\s]*}|(?:[\s]+[\w]+[\s]*,)?[\s]*\*[\s]+as[\s]+[\w]+)[\s]+from)?(?:[\s]*)("([^"\\]|\\.)+"|'([^'\\]|\\.)+')(?:[\s]*);?/,hi=(s,t)=>{const e=[];let n=s.replace(/^[\s]+/,""),i=n.match(li);for(;i!==null;){const r=i[1].slice(1,-1),o=i[0].replace(/([\s]+)?;?$/,"").replace(r,new URL(r,t).toString());e.push(o),n=n.slice(i[0].length).replace(/^[\s]+/,""),i=n.match(li)}return[e.join(";"),n]},di=s=>{if(s!==void 0&&!Array.isArray(s))throw new TypeError("The parameterDescriptors property of given value for processorCtor is not an array.")},pi=s=>{if(!Jr(s))throw new TypeError("The given value for processorCtor should be a constructor.");if(s.prototype===null||typeof s.prototype!="object")throw new TypeError("The given value for processorCtor should have a prototype.")},Kr=(s,t,e,n,i,r,o,a,c,u,l,h,p)=>{let f=0;return(d,m,g={credentials:"omit"})=>{const y=l.get(d);if(y!==void 0&&y.has(m))return Promise.resolve();const b=u.get(d);if(b!==void 0){const _=b.get(m);if(_!==void 0)return _}const k=r(d),S=k.audioWorklet===void 0?i(m).then(([_,v])=>{const[w,T]=hi(_,v),O=`${w};((a,b)=>{(a[b]=a[b]||[]).push((AudioWorkletProcessor,global,registerProcessor,sampleRate,self,window)=>{${T}
})})(window,'_AWGS')`;return e(O)}).then(()=>{const _=p._AWGS.pop();if(_===void 0)throw new SyntaxError;n(k.currentTime,k.sampleRate,()=>_(class{},void 0,(v,w)=>{if(v.trim()==="")throw t();const T=Ts.get(k);if(T!==void 0){if(T.has(v))throw t();pi(w),di(w.parameterDescriptors),T.set(v,w)}else pi(w),di(w.parameterDescriptors),Ts.set(k,new Map([[v,w]]))},k.sampleRate,void 0,void 0))}):Promise.all([i(m),Promise.resolve(s(h,h))]).then(([[_,v],w])=>{const T=f+1;f=T;const[O,A]=hi(_,v),D=`${O};((AudioWorkletProcessor,registerProcessor)=>{${A}
})(${w?"AudioWorkletProcessor":"class extends AudioWorkletProcessor {__b=new WeakSet();constructor(){super();(p=>p.postMessage=(q=>(m,t)=>q.call(p,m,t?t.filter(u=>!this.__b.has(u)):t))(p.postMessage))(this.port)}}"},(n,p)=>registerProcessor(n,class extends p{${w?"":"__c = (a) => a.forEach(e=>this.__b.add(e.buffer));"}process(i,o,p){${w?"":"i.forEach(this.__c);o.forEach(this.__c);this.__c(Object.values(p));"}return super.process(i.map(j=>j.some(k=>k.length===0)?[]:j),o,p)}}));registerProcessor('__sac${T}',class extends AudioWorkletProcessor{process(){return !1}})`,W=new Blob([D],{type:"application/javascript; charset=utf-8"}),M=URL.createObjectURL(W);return k.audioWorklet.addModule(M,g).then(()=>{if(a(k))return k;const R=o(k);return R.audioWorklet.addModule(M,g).then(()=>R)}).then(R=>{if(c===null)throw new SyntaxError;try{new c(R,`__sac${T}`)}catch{throw new SyntaxError}}).finally(()=>URL.revokeObjectURL(M))});return b===void 0?u.set(d,new Map([[m,S]])):b.set(m,S),S.then(()=>{const _=l.get(d);_===void 0?l.set(d,new Set([m])):_.add(m)}).finally(()=>{const _=u.get(d);_!==void 0&&_.delete(m)}),S}},Pt=(s,t)=>{const e=s.get(t);if(e===void 0)throw new Error("A value with the given key could not be found.");return e},ns=(s,t)=>{const e=Array.from(s).filter(t);if(e.length>1)throw Error("More than one element was found.");if(e.length===0)throw Error("No element was found.");const[n]=e;return s.delete(n),n},Vi=(s,t,e,n)=>{const i=Pt(s,t),r=ns(i,o=>o[0]===e&&o[1]===n);return i.size===0&&s.delete(t),r},gn=s=>Pt(Mi,s),Pe=s=>{if(Ve.has(s))throw new Error("The AudioNode is already stored.");Ve.add(s),gn(s).forEach(t=>t(!0))},Pi=s=>"port"in s,yn=s=>{if(!Ve.has(s))throw new Error("The AudioNode is not stored.");Ve.delete(s),gn(s).forEach(t=>t(!1))},xs=(s,t)=>{!Pi(s)&&t.every(e=>e.size===0)&&yn(s)},to=(s,t,e,n,i,r,o,a,c,u,l,h,p)=>{const f=new WeakMap;return(d,m,g,y,b)=>{const{activeInputs:k,passiveInputs:S}=r(m),{outputs:_}=r(d),v=a(d),w=T=>{const O=c(m),A=c(d);if(T){const N=Vi(S,d,g,y);s(k,d,N,!1),!b&&!h(d)&&e(A,O,g,y),p(m)&&Pe(m)}else{const N=n(k,d,g,y);t(S,y,N,!1),!b&&!h(d)&&i(A,O,g,y);const C=o(m);if(C===0)l(m)&&xs(m,k);else{const I=f.get(m);I!==void 0&&clearTimeout(I),f.set(m,setTimeout(()=>{l(m)&&xs(m,k)},C*1e3))}}};return u(_,[m,g,y],T=>T[0]===m&&T[1]===g&&T[2]===y,!0)?(v.add(w),l(d)?s(k,d,[g,y,w],!0):t(S,y,[d,g,w],!0),!0):!1}},eo=s=>(t,e,[n,i,r],o)=>{const a=t.get(n);a===void 0?t.set(n,new Set([[i,e,r]])):s(a,[i,e,r],c=>c[0]===i&&c[1]===e,o)},no=s=>(t,e)=>{const n=s(t,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});e.connect(n).connect(t.destination);const i=()=>{e.removeEventListener("ended",i),e.disconnect(n),n.disconnect()};e.addEventListener("ended",i)},so=s=>(t,e)=>{s(t).add(e)},io={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",fftSize:2048,maxDecibels:-30,minDecibels:-100,smoothingTimeConstant:.8},ro=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=i(a),l={...io,...c},h=n(u,l),p=r(u)?t():null;super(a,!1,h,p),this._nativeAnalyserNode=h}get fftSize(){return this._nativeAnalyserNode.fftSize}set fftSize(a){this._nativeAnalyserNode.fftSize=a}get frequencyBinCount(){return this._nativeAnalyserNode.frequencyBinCount}get maxDecibels(){return this._nativeAnalyserNode.maxDecibels}set maxDecibels(a){const c=this._nativeAnalyserNode.maxDecibels;if(this._nativeAnalyserNode.maxDecibels=a,!(a>this._nativeAnalyserNode.minDecibels))throw this._nativeAnalyserNode.maxDecibels=c,e()}get minDecibels(){return this._nativeAnalyserNode.minDecibels}set minDecibels(a){const c=this._nativeAnalyserNode.minDecibels;if(this._nativeAnalyserNode.minDecibels=a,!(this._nativeAnalyserNode.maxDecibels>a))throw this._nativeAnalyserNode.minDecibels=c,e()}get smoothingTimeConstant(){return this._nativeAnalyserNode.smoothingTimeConstant}set smoothingTimeConstant(a){this._nativeAnalyserNode.smoothingTimeConstant=a}getByteFrequencyData(a){this._nativeAnalyserNode.getByteFrequencyData(a)}getByteTimeDomainData(a){this._nativeAnalyserNode.getByteTimeDomainData(a)}getFloatFrequencyData(a){this._nativeAnalyserNode.getFloatFrequencyData(a)}getFloatTimeDomainData(a){this._nativeAnalyserNode.getFloatTimeDomainData(a)}},gt=(s,t)=>s.context===t,oo=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,fftSize:a.fftSize,maxDecibels:a.maxDecibels,minDecibels:a.minDecibels,smoothingTimeConstant:a.smoothingTimeConstant};a=s(o,u)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Vn=s=>{try{s.copyToChannel(new Float32Array(1),0,-1)}catch{return!1}return!0},Gt=()=>new DOMException("","IndexSizeError"),Vs=s=>{s.getChannelData=(t=>e=>{try{return t.call(s,e)}catch(n){throw n.code===12?Gt():n}})(s.getChannelData)},ao={numberOfChannels:1},co=(s,t,e,n,i,r,o,a)=>{let c=null;return class Fi{constructor(l){if(i===null)throw new Error("Missing the native OfflineAudioContext constructor.");const{length:h,numberOfChannels:p,sampleRate:f}={...ao,...l};c===null&&(c=new i(1,1,44100));const d=n!==null&&t(r,r)?new n({length:h,numberOfChannels:p,sampleRate:f}):c.createBuffer(p,h,f);if(d.numberOfChannels===0)throw e();return typeof d.copyFromChannel!="function"?(o(d),Vs(d)):t(Vn,()=>Vn(d))||a(d),s.add(d),d}static[Symbol.hasInstance](l){return l!==null&&typeof l=="object"&&Object.getPrototypeOf(l)===Fi.prototype||s.has(l)}}},bt=-34028234663852886e22,vt=-bt,Yt=s=>Ve.has(s),uo={buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1},lo=(s,t,e,n,i,r,o,a)=>class extends s{constructor(u,l){const h=r(u),p={...uo,...l},f=i(h,p),d=o(h),m=d?t():null;super(u,!1,f,m),this._audioBufferSourceNodeRenderer=m,this._isBufferNullified=!1,this._isBufferSet=p.buffer!==null,this._nativeAudioBufferSourceNode=f,this._onended=null,this._playbackRate=e(this,d,f.playbackRate,vt,bt)}get buffer(){return this._isBufferNullified?null:this._nativeAudioBufferSourceNode.buffer}set buffer(u){if(this._nativeAudioBufferSourceNode.buffer=u,u!==null){if(this._isBufferSet)throw n();this._isBufferSet=!0}}get loop(){return this._nativeAudioBufferSourceNode.loop}set loop(u){this._nativeAudioBufferSourceNode.loop=u}get loopEnd(){return this._nativeAudioBufferSourceNode.loopEnd}set loopEnd(u){this._nativeAudioBufferSourceNode.loopEnd=u}get loopStart(){return this._nativeAudioBufferSourceNode.loopStart}set loopStart(u){this._nativeAudioBufferSourceNode.loopStart=u}get onended(){return this._onended}set onended(u){const l=typeof u=="function"?a(this,u):null;this._nativeAudioBufferSourceNode.onended=l;const h=this._nativeAudioBufferSourceNode.onended;this._onended=h!==null&&h===l?u:h}get playbackRate(){return this._playbackRate}start(u=0,l=0,h){if(this._nativeAudioBufferSourceNode.start(u,l,h),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.start=h===void 0?[u,l]:[u,l,h]),this.context.state!=="closed"){Pe(this);const p=()=>{this._nativeAudioBufferSourceNode.removeEventListener("ended",p),Yt(this)&&yn(this)};this._nativeAudioBufferSourceNode.addEventListener("ended",p)}}stop(u=0){this._nativeAudioBufferSourceNode.stop(u),this._audioBufferSourceNodeRenderer!==null&&(this._audioBufferSourceNodeRenderer.stop=u)}},ho=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(u,l)=>{let h=e(u);const p=gt(h,l);if(!p){const f={buffer:h.buffer,channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,loop:h.loop,loopEnd:h.loopEnd,loopStart:h.loopStart,playbackRate:h.playbackRate.value};h=t(l,f),o!==null&&h.start(...o),a!==null&&h.stop(a)}return r.set(l,h),p?await s(l,u.playbackRate,h.playbackRate):await n(l,u.playbackRate,h.playbackRate),await i(u,l,h),h};return{set start(u){o=u},set stop(u){a=u},render(u,l){const h=r.get(l);return h!==void 0?Promise.resolve(h):c(u,l)}}},po=s=>"playbackRate"in s,fo=s=>"frequency"in s&&"gain"in s,mo=s=>"offset"in s,_o=s=>!("frequency"in s)&&"gain"in s,go=s=>"detune"in s&&"frequency"in s,yo=s=>"pan"in s,wt=s=>Pt(Ei,s),vn=s=>Pt(Ii,s),Cs=(s,t)=>{const{activeInputs:e}=wt(s);e.forEach(i=>i.forEach(([r])=>{t.includes(s)||Cs(r,[...t,s])}));const n=po(s)?[s.playbackRate]:Pi(s)?Array.from(s.parameters.values()):fo(s)?[s.Q,s.detune,s.frequency,s.gain]:mo(s)?[s.offset]:_o(s)?[s.gain]:go(s)?[s.detune,s.frequency]:yo(s)?[s.pan]:[];for(const i of n){const r=vn(i);r!==void 0&&r.activeInputs.forEach(([o])=>Cs(o,t))}Yt(s)&&yn(s)},qi=s=>{Cs(s.destination,[])},vo=s=>s===void 0||typeof s=="number"||typeof s=="string"&&(s==="balanced"||s==="interactive"||s==="playback"),wo=(s,t,e,n,i,r,o,a,c)=>class extends s{constructor(l={}){if(c===null)throw new Error("Missing the native AudioContext constructor.");let h;try{h=new c(l)}catch(d){throw d.code===12&&d.message==="sampleRate is not in range"?e():d}if(h===null)throw n();if(!vo(l.latencyHint))throw new TypeError(`The provided value '${l.latencyHint}' is not a valid enum value of type AudioContextLatencyCategory.`);if(l.sampleRate!==void 0&&h.sampleRate!==l.sampleRate)throw e();super(h,2);const{latencyHint:p}=l,{sampleRate:f}=h;if(this._baseLatency=typeof h.baseLatency=="number"?h.baseLatency:p==="balanced"?512/f:p==="interactive"||p===void 0?256/f:p==="playback"?1024/f:Math.max(2,Math.min(128,Math.round(p*f/128)))*128/f,this._nativeAudioContext=h,c.name==="webkitAudioContext"?(this._nativeGainNode=h.createGain(),this._nativeOscillatorNode=h.createOscillator(),this._nativeGainNode.gain.value=1e-37,this._nativeOscillatorNode.connect(this._nativeGainNode).connect(h.destination),this._nativeOscillatorNode.start()):(this._nativeGainNode=null,this._nativeOscillatorNode=null),this._state=null,h.state==="running"){this._state="suspended";const d=()=>{this._state==="suspended"&&(this._state=null),h.removeEventListener("statechange",d)};h.addEventListener("statechange",d)}}get baseLatency(){return this._baseLatency}get state(){return this._state!==null?this._state:this._nativeAudioContext.state}close(){return this.state==="closed"?this._nativeAudioContext.close().then(()=>{throw t()}):(this._state==="suspended"&&(this._state=null),this._nativeAudioContext.close().then(()=>{this._nativeGainNode!==null&&this._nativeOscillatorNode!==null&&(this._nativeOscillatorNode.stop(),this._nativeGainNode.disconnect(),this._nativeOscillatorNode.disconnect()),qi(this)}))}createMediaElementSource(l){return new i(this,{mediaElement:l})}createMediaStreamDestination(){return new r(this)}createMediaStreamSource(l){return new o(this,{mediaStream:l})}createMediaStreamTrackSource(l){return new a(this,{mediaStreamTrack:l})}resume(){return this._state==="suspended"?new Promise((l,h)=>{const p=()=>{this._nativeAudioContext.removeEventListener("statechange",p),this._nativeAudioContext.state==="running"?l():this.resume().then(l,h)};this._nativeAudioContext.addEventListener("statechange",p)}):this._nativeAudioContext.resume().catch(l=>{throw l===void 0||l.code===15?t():l})}suspend(){return this._nativeAudioContext.suspend().catch(l=>{throw l===void 0?t():l})}},To=(s,t,e,n,i,r,o,a)=>class extends s{constructor(u,l){const h=r(u),p=o(h),f=i(h,l,p),d=p?t(a):null;super(u,!1,f,d),this._isNodeOfNativeOfflineAudioContext=p,this._nativeAudioDestinationNode=f}get channelCount(){return this._nativeAudioDestinationNode.channelCount}set channelCount(u){if(this._isNodeOfNativeOfflineAudioContext)throw n();if(u>this._nativeAudioDestinationNode.maxChannelCount)throw e();this._nativeAudioDestinationNode.channelCount=u}get channelCountMode(){return this._nativeAudioDestinationNode.channelCountMode}set channelCountMode(u){if(this._isNodeOfNativeOfflineAudioContext)throw n();this._nativeAudioDestinationNode.channelCountMode=u}get maxChannelCount(){return this._nativeAudioDestinationNode.maxChannelCount}},bo=s=>{const t=new WeakMap,e=async(n,i)=>{const r=i.destination;return t.set(i,r),await s(n,i,r),r};return{render(n,i){const r=t.get(i);return r!==void 0?Promise.resolve(r):e(n,i)}}},xo=(s,t,e,n,i,r,o,a)=>(c,u)=>{const l=u.listener,h=()=>{const _=new Float32Array(1),v=t(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:9}),w=o(u);let T=!1,O=[0,0,-1,0,1,0],A=[0,0,0];const N=()=>{if(T)return;T=!0;const W=n(u,256,9,0);W.onaudioprocess=({inputBuffer:M})=>{const R=[r(M,_,0),r(M,_,1),r(M,_,2),r(M,_,3),r(M,_,4),r(M,_,5)];R.some((q,B)=>q!==O[B])&&(l.setOrientation(...R),O=R);const G=[r(M,_,6),r(M,_,7),r(M,_,8)];G.some((q,B)=>q!==A[B])&&(l.setPosition(...G),A=G)},v.connect(W)},C=W=>M=>{M!==O[W]&&(O[W]=M,l.setOrientation(...O))},I=W=>M=>{M!==A[W]&&(A[W]=M,l.setPosition(...A))},D=(W,M,R)=>{const G=e(u,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:M});G.connect(v,0,W),G.start(),Object.defineProperty(G.offset,"defaultValue",{get(){return M}});const q=s({context:c},w,G.offset,vt,bt);return a(q,"value",B=>()=>B.call(q),B=>j=>{try{B.call(q,j)}catch(H){if(H.code!==9)throw H}N(),w&&R(j)}),q.cancelAndHoldAtTime=(B=>w?()=>{throw i()}:(...j)=>{const H=B.apply(q,j);return N(),H})(q.cancelAndHoldAtTime),q.cancelScheduledValues=(B=>w?()=>{throw i()}:(...j)=>{const H=B.apply(q,j);return N(),H})(q.cancelScheduledValues),q.exponentialRampToValueAtTime=(B=>w?()=>{throw i()}:(...j)=>{const H=B.apply(q,j);return N(),H})(q.exponentialRampToValueAtTime),q.linearRampToValueAtTime=(B=>w?()=>{throw i()}:(...j)=>{const H=B.apply(q,j);return N(),H})(q.linearRampToValueAtTime),q.setTargetAtTime=(B=>w?()=>{throw i()}:(...j)=>{const H=B.apply(q,j);return N(),H})(q.setTargetAtTime),q.setValueAtTime=(B=>w?()=>{throw i()}:(...j)=>{const H=B.apply(q,j);return N(),H})(q.setValueAtTime),q.setValueCurveAtTime=(B=>w?()=>{throw i()}:(...j)=>{const H=B.apply(q,j);return N(),H})(q.setValueCurveAtTime),q};return{forwardX:D(0,0,C(0)),forwardY:D(1,0,C(1)),forwardZ:D(2,-1,C(2)),positionX:D(6,0,I(0)),positionY:D(7,0,I(1)),positionZ:D(8,0,I(2)),upX:D(3,0,C(3)),upY:D(4,1,C(4)),upZ:D(5,0,C(5))}},{forwardX:p,forwardY:f,forwardZ:d,positionX:m,positionY:g,positionZ:y,upX:b,upY:k,upZ:S}=l.forwardX===void 0?h():l;return{get forwardX(){return p},get forwardY(){return f},get forwardZ(){return d},get positionX(){return m},get positionY(){return g},get positionZ(){return y},get upX(){return b},get upY(){return k},get upZ(){return S}}},Pn=s=>"context"in s,wn=s=>Pn(s[0]),Se=(s,t,e,n)=>{for(const i of s)if(e(i)){if(n)return!1;throw Error("The set contains at least one similar element.")}return s.add(t),!0},fi=(s,t,[e,n],i)=>{Se(s,[t,e,n],r=>r[0]===t&&r[1]===e,i)},mi=(s,[t,e,n],i)=>{const r=s.get(t);r===void 0?s.set(t,new Set([[e,n]])):Se(r,[e,n],o=>o[0]===e,i)},Ue=s=>"inputs"in s,Fn=(s,t,e,n)=>{if(Ue(t)){const i=t.inputs[n];return s.connect(i,e,0),[i,e,0]}return s.connect(t,e,n),[t,e,n]},Wi=(s,t,e)=>{for(const n of s)if(n[0]===t&&n[1]===e)return s.delete(n),n;return null},Co=(s,t,e)=>ns(s,n=>n[0]===t&&n[1]===e),Li=(s,t)=>{if(!gn(s).delete(t))throw new Error("Missing the expected event listener.")},ji=(s,t,e)=>{const n=Pt(s,t),i=ns(n,r=>r[0]===e);return n.size===0&&s.delete(t),i},qn=(s,t,e,n)=>{Ue(t)?s.disconnect(t.inputs[n],e,0):s.disconnect(t,e,n)},nt=s=>Pt(Ms,s),He=s=>Pt(Rs,s),we=s=>ws.has(s),En=s=>!Ve.has(s),_i=(s,t)=>new Promise(e=>{if(t!==null)e(!0);else{const n=s.createScriptProcessor(256,1,1),i=s.createGain(),r=s.createBuffer(1,2,44100),o=r.getChannelData(0);o[0]=1,o[1]=1;const a=s.createBufferSource();a.buffer=r,a.loop=!0,a.connect(n).connect(s.destination),a.connect(i),a.disconnect(i),n.onaudioprocess=c=>{const u=c.inputBuffer.getChannelData(0);Array.prototype.some.call(u,l=>l===1)?e(!0):e(!1),a.stop(),n.onaudioprocess=null,a.disconnect(n),n.disconnect(s.destination)},a.start()}}),ms=(s,t)=>{const e=new Map;for(const n of s)for(const i of n){const r=e.get(i);e.set(i,r===void 0?1:r+1)}e.forEach((n,i)=>t(i,n))},Wn=s=>"context"in s,So=s=>{const t=new Map;s.connect=(e=>(n,i=0,r=0)=>{const o=Wn(n)?e(n,i,r):e(n,i),a=t.get(n);return a===void 0?t.set(n,[{input:r,output:i}]):a.every(c=>c.input!==r||c.output!==i)&&a.push({input:r,output:i}),o})(s.connect.bind(s)),s.disconnect=(e=>(n,i,r)=>{if(e.apply(s),n===void 0)t.clear();else if(typeof n=="number")for(const[o,a]of t){const c=a.filter(u=>u.output!==n);c.length===0?t.delete(o):t.set(o,c)}else if(t.has(n))if(i===void 0)t.delete(n);else{const o=t.get(n);if(o!==void 0){const a=o.filter(c=>c.output!==i&&(c.input!==r||r===void 0));a.length===0?t.delete(n):t.set(n,a)}}for(const[o,a]of t)a.forEach(c=>{Wn(o)?s.connect(o,c.output,c.input):s.connect(o,c.output)})})(s.disconnect)},Ao=(s,t,e,n)=>{const{activeInputs:i,passiveInputs:r}=vn(t),{outputs:o}=wt(s),a=gn(s),c=u=>{const l=nt(s),h=He(t);if(u){const p=ji(r,s,e);fi(i,s,p,!1),!n&&!we(s)&&l.connect(h,e)}else{const p=Co(i,s,e);mi(r,p,!1),!n&&!we(s)&&l.disconnect(h,e)}};return Se(o,[t,e],u=>u[0]===t&&u[1]===e,!0)?(a.add(c),Yt(s)?fi(i,s,[e,c],!0):mi(r,[s,e,c],!0),!0):!1},ko=(s,t,e,n)=>{const{activeInputs:i,passiveInputs:r}=wt(t),o=Wi(i[n],s,e);return o===null?[Vi(r,s,e,n)[2],!1]:[o[2],!0]},No=(s,t,e)=>{const{activeInputs:n,passiveInputs:i}=vn(t),r=Wi(n,s,e);return r===null?[ji(i,s,e)[1],!1]:[r[2],!0]},Ps=(s,t,e,n,i)=>{const[r,o]=ko(s,e,n,i);if(r!==null&&(Li(s,r),o&&!t&&!we(s)&&qn(nt(s),nt(e),n,i)),Yt(e)){const{activeInputs:a}=wt(e);xs(e,a)}},Fs=(s,t,e,n)=>{const[i,r]=No(s,e,n);i!==null&&(Li(s,i),r&&!t&&!we(s)&&nt(s).disconnect(He(e),n))},Oo=(s,t)=>{const e=wt(s),n=[];for(const i of e.outputs)wn(i)?Ps(s,t,...i):Fs(s,t,...i),n.push(i[0]);return e.outputs.clear(),n},Do=(s,t,e)=>{const n=wt(s),i=[];for(const r of n.outputs)r[1]===e&&(wn(r)?Ps(s,t,...r):Fs(s,t,...r),i.push(r[0]),n.outputs.delete(r));return i},Eo=(s,t,e,n,i)=>{const r=wt(s);return Array.from(r.outputs).filter(o=>o[0]===e&&(n===void 0||o[1]===n)&&(i===void 0||o[2]===i)).map(o=>(wn(o)?Ps(s,t,...o):Fs(s,t,...o),r.outputs.delete(o),o[0]))},Io=(s,t,e,n,i,r,o,a,c,u,l,h,p,f,d,m)=>class extends u{constructor(y,b,k,S){super(k),this._context=y,this._nativeAudioNode=k;const _=l(y);h(_)&&e(_i,()=>_i(_,m))!==!0&&So(k),Ms.set(this,k),Mi.set(this,new Set),y.state!=="closed"&&b&&Pe(this),s(this,S,k)}get channelCount(){return this._nativeAudioNode.channelCount}set channelCount(y){this._nativeAudioNode.channelCount=y}get channelCountMode(){return this._nativeAudioNode.channelCountMode}set channelCountMode(y){this._nativeAudioNode.channelCountMode=y}get channelInterpretation(){return this._nativeAudioNode.channelInterpretation}set channelInterpretation(y){this._nativeAudioNode.channelInterpretation=y}get context(){return this._context}get numberOfInputs(){return this._nativeAudioNode.numberOfInputs}get numberOfOutputs(){return this._nativeAudioNode.numberOfOutputs}connect(y,b=0,k=0){if(b<0||b>=this._nativeAudioNode.numberOfOutputs)throw i();const S=l(this._context),_=d(S);if(p(y)||f(y))throw r();if(Pn(y)){const T=nt(y);try{const A=Fn(this._nativeAudioNode,T,b,k),N=En(this);(_||N)&&this._nativeAudioNode.disconnect(...A),this.context.state!=="closed"&&!N&&En(y)&&Pe(y)}catch(A){throw A.code===12?r():A}if(t(this,y,b,k,_)){const A=c([this],y);ms(A,n(_))}return y}const v=He(y);if(v.name==="playbackRate"&&v.maxValue===1024)throw o();try{this._nativeAudioNode.connect(v,b),(_||En(this))&&this._nativeAudioNode.disconnect(v,b)}catch(T){throw T.code===12?r():T}if(Ao(this,y,b,_)){const T=c([this],y);ms(T,n(_))}}disconnect(y,b,k){let S;const _=l(this._context),v=d(_);if(y===void 0)S=Oo(this,v);else if(typeof y=="number"){if(y<0||y>=this.numberOfOutputs)throw i();S=Do(this,v,y)}else{if(b!==void 0&&(b<0||b>=this.numberOfOutputs)||Pn(y)&&k!==void 0&&(k<0||k>=y.numberOfInputs))throw i();if(S=Eo(this,v,y,b,k),S.length===0)throw r()}for(const w of S){const T=c([this],w);ms(T,a)}}},Mo=(s,t,e,n,i,r,o,a,c,u,l,h,p)=>(f,d,m,g=null,y=null)=>{const b=new Br(m.defaultValue),k=d?n(b):null,S={get defaultValue(){return m.defaultValue},get maxValue(){return g===null?m.maxValue:g},get minValue(){return y===null?m.minValue:y},get value(){return m.value},set value(_){m.value=_,S.setValueAtTime(_,f.context.currentTime)},cancelAndHoldAtTime(_){if(typeof m.cancelAndHoldAtTime=="function")k===null&&b.flush(f.context.currentTime),b.add(i(_)),m.cancelAndHoldAtTime(_);else{const v=Array.from(b).pop();k===null&&b.flush(f.context.currentTime),b.add(i(_));const w=Array.from(b).pop();m.cancelScheduledValues(_),v!==w&&w!==void 0&&(w.type==="exponentialRampToValue"?m.exponentialRampToValueAtTime(w.value,w.endTime):w.type==="linearRampToValue"?m.linearRampToValueAtTime(w.value,w.endTime):w.type==="setValue"?m.setValueAtTime(w.value,w.startTime):w.type==="setValueCurve"&&m.setValueCurveAtTime(w.values,w.startTime,w.duration))}return S},cancelScheduledValues(_){return k===null&&b.flush(f.context.currentTime),b.add(r(_)),m.cancelScheduledValues(_),S},exponentialRampToValueAtTime(_,v){if(_===0)throw new RangeError;if(!Number.isFinite(v)||v<0)throw new RangeError;return k===null&&b.flush(f.context.currentTime),b.add(o(_,v)),m.exponentialRampToValueAtTime(_,v),S},linearRampToValueAtTime(_,v){return k===null&&b.flush(f.context.currentTime),b.add(a(_,v)),m.linearRampToValueAtTime(_,v),S},setTargetAtTime(_,v,w){return k===null&&b.flush(f.context.currentTime),b.add(c(_,v,w)),m.setTargetAtTime(_,v,w),S},setValueAtTime(_,v){return k===null&&b.flush(f.context.currentTime),b.add(u(_,v)),m.setValueAtTime(_,v),S},setValueCurveAtTime(_,v,w){const T=_ instanceof Float32Array?_:new Float32Array(_);if(h!==null&&h.name==="webkitAudioContext"){const O=v+w,A=f.context.sampleRate,N=Math.ceil(v*A),C=Math.floor(O*A),I=C-N,D=new Float32Array(I);for(let M=0;M<I;M+=1){const R=(T.length-1)/w*((N+M)/A-v),G=Math.floor(R),q=Math.ceil(R);D[M]=G===q?T[G]:(1-(R-G))*T[G]+(1-(q-R))*T[q]}k===null&&b.flush(f.context.currentTime),b.add(l(D,v,w)),m.setValueCurveAtTime(D,v,w);const W=C/A;W<O&&p(S,D[D.length-1],W),p(S,T[T.length-1],O)}else k===null&&b.flush(f.context.currentTime),b.add(l(T,v,w)),m.setValueCurveAtTime(T,v,w);return S}};return e.set(S,m),t.set(S,f),s(S,k),S},Ro=s=>({replay(t){for(const e of s)if(e.type==="exponentialRampToValue"){const{endTime:n,value:i}=e;t.exponentialRampToValueAtTime(i,n)}else if(e.type==="linearRampToValue"){const{endTime:n,value:i}=e;t.linearRampToValueAtTime(i,n)}else if(e.type==="setTarget"){const{startTime:n,target:i,timeConstant:r}=e;t.setTargetAtTime(i,n,r)}else if(e.type==="setValue"){const{startTime:n,value:i}=e;t.setValueAtTime(i,n)}else if(e.type==="setValueCurve"){const{duration:n,startTime:i,values:r}=e;t.setValueCurveAtTime(r,i,n)}else throw new Error("Can't apply an unknown automation.")}});class Bi{constructor(t){this._map=new Map(t)}get size(){return this._map.size}entries(){return this._map.entries()}forEach(t,e=null){return this._map.forEach((n,i)=>t.call(e,n,i,this))}get(t){return this._map.get(t)}has(t){return this._map.has(t)}keys(){return this._map.keys()}values(){return this._map.values()}}const Vo={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:1,numberOfOutputs:1,parameterData:{},processorOptions:{}},Po=(s,t,e,n,i,r,o,a,c,u,l,h,p,f)=>class extends t{constructor(m,g,y){var b;const k=a(m),S=c(k),_=l({...Vo,...y});p(_);const v=Ts.get(k),w=v==null?void 0:v.get(g),T=S||k.state!=="closed"?k:(b=o(k))!==null&&b!==void 0?b:k,O=i(T,S?null:m.baseLatency,u,g,w,_),A=S?n(g,_,w):null;super(m,!0,O,A);const N=[];O.parameters.forEach((I,D)=>{const W=e(this,S,I);N.push([D,W])}),this._nativeAudioWorkletNode=O,this._onprocessorerror=null,this._parameters=new Bi(N),S&&s(k,this);const{activeInputs:C}=r(this);h(O,C)}get onprocessorerror(){return this._onprocessorerror}set onprocessorerror(m){const g=typeof m=="function"?f(this,m):null;this._nativeAudioWorkletNode.onprocessorerror=g;const y=this._nativeAudioWorkletNode.onprocessorerror;this._onprocessorerror=y!==null&&y===g?m:y}get parameters(){return this._parameters===null?this._nativeAudioWorkletNode.parameters:this._parameters}get port(){return this._nativeAudioWorkletNode.port}};function Ln(s,t,e,n,i){if(typeof s.copyFromChannel=="function")t[e].byteLength===0&&(t[e]=new Float32Array(128)),s.copyFromChannel(t[e],n,i);else{const r=s.getChannelData(n);if(t[e].byteLength===0)t[e]=r.slice(i,i+128);else{const o=new Float32Array(r.buffer,i*Float32Array.BYTES_PER_ELEMENT,128);t[e].set(o)}}}const Ui=(s,t,e,n,i)=>{typeof s.copyToChannel=="function"?t[e].byteLength!==0&&s.copyToChannel(t[e],n,i):t[e].byteLength!==0&&s.getChannelData(n).set(t[e],i)},jn=(s,t)=>{const e=[];for(let n=0;n<s;n+=1){const i=[],r=typeof t=="number"?t:t[n];for(let o=0;o<r;o+=1)i.push(new Float32Array(128));e.push(i)}return e},Fo=(s,t)=>{const e=Pt(bs,s),n=nt(t);return Pt(e,n)},qo=async(s,t,e,n,i,r,o)=>{const a=t===null?Math.ceil(s.context.length/128)*128:t.length,c=n.channelCount*n.numberOfInputs,u=i.reduce((g,y)=>g+y,0),l=u===0?null:e.createBuffer(u,a,e.sampleRate);if(r===void 0)throw new Error("Missing the processor constructor.");const h=wt(s),p=await Fo(e,s),f=jn(n.numberOfInputs,n.channelCount),d=jn(n.numberOfOutputs,i),m=Array.from(s.parameters.keys()).reduce((g,y)=>({...g,[y]:new Float32Array(128)}),{});for(let g=0;g<a;g+=128){if(n.numberOfInputs>0&&t!==null)for(let y=0;y<n.numberOfInputs;y+=1)for(let b=0;b<n.channelCount;b+=1)Ln(t,f[y],b,b,g);r.parameterDescriptors!==void 0&&t!==null&&r.parameterDescriptors.forEach(({name:y},b)=>{Ln(t,m,y,c+b,g)});for(let y=0;y<n.numberOfInputs;y+=1)for(let b=0;b<i[y];b+=1)d[y][b].byteLength===0&&(d[y][b]=new Float32Array(128));try{const y=f.map((k,S)=>h.activeInputs[S].size===0?[]:k),b=o(g/e.sampleRate,e.sampleRate,()=>p.process(y,d,m));if(l!==null)for(let k=0,S=0;k<n.numberOfOutputs;k+=1){for(let _=0;_<i[k];_+=1)Ui(l,d[k],_,S+_,g);S+=i[k]}if(!b)break}catch(y){s.dispatchEvent(new ErrorEvent("processorerror",{colno:y.colno,filename:y.filename,lineno:y.lineno,message:y.message}));break}}return l},Wo=(s,t,e,n,i,r,o,a,c,u,l,h,p,f,d,m)=>(g,y,b)=>{const k=new WeakMap;let S=null;const _=async(v,w)=>{let T=l(v),O=null;const A=gt(T,w),N=Array.isArray(y.outputChannelCount)?y.outputChannelCount:Array.from(y.outputChannelCount);if(h===null){const C=N.reduce((M,R)=>M+R,0),I=i(w,{channelCount:Math.max(1,C),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,C)}),D=[];for(let M=0;M<v.numberOfOutputs;M+=1)D.push(n(w,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:N[M]}));const W=o(w,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1});W.connect=t.bind(null,D),W.disconnect=c.bind(null,D),O=[I,D,W]}else A||(T=new h(w,g));if(k.set(w,O===null?T:O[2]),O!==null){if(S===null){if(b===void 0)throw new Error("Missing the processor constructor.");if(p===null)throw new Error("Missing the native OfflineAudioContext constructor.");const R=v.channelCount*v.numberOfInputs,G=b.parameterDescriptors===void 0?0:b.parameterDescriptors.length,q=R+G;S=qo(v,q===0?null:await(async()=>{const j=new p(q,Math.ceil(v.context.length/128)*128,w.sampleRate),H=[],At=[];for(let st=0;st<y.numberOfInputs;st+=1)H.push(o(j,{channelCount:y.channelCount,channelCountMode:y.channelCountMode,channelInterpretation:y.channelInterpretation,gain:1})),At.push(i(j,{channelCount:y.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:y.channelCount}));const kt=await Promise.all(Array.from(v.parameters.values()).map(async st=>{const yt=r(j,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:st.value});return await f(j,st,yt.offset),yt})),z=n(j,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,R+G)});for(let st=0;st<y.numberOfInputs;st+=1){H[st].connect(At[st]);for(let yt=0;yt<y.channelCount;yt+=1)At[st].connect(z,yt,st*y.channelCount+yt)}for(const[st,yt]of kt.entries())yt.connect(z,0,R+st),yt.start(0);return z.connect(j.destination),await Promise.all(H.map(st=>d(v,j,st))),m(j)})(),w,y,N,b,u)}const C=await S,I=e(w,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),[D,W,M]=O;C!==null&&(I.buffer=C,I.start(0)),I.connect(D);for(let R=0,G=0;R<v.numberOfOutputs;R+=1){const q=W[R];for(let B=0;B<N[R];B+=1)D.connect(q,G+B,B);G+=N[R]}return M}if(A)for(const[C,I]of v.parameters.entries())await s(w,I,T.parameters.get(C));else for(const[C,I]of v.parameters.entries())await f(w,I,T.parameters.get(C));return await d(v,w,T),T};return{render(v,w){a(w,v);const T=k.get(w);return T!==void 0?Promise.resolve(T):_(v,w)}}},Lo=(s,t,e,n,i,r,o,a,c,u,l,h,p,f,d,m,g,y,b,k)=>class extends d{constructor(_,v){super(_,v),this._nativeContext=_,this._audioWorklet=s===void 0?void 0:{addModule:(w,T)=>s(this,w,T)}}get audioWorklet(){return this._audioWorklet}createAnalyser(){return new t(this)}createBiquadFilter(){return new i(this)}createBuffer(_,v,w){return new e({length:v,numberOfChannels:_,sampleRate:w})}createBufferSource(){return new n(this)}createChannelMerger(_=6){return new r(this,{numberOfInputs:_})}createChannelSplitter(_=6){return new o(this,{numberOfOutputs:_})}createConstantSource(){return new a(this)}createConvolver(){return new c(this)}createDelay(_=1){return new l(this,{maxDelayTime:_})}createDynamicsCompressor(){return new h(this)}createGain(){return new p(this)}createIIRFilter(_,v){return new f(this,{feedback:v,feedforward:_})}createOscillator(){return new m(this)}createPanner(){return new g(this)}createPeriodicWave(_,v,w={disableNormalization:!1}){return new y(this,{...w,imag:v,real:_})}createStereoPanner(){return new b(this)}createWaveShaper(){return new k(this)}decodeAudioData(_,v,w){return u(this._nativeContext,_).then(T=>(typeof v=="function"&&v(T),T),T=>{throw typeof w=="function"&&w(T),T})}},jo={Q:1,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:350,gain:0,type:"lowpass"},Bo=(s,t,e,n,i,r,o,a)=>class extends s{constructor(u,l){const h=r(u),p={...jo,...l},f=i(h,p),d=o(h),m=d?e():null;super(u,!1,f,m),this._Q=t(this,d,f.Q,vt,bt),this._detune=t(this,d,f.detune,1200*Math.log2(vt),-1200*Math.log2(vt)),this._frequency=t(this,d,f.frequency,u.sampleRate/2,0),this._gain=t(this,d,f.gain,40*Math.log10(vt),bt),this._nativeBiquadFilterNode=f,a(this,1)}get detune(){return this._detune}get frequency(){return this._frequency}get gain(){return this._gain}get Q(){return this._Q}get type(){return this._nativeBiquadFilterNode.type}set type(u){this._nativeBiquadFilterNode.type=u}getFrequencyResponse(u,l,h){try{this._nativeBiquadFilterNode.getFrequencyResponse(u,l,h)}catch(p){throw p.code===11?n():p}if(u.length!==l.length||l.length!==h.length)throw n()}},Uo=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=gt(u,c);if(!l){const h={Q:u.Q.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,detune:u.detune.value,frequency:u.frequency.value,gain:u.gain.value,type:u.type};u=t(c,h)}return r.set(c,u),l?(await s(c,a.Q,u.Q),await s(c,a.detune,u.detune),await s(c,a.frequency,u.frequency),await s(c,a.gain,u.gain)):(await n(c,a.Q,u.Q),await n(c,a.detune,u.detune),await n(c,a.frequency,u.frequency),await n(c,a.gain,u.gain)),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},Go=(s,t)=>(e,n)=>{const i=t.get(e);if(i!==void 0)return i;const r=s.get(e);if(r!==void 0)return r;try{const o=n();return o instanceof Promise?(s.set(e,o),o.catch(()=>!1).then(a=>(s.delete(e),t.set(e,a),a))):(t.set(e,o),o)}catch{return t.set(e,!1),!1}},zo={channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6},$o=(s,t,e,n,i)=>class extends s{constructor(o,a){const c=n(o),u={...zo,...a},l=e(c,u),h=i(c)?t():null;super(o,!1,l,h)}},Zo=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfInputs:a.numberOfInputs};a=s(o,u)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Xo={channelCount:6,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:6},Yo=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=n(a),l=r({...Xo,...c}),h=e(u,l),p=i(u)?t():null;super(a,!1,h,p)}},Ho=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,numberOfOutputs:a.numberOfOutputs};a=s(o,u)}return n.set(o,a),await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},Qo=s=>(t,e,n)=>s(e,t,n),Jo=s=>(t,e,n=0,i=0)=>{const r=t[n];if(r===void 0)throw s();return Wn(e)?r.connect(e,0,i):r.connect(e,0)},Ko=s=>(t,e)=>{const n=s(t,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),i=t.createBuffer(1,2,44100);return n.buffer=i,n.loop=!0,n.connect(e),n.start(),()=>{n.stop(),n.disconnect(e)}},ta={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",offset:1},ea=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...ta,...u},p=n(l,h),f=r(l),d=f?e():null;super(c,!1,p,d),this._constantSourceNodeRenderer=d,this._nativeConstantSourceNode=p,this._offset=t(this,f,p.offset,vt,bt),this._onended=null}get offset(){return this._offset}get onended(){return this._onended}set onended(c){const u=typeof c=="function"?o(this,c):null;this._nativeConstantSourceNode.onended=u;const l=this._nativeConstantSourceNode.onended;this._onended=l!==null&&l===u?c:l}start(c=0){if(this._nativeConstantSourceNode.start(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.start=c),this.context.state!=="closed"){Pe(this);const u=()=>{this._nativeConstantSourceNode.removeEventListener("ended",u),Yt(this)&&yn(this)};this._nativeConstantSourceNode.addEventListener("ended",u)}}stop(c=0){this._nativeConstantSourceNode.stop(c),this._constantSourceNodeRenderer!==null&&(this._constantSourceNodeRenderer.stop=c)}},na=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null;const c=async(u,l)=>{let h=e(u);const p=gt(h,l);if(!p){const f={channelCount:h.channelCount,channelCountMode:h.channelCountMode,channelInterpretation:h.channelInterpretation,offset:h.offset.value};h=t(l,f),o!==null&&h.start(o),a!==null&&h.stop(a)}return r.set(l,h),p?await s(l,u.offset,h.offset):await n(l,u.offset,h.offset),await i(u,l,h),h};return{set start(u){o=u},set stop(u){a=u},render(u,l){const h=r.get(l);return h!==void 0?Promise.resolve(h):c(u,l)}}},sa=s=>t=>(s[0]=t,s[0]),ia={buffer:null,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",disableNormalization:!1},ra=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=n(a),l={...ia,...c},h=e(u,l),f=i(u)?t():null;super(a,!1,h,f),this._isBufferNullified=!1,this._nativeConvolverNode=h,l.buffer!==null&&r(this,l.buffer.duration)}get buffer(){return this._isBufferNullified?null:this._nativeConvolverNode.buffer}set buffer(a){if(this._nativeConvolverNode.buffer=a,a===null&&this._nativeConvolverNode.buffer!==null){const c=this._nativeConvolverNode.context;this._nativeConvolverNode.buffer=c.createBuffer(1,1,44100),this._isBufferNullified=!0,r(this,0)}else this._isBufferNullified=!1,r(this,this._nativeConvolverNode.buffer===null?0:this._nativeConvolverNode.buffer.duration)}get normalize(){return this._nativeConvolverNode.normalize}set normalize(a){this._nativeConvolverNode.normalize=a}},oa=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={buffer:a.buffer,channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,disableNormalization:!a.normalize};a=s(o,u)}return n.set(o,a),Ue(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},aa=(s,t)=>(e,n,i)=>{if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");try{return new t(e,n,i)}catch(r){throw r.name==="SyntaxError"?s():r}},ca=()=>new DOMException("","DataCloneError"),gi=s=>{const{port1:t,port2:e}=new MessageChannel;return new Promise(n=>{const i=()=>{e.onmessage=null,t.close(),e.close(),n()};e.onmessage=()=>i();try{t.postMessage(s,[s])}finally{i()}})},ua=(s,t,e,n,i,r,o,a,c,u,l)=>(h,p)=>{const f=o(h)?h:r(h);if(i.has(p)){const d=e();return Promise.reject(d)}try{i.add(p)}catch{}return t(c,()=>c(f))?f.decodeAudioData(p).then(d=>(gi(p).catch(()=>{}),t(a,()=>a(d))||l(d),s.add(d),d)):new Promise((d,m)=>{const g=async()=>{try{await gi(p)}catch{}},y=b=>{m(b),g()};try{f.decodeAudioData(p,b=>{typeof b.copyFromChannel!="function"&&(u(b),Vs(b)),s.add(b),g().then(()=>d(b))},b=>{y(b===null?n():b)})}catch(b){y(b)}})},la=(s,t,e,n,i,r,o,a)=>(c,u)=>{const l=t.get(c);if(l===void 0)throw new Error("Missing the expected cycle count.");const h=r(c.context),p=a(h);if(l===u){if(t.delete(c),!p&&o(c)){const f=n(c),{outputs:d}=e(c);for(const m of d)if(wn(m)){const g=n(m[0]);s(f,g,m[1],m[2])}else{const g=i(m[0]);f.connect(g,m[1])}}}else t.set(c,l-u)},ha={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",delayTime:0,maxDelayTime:1},da=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...ha,...u},p=n(l,h),f=r(l),d=f?e(h.maxDelayTime):null;super(c,!1,p,d),this._delayTime=t(this,f,p.delayTime),o(this,h.maxDelayTime)}get delayTime(){return this._delayTime}},pa=(s,t,e,n,i)=>r=>{const o=new WeakMap,a=async(c,u)=>{let l=e(c);const h=gt(l,u);if(!h){const p={channelCount:l.channelCount,channelCountMode:l.channelCountMode,channelInterpretation:l.channelInterpretation,delayTime:l.delayTime.value,maxDelayTime:r};l=t(u,p)}return o.set(u,l),h?await s(u,c.delayTime,l.delayTime):await n(u,c.delayTime,l.delayTime),await i(c,u,l),l};return{render(c,u){const l=o.get(u);return l!==void 0?Promise.resolve(l):a(c,u)}}},fa=s=>(t,e,n,i)=>s(t[i],r=>r[0]===e&&r[1]===n),ma=s=>(t,e)=>{s(t).delete(e)},_a=s=>"delayTime"in s,ga=(s,t,e)=>function n(i,r){const o=Pn(r)?r:e(s,r);if(_a(o))return[];if(i[0]===o)return[i];if(i.includes(o))return[];const{outputs:a}=t(o);return Array.from(a).map(c=>n([...i,o],c[0])).reduce((c,u)=>c.concat(u),[])},Nn=(s,t,e)=>{const n=t[e];if(n===void 0)throw s();return n},ya=s=>(t,e=void 0,n=void 0,i=0)=>e===void 0?t.forEach(r=>r.disconnect()):typeof e=="number"?Nn(s,t,e).disconnect():Wn(e)?n===void 0?t.forEach(r=>r.disconnect(e)):i===void 0?Nn(s,t,n).disconnect(e,0):Nn(s,t,n).disconnect(e,0,i):n===void 0?t.forEach(r=>r.disconnect(e)):Nn(s,t,n).disconnect(e,0),va={attack:.003,channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",knee:30,ratio:12,release:.25,threshold:-24},wa=(s,t,e,n,i,r,o,a)=>class extends s{constructor(u,l){const h=r(u),p={...va,...l},f=n(h,p),d=o(h),m=d?e():null;super(u,!1,f,m),this._attack=t(this,d,f.attack),this._knee=t(this,d,f.knee),this._nativeDynamicsCompressorNode=f,this._ratio=t(this,d,f.ratio),this._release=t(this,d,f.release),this._threshold=t(this,d,f.threshold),a(this,.006)}get attack(){return this._attack}get channelCount(){return this._nativeDynamicsCompressorNode.channelCount}set channelCount(u){const l=this._nativeDynamicsCompressorNode.channelCount;if(this._nativeDynamicsCompressorNode.channelCount=u,u>2)throw this._nativeDynamicsCompressorNode.channelCount=l,i()}get channelCountMode(){return this._nativeDynamicsCompressorNode.channelCountMode}set channelCountMode(u){const l=this._nativeDynamicsCompressorNode.channelCountMode;if(this._nativeDynamicsCompressorNode.channelCountMode=u,u==="max")throw this._nativeDynamicsCompressorNode.channelCountMode=l,i()}get knee(){return this._knee}get ratio(){return this._ratio}get reduction(){return typeof this._nativeDynamicsCompressorNode.reduction.value=="number"?this._nativeDynamicsCompressorNode.reduction.value:this._nativeDynamicsCompressorNode.reduction}get release(){return this._release}get threshold(){return this._threshold}},Ta=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=gt(u,c);if(!l){const h={attack:u.attack.value,channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,knee:u.knee.value,ratio:u.ratio.value,release:u.release.value,threshold:u.threshold.value};u=t(c,h)}return r.set(c,u),l?(await s(c,a.attack,u.attack),await s(c,a.knee,u.knee),await s(c,a.ratio,u.ratio),await s(c,a.release,u.release),await s(c,a.threshold,u.threshold)):(await n(c,a.attack,u.attack),await n(c,a.knee,u.knee),await n(c,a.ratio,u.ratio),await n(c,a.release,u.release),await n(c,a.threshold,u.threshold)),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},ba=()=>new DOMException("","EncodingError"),xa=s=>t=>new Promise((e,n)=>{if(s===null){n(new SyntaxError);return}const i=s.document.head;if(i===null)n(new SyntaxError);else{const r=s.document.createElement("script"),o=new Blob([t],{type:"application/javascript"}),a=URL.createObjectURL(o),c=s.onerror,u=()=>{s.onerror=c,URL.revokeObjectURL(a)};s.onerror=(l,h,p,f,d)=>{if(h===a||h===s.location.href&&p===1&&f===1)return u(),n(d),!1;if(c!==null)return c(l,h,p,f,d)},r.onerror=()=>{u(),n(new SyntaxError)},r.onload=()=>{u(),e()},r.src=a,r.type="module",i.appendChild(r)}}),Ca=s=>class{constructor(e){this._nativeEventTarget=e,this._listeners=new WeakMap}addEventListener(e,n,i){if(n!==null){let r=this._listeners.get(n);r===void 0&&(r=s(this,n),typeof n=="function"&&this._listeners.set(n,r)),this._nativeEventTarget.addEventListener(e,r,i)}}dispatchEvent(e){return this._nativeEventTarget.dispatchEvent(e)}removeEventListener(e,n,i){const r=n===null?void 0:this._listeners.get(n);this._nativeEventTarget.removeEventListener(e,r===void 0?null:r,i)}},Sa=s=>(t,e,n)=>{Object.defineProperties(s,{currentFrame:{configurable:!0,get(){return Math.round(t*e)}},currentTime:{configurable:!0,get(){return t}}});try{return n()}finally{s!==null&&(delete s.currentFrame,delete s.currentTime)}},Aa=s=>async t=>{try{const e=await fetch(t);if(e.ok)return[await e.text(),e.url]}catch{}throw s()},ka={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",gain:1},Na=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=i(a),l={...ka,...c},h=n(u,l),p=r(u),f=p?e():null;super(a,!1,h,f),this._gain=t(this,p,h.gain,vt,bt)}get gain(){return this._gain}},Oa=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=gt(u,c);if(!l){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,gain:u.gain.value};u=t(c,h)}return r.set(c,u),l?await s(c,a.gain,u.gain):await n(c,a.gain,u.gain),await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},Da=(s,t)=>e=>t(s,e),Ea=s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioNode in the audio graph.");return e.renderer},Ia=s=>t=>{var e;return(e=s.get(t))!==null&&e!==void 0?e:0},Ma=s=>t=>{const e=s(t);if(e.renderer===null)throw new Error("Missing the renderer of the given AudioParam in the audio graph.");return e.renderer},Ra=s=>t=>s.get(t),ft=()=>new DOMException("","InvalidStateError"),Va=s=>t=>{const e=s.get(t);if(e===void 0)throw ft();return e},Pa=(s,t)=>e=>{let n=s.get(e);if(n!==void 0)return n;if(t===null)throw new Error("Missing the native OfflineAudioContext constructor.");return n=new t(1,1,44100),s.set(e,n),n},Fa=s=>t=>{const e=s.get(t);if(e===void 0)throw new Error("The context has no set of AudioWorkletNodes.");return e},ss=()=>new DOMException("","InvalidAccessError"),qa=s=>{s.getFrequencyResponse=(t=>(e,n,i)=>{if(e.length!==n.length||n.length!==i.length)throw ss();return t.call(s,e,n,i)})(s.getFrequencyResponse)},Wa={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers"},La=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=n(a),l=i(u),h={...Wa,...c},p=t(u,l?null:a.baseLatency,h),f=l?e(h.feedback,h.feedforward):null;super(a,!1,p,f),qa(p),this._nativeIIRFilterNode=p,r(this,1)}getFrequencyResponse(a,c,u){return this._nativeIIRFilterNode.getFrequencyResponse(a,c,u)}},Gi=(s,t,e,n,i,r,o,a,c,u,l)=>{const h=u.length;let p=a;for(let f=0;f<h;f+=1){let d=e[0]*u[f];for(let m=1;m<i;m+=1){const g=p-m&c-1;d+=e[m]*r[g],d-=s[m]*o[g]}for(let m=i;m<n;m+=1)d+=e[m]*r[p-m&c-1];for(let m=i;m<t;m+=1)d-=s[m]*o[p-m&c-1];r[p]=u[f],o[p]=d,p=p+1&c-1,l[f]=d}return p},ja=(s,t,e,n)=>{const i=e instanceof Float64Array?e:new Float64Array(e),r=n instanceof Float64Array?n:new Float64Array(n),o=i.length,a=r.length,c=Math.min(o,a);if(i[0]!==1){for(let d=0;d<o;d+=1)r[d]/=i[0];for(let d=1;d<a;d+=1)i[d]/=i[0]}const u=32,l=new Float32Array(u),h=new Float32Array(u),p=t.createBuffer(s.numberOfChannels,s.length,s.sampleRate),f=s.numberOfChannels;for(let d=0;d<f;d+=1){const m=s.getChannelData(d),g=p.getChannelData(d);l.fill(0),h.fill(0),Gi(i,o,r,a,c,l,h,0,u,m,g)}return p},Ba=(s,t,e,n,i)=>(r,o)=>{const a=new WeakMap;let c=null;const u=async(l,h)=>{let p=null,f=t(l);const d=gt(f,h);if(h.createIIRFilter===void 0?p=s(h,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}):d||(f=h.createIIRFilter(o,r)),a.set(h,p===null?f:p),p!==null){if(c===null){if(e===null)throw new Error("Missing the native OfflineAudioContext constructor.");const g=new e(l.context.destination.channelCount,l.context.length,h.sampleRate);c=(async()=>{await n(l,g,g.destination);const y=await i(g);return ja(y,h,r,o)})()}const m=await c;return p.buffer=m,p.start(0),p}return await n(l,h,f),f};return{render(l,h){const p=a.get(h);return p!==void 0?Promise.resolve(p):u(l,h)}}},Ua=(s,t,e,n,i,r)=>o=>(a,c)=>{const u=s.get(a);if(u===void 0){if(!o&&r(a)){const l=n(a),{outputs:h}=e(a);for(const p of h)if(wn(p)){const f=n(p[0]);t(l,f,p[1],p[2])}else{const f=i(p[0]);l.disconnect(f,p[1])}}s.set(a,c)}else s.set(a,u+c)},Ga=(s,t)=>e=>{const n=s.get(e);return t(n)||t(e)},za=(s,t)=>e=>s.has(e)||t(e),$a=(s,t)=>e=>s.has(e)||t(e),Za=(s,t)=>e=>{const n=s.get(e);return t(n)||t(e)},Xa=s=>t=>s!==null&&t instanceof s,Ya=s=>t=>s!==null&&typeof s.AudioNode=="function"&&t instanceof s.AudioNode,Ha=s=>t=>s!==null&&typeof s.AudioParam=="function"&&t instanceof s.AudioParam,Qa=(s,t)=>e=>s(e)||t(e),Ja=s=>t=>s!==null&&t instanceof s,Ka=s=>s!==null&&s.isSecureContext,tc=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r),c=t(a,o);if(n(a))throw TypeError();super(r,!0,c,null),this._nativeMediaElementAudioSourceNode=c}get mediaElement(){return this._nativeMediaElementAudioSourceNode.mediaElement}},ec={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers"},nc=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r);if(n(a))throw new TypeError;const c={...ec,...o},u=t(a,c);super(r,!1,u,null),this._nativeMediaStreamAudioDestinationNode=u}get stream(){return this._nativeMediaStreamAudioDestinationNode.stream}},sc=(s,t,e,n)=>class extends s{constructor(r,o){const a=e(r),c=t(a,o);if(n(a))throw new TypeError;super(r,!0,c,null),this._nativeMediaStreamAudioSourceNode=c}get mediaStream(){return this._nativeMediaStreamAudioSourceNode.mediaStream}},ic=(s,t,e)=>class extends s{constructor(i,r){const o=e(i),a=t(o,r);super(i,!0,a,null)}},rc=(s,t,e,n,i,r)=>class extends e{constructor(a,c){super(a),this._nativeContext=a,es.set(this,a),n(a)&&i.set(a,new Set),this._destination=new s(this,c),this._listener=t(this,a),this._onstatechange=null}get currentTime(){return this._nativeContext.currentTime}get destination(){return this._destination}get listener(){return this._listener}get onstatechange(){return this._onstatechange}set onstatechange(a){const c=typeof a=="function"?r(this,a):null;this._nativeContext.onstatechange=c;const u=this._nativeContext.onstatechange;this._onstatechange=u!==null&&u===c?a:u}get sampleRate(){return this._nativeContext.sampleRate}get state(){return this._nativeContext.state}},Qe=s=>{const t=new Uint32Array([1179011410,40,1163280727,544501094,16,131073,44100,176400,1048580,1635017060,4,0]);try{const e=s.decodeAudioData(t.buffer,()=>{});return e===void 0?!1:(e.catch(()=>{}),!0)}catch{}return!1},oc=(s,t)=>(e,n,i)=>{const r=new Set;return e.connect=(o=>(a,c=0,u=0)=>{const l=r.size===0;if(t(a))return o.call(e,a,c,u),s(r,[a,c,u],h=>h[0]===a&&h[1]===c&&h[2]===u,!0),l&&n(),a;o.call(e,a,c),s(r,[a,c],h=>h[0]===a&&h[1]===c,!0),l&&n()})(e.connect),e.disconnect=(o=>(a,c,u)=>{const l=r.size>0;if(a===void 0)o.apply(e),r.clear();else if(typeof a=="number"){o.call(e,a);for(const p of r)p[1]===a&&r.delete(p)}else{t(a)?o.call(e,a,c,u):o.call(e,a,c);for(const p of r)p[0]===a&&(c===void 0||p[1]===c)&&(u===void 0||p[2]===u)&&r.delete(p)}const h=r.size===0;l&&h&&i()})(e.disconnect),e},it=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e]&&(s[e]=n)},pt=(s,t)=>{it(s,t,"channelCount"),it(s,t,"channelCountMode"),it(s,t,"channelInterpretation")},yi=s=>typeof s.getFloatTimeDomainData=="function",ac=s=>{s.getFloatTimeDomainData=t=>{const e=new Uint8Array(t.length);s.getByteTimeDomainData(e);const n=Math.max(e.length,s.fftSize);for(let i=0;i<n;i+=1)t[i]=(e[i]-128)*.0078125;return t}},cc=(s,t)=>(e,n)=>{const i=e.createAnalyser();if(pt(i,n),!(n.maxDecibels>n.minDecibels))throw t();return it(i,n,"fftSize"),it(i,n,"maxDecibels"),it(i,n,"minDecibels"),it(i,n,"smoothingTimeConstant"),s(yi,()=>yi(i))||ac(i),i},uc=s=>s===null?null:s.hasOwnProperty("AudioBuffer")?s.AudioBuffer:null,ct=(s,t,e)=>{const n=t[e];n!==void 0&&n!==s[e].value&&(s[e].value=n)},lc=s=>{s.start=(t=>{let e=!1;return(n=0,i=0,r)=>{if(e)throw ft();t.call(s,n,i,r),e=!0}})(s.start)},qs=s=>{s.start=(t=>(e=0,n=0,i)=>{if(typeof i=="number"&&i<0||n<0||e<0)throw new RangeError("The parameters can't be negative.");t.call(s,e,n,i)})(s.start)},Ws=s=>{s.stop=(t=>(e=0)=>{if(e<0)throw new RangeError("The parameter can't be negative.");t.call(s,e)})(s.stop)},hc=(s,t,e,n,i,r,o,a,c,u,l)=>(h,p)=>{const f=h.createBufferSource();return pt(f,p),ct(f,p,"playbackRate"),it(f,p,"buffer"),it(f,p,"loop"),it(f,p,"loopEnd"),it(f,p,"loopStart"),t(e,()=>e(h))||lc(f),t(n,()=>n(h))||c(f),t(i,()=>i(h))||u(f,h),t(r,()=>r(h))||qs(f),t(o,()=>o(h))||l(f,h),t(a,()=>a(h))||Ws(f),s(h,f),f},dc=s=>s===null?null:s.hasOwnProperty("AudioContext")?s.AudioContext:s.hasOwnProperty("webkitAudioContext")?s.webkitAudioContext:null,pc=(s,t)=>(e,n,i)=>{const r=e.destination;if(r.channelCount!==n)try{r.channelCount=n}catch{}i&&r.channelCountMode!=="explicit"&&(r.channelCountMode="explicit"),r.maxChannelCount===0&&Object.defineProperty(r,"maxChannelCount",{value:n});const o=s(e,{channelCount:n,channelCountMode:r.channelCountMode,channelInterpretation:r.channelInterpretation,gain:1});return t(o,"channelCount",a=>()=>a.call(o),a=>c=>{a.call(o,c);try{r.channelCount=c}catch(u){if(c>r.maxChannelCount)throw u}}),t(o,"channelCountMode",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelCountMode=c}),t(o,"channelInterpretation",a=>()=>a.call(o),a=>c=>{a.call(o,c),r.channelInterpretation=c}),Object.defineProperty(o,"maxChannelCount",{get:()=>r.maxChannelCount}),o.connect(r),o},fc=s=>s===null?null:s.hasOwnProperty("AudioWorkletNode")?s.AudioWorkletNode:null,mc=s=>{const{port1:t}=new MessageChannel;try{t.postMessage(s)}finally{t.close()}},_c=(s,t,e,n,i)=>(r,o,a,c,u,l)=>{if(a!==null)try{const h=new a(r,c,l),p=new Map;let f=null;if(Object.defineProperties(h,{channelCount:{get:()=>l.channelCount,set:()=>{throw s()}},channelCountMode:{get:()=>"explicit",set:()=>{throw s()}},onprocessorerror:{get:()=>f,set:d=>{typeof f=="function"&&h.removeEventListener("processorerror",f),f=typeof d=="function"?d:null,typeof f=="function"&&h.addEventListener("processorerror",f)}}}),h.addEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const g=typeof m[1]=="function"?m[1]:typeof m[1]=="object"&&m[1]!==null&&typeof m[1].handleEvent=="function"?m[1].handleEvent:null;if(g!==null){const y=p.get(m[1]);y!==void 0?m[1]=y:(m[1]=b=>{b.type==="error"?(Object.defineProperties(b,{type:{value:"processorerror"}}),g(b)):g(new ErrorEvent(m[0],{...b}))},p.set(g,m[1]))}}return d.call(h,"error",m[1],m[2]),d.call(h,...m)})(h.addEventListener),h.removeEventListener=(d=>(...m)=>{if(m[0]==="processorerror"){const g=p.get(m[1]);g!==void 0&&(p.delete(m[1]),m[1]=g)}return d.call(h,"error",m[1],m[2]),d.call(h,m[0],m[1],m[2])})(h.removeEventListener),l.numberOfOutputs!==0){const d=e(r,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return h.connect(d).connect(r.destination),i(h,()=>d.disconnect(),()=>d.connect(r.destination))}return h}catch(h){throw h.code===11?n():h}if(u===void 0)throw n();return mc(l),t(r,o,u,l)},zi=(s,t)=>s===null?512:Math.max(512,Math.min(16384,Math.pow(2,Math.round(Math.log2(s*t))))),gc=s=>new Promise((t,e)=>{const{port1:n,port2:i}=new MessageChannel;n.onmessage=({data:r})=>{n.close(),i.close(),t(r)},n.onmessageerror=({data:r})=>{n.close(),i.close(),e(r)},i.postMessage(s)}),yc=async(s,t)=>{const e=await gc(t);return new s(e)},vc=(s,t,e,n)=>{let i=bs.get(s);i===void 0&&(i=new WeakMap,bs.set(s,i));const r=yc(e,n);return i.set(t,r),r},wc=(s,t,e,n,i,r,o,a,c,u,l,h,p)=>(f,d,m,g)=>{if(g.numberOfInputs===0&&g.numberOfOutputs===0)throw c();const y=Array.isArray(g.outputChannelCount)?g.outputChannelCount:Array.from(g.outputChannelCount);if(y.some(E=>E<1))throw c();if(y.length!==g.numberOfOutputs)throw t();if(g.channelCountMode!=="explicit")throw c();const b=g.channelCount*g.numberOfInputs,k=y.reduce((E,L)=>E+L,0),S=m.parameterDescriptors===void 0?0:m.parameterDescriptors.length;if(b+S>6||k>6)throw c();const _=new MessageChannel,v=[],w=[];for(let E=0;E<g.numberOfInputs;E+=1)v.push(o(f,{channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation,gain:1})),w.push(i(f,{channelCount:g.channelCount,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:g.channelCount}));const T=[];if(m.parameterDescriptors!==void 0)for(const{defaultValue:E,maxValue:L,minValue:dt,name:rt}of m.parameterDescriptors){const X=r(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:g.parameterData[rt]!==void 0?g.parameterData[rt]:E===void 0?0:E});Object.defineProperties(X.offset,{defaultValue:{get:()=>E===void 0?0:E},maxValue:{get:()=>L===void 0?vt:L},minValue:{get:()=>dt===void 0?bt:dt}}),T.push(X)}const O=n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:Math.max(1,b+S)}),A=zi(d,f.sampleRate),N=a(f,A,b+S,Math.max(1,k)),C=i(f,{channelCount:Math.max(1,k),channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:Math.max(1,k)}),I=[];for(let E=0;E<g.numberOfOutputs;E+=1)I.push(n(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:y[E]}));for(let E=0;E<g.numberOfInputs;E+=1){v[E].connect(w[E]);for(let L=0;L<g.channelCount;L+=1)w[E].connect(O,L,E*g.channelCount+L)}const D=new Bi(m.parameterDescriptors===void 0?[]:m.parameterDescriptors.map(({name:E},L)=>{const dt=T[L];return dt.connect(O,0,b+L),dt.start(0),[E,dt.offset]}));O.connect(N);let W=g.channelInterpretation,M=null;const R=g.numberOfOutputs===0?[N]:I,G={get bufferSize(){return A},get channelCount(){return g.channelCount},set channelCount(E){throw e()},get channelCountMode(){return g.channelCountMode},set channelCountMode(E){throw e()},get channelInterpretation(){return W},set channelInterpretation(E){for(const L of v)L.channelInterpretation=E;W=E},get context(){return N.context},get inputs(){return v},get numberOfInputs(){return g.numberOfInputs},get numberOfOutputs(){return g.numberOfOutputs},get onprocessorerror(){return M},set onprocessorerror(E){typeof M=="function"&&G.removeEventListener("processorerror",M),M=typeof E=="function"?E:null,typeof M=="function"&&G.addEventListener("processorerror",M)},get parameters(){return D},get port(){return _.port2},addEventListener(...E){return N.addEventListener(E[0],E[1],E[2])},connect:s.bind(null,R),disconnect:u.bind(null,R),dispatchEvent(...E){return N.dispatchEvent(E[0])},removeEventListener(...E){return N.removeEventListener(E[0],E[1],E[2])}},q=new Map;_.port1.addEventListener=(E=>(...L)=>{if(L[0]==="message"){const dt=typeof L[1]=="function"?L[1]:typeof L[1]=="object"&&L[1]!==null&&typeof L[1].handleEvent=="function"?L[1].handleEvent:null;if(dt!==null){const rt=q.get(L[1]);rt!==void 0?L[1]=rt:(L[1]=X=>{l(f.currentTime,f.sampleRate,()=>dt(X))},q.set(dt,L[1]))}}return E.call(_.port1,L[0],L[1],L[2])})(_.port1.addEventListener),_.port1.removeEventListener=(E=>(...L)=>{if(L[0]==="message"){const dt=q.get(L[1]);dt!==void 0&&(q.delete(L[1]),L[1]=dt)}return E.call(_.port1,L[0],L[1],L[2])})(_.port1.removeEventListener);let B=null;Object.defineProperty(_.port1,"onmessage",{get:()=>B,set:E=>{typeof B=="function"&&_.port1.removeEventListener("message",B),B=typeof E=="function"?E:null,typeof B=="function"&&(_.port1.addEventListener("message",B),_.port1.start())}}),m.prototype.port=_.port1;let j=null;vc(f,G,m,g).then(E=>j=E);const At=jn(g.numberOfInputs,g.channelCount),kt=jn(g.numberOfOutputs,y),z=m.parameterDescriptors===void 0?[]:m.parameterDescriptors.reduce((E,{name:L})=>({...E,[L]:new Float32Array(128)}),{});let st=!0;const yt=()=>{g.numberOfOutputs>0&&N.disconnect(C);for(let E=0,L=0;E<g.numberOfOutputs;E+=1){const dt=I[E];for(let rt=0;rt<y[E];rt+=1)C.disconnect(dt,L+rt,rt);L+=y[E]}},P=new Map;N.onaudioprocess=({inputBuffer:E,outputBuffer:L})=>{if(j!==null){const dt=h(G);for(let rt=0;rt<A;rt+=128){for(let X=0;X<g.numberOfInputs;X+=1)for(let at=0;at<g.channelCount;at+=1)Ln(E,At[X],at,at,rt);m.parameterDescriptors!==void 0&&m.parameterDescriptors.forEach(({name:X},at)=>{Ln(E,z,X,b+at,rt)});for(let X=0;X<g.numberOfInputs;X+=1)for(let at=0;at<y[X];at+=1)kt[X][at].byteLength===0&&(kt[X][at]=new Float32Array(128));try{const X=At.map((Et,se)=>{if(dt[se].size>0)return P.set(se,A/128),Et;const fs=P.get(se);return fs===void 0?[]:(Et.every(qr=>qr.every(Wr=>Wr===0))&&(fs===1?P.delete(se):P.set(se,fs-1)),Et)});st=l(f.currentTime+rt/f.sampleRate,f.sampleRate,()=>j.process(X,kt,z));for(let Et=0,se=0;Et<g.numberOfOutputs;Et+=1){for(let Xe=0;Xe<y[Et];Xe+=1)Ui(L,kt[Et],Xe,se+Xe,rt);se+=y[Et]}}catch(X){st=!1,G.dispatchEvent(new ErrorEvent("processorerror",{colno:X.colno,filename:X.filename,lineno:X.lineno,message:X.message}))}if(!st){for(let X=0;X<g.numberOfInputs;X+=1){v[X].disconnect(w[X]);for(let at=0;at<g.channelCount;at+=1)w[rt].disconnect(O,at,X*g.channelCount+at)}if(m.parameterDescriptors!==void 0){const X=m.parameterDescriptors.length;for(let at=0;at<X;at+=1){const Et=T[at];Et.disconnect(O,0,b+at),Et.stop()}}O.disconnect(N),N.onaudioprocess=null,he?yt():Oe();break}}}};let he=!1;const de=o(f,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0}),Ne=()=>N.connect(de).connect(f.destination),Oe=()=>{N.disconnect(de),de.disconnect()},Pr=()=>{if(st){Oe(),g.numberOfOutputs>0&&N.connect(C);for(let E=0,L=0;E<g.numberOfOutputs;E+=1){const dt=I[E];for(let rt=0;rt<y[E];rt+=1)C.connect(dt,L+rt,rt);L+=y[E]}}he=!0},Fr=()=>{st&&(Ne(),yt()),he=!1};return Ne(),p(G,Pr,Fr)},$i=(s,t)=>{const e=s.createBiquadFilter();return pt(e,t),ct(e,t,"Q"),ct(e,t,"detune"),ct(e,t,"frequency"),ct(e,t,"gain"),it(e,t,"type"),e},Tc=(s,t)=>(e,n)=>{const i=e.createChannelMerger(n.numberOfInputs);return s!==null&&s.name==="webkitAudioContext"&&t(e,i),pt(i,n),i},bc=s=>{const t=s.numberOfOutputs;Object.defineProperty(s,"channelCount",{get:()=>t,set:e=>{if(e!==t)throw ft()}}),Object.defineProperty(s,"channelCountMode",{get:()=>"explicit",set:e=>{if(e!=="explicit")throw ft()}}),Object.defineProperty(s,"channelInterpretation",{get:()=>"discrete",set:e=>{if(e!=="discrete")throw ft()}})},Tn=(s,t)=>{const e=s.createChannelSplitter(t.numberOfOutputs);return pt(e,t),bc(e),e},xc=(s,t,e,n,i)=>(r,o)=>{if(r.createConstantSource===void 0)return e(r,o);const a=r.createConstantSource();return pt(a,o),ct(a,o,"offset"),t(n,()=>n(r))||qs(a),t(i,()=>i(r))||Ws(a),s(r,a),a},Ge=(s,t)=>(s.connect=t.connect.bind(t),s.disconnect=t.disconnect.bind(t),s),Cc=(s,t,e,n)=>(i,{offset:r,...o})=>{const a=i.createBuffer(1,2,44100),c=t(i,{buffer:null,channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",loop:!1,loopEnd:0,loopStart:0,playbackRate:1}),u=e(i,{...o,gain:r}),l=a.getChannelData(0);l[0]=1,l[1]=1,c.buffer=a,c.loop=!0;const h={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(d){u.channelCount=d},get channelCountMode(){return u.channelCountMode},set channelCountMode(d){u.channelCountMode=d},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(d){u.channelInterpretation=d},get context(){return u.context},get inputs(){return[]},get numberOfInputs(){return c.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get offset(){return u.gain},get onended(){return c.onended},set onended(d){c.onended=d},addEventListener(...d){return c.addEventListener(d[0],d[1],d[2])},dispatchEvent(...d){return c.dispatchEvent(d[0])},removeEventListener(...d){return c.removeEventListener(d[0],d[1],d[2])},start(d=0){c.start.call(c,d)},stop(d=0){c.stop.call(c,d)}},p=()=>c.connect(u),f=()=>c.disconnect(u);return s(i,c),n(Ge(h,u),p,f)},Sc=(s,t)=>(e,n)=>{const i=e.createConvolver();if(pt(i,n),n.disableNormalization===i.normalize&&(i.normalize=!n.disableNormalization),it(i,n,"buffer"),n.channelCount>2||(t(i,"channelCount",r=>()=>r.call(i),r=>o=>{if(o>2)throw s();return r.call(i,o)}),n.channelCountMode==="max"))throw s();return t(i,"channelCountMode",r=>()=>r.call(i),r=>o=>{if(o==="max")throw s();return r.call(i,o)}),i},Zi=(s,t)=>{const e=s.createDelay(t.maxDelayTime);return pt(e,t),ct(e,t,"delayTime"),e},Ac=s=>(t,e)=>{const n=t.createDynamicsCompressor();if(pt(n,e),e.channelCount>2||e.channelCountMode==="max")throw s();return ct(n,e,"attack"),ct(n,e,"knee"),ct(n,e,"ratio"),ct(n,e,"release"),ct(n,e,"threshold"),n},St=(s,t)=>{const e=s.createGain();return pt(e,t),ct(e,t,"gain"),e},kc=s=>(t,e,n)=>{if(t.createIIRFilter===void 0)return s(t,e,n);const i=t.createIIRFilter(n.feedforward,n.feedback);return pt(i,n),i};function Nc(s,t){const e=t[0]*t[0]+t[1]*t[1];return[(s[0]*t[0]+s[1]*t[1])/e,(s[1]*t[0]-s[0]*t[1])/e]}function Oc(s,t){return[s[0]*t[0]-s[1]*t[1],s[0]*t[1]+s[1]*t[0]]}function vi(s,t){let e=[0,0];for(let n=s.length-1;n>=0;n-=1)e=Oc(e,t),e[0]+=s[n];return e}const Dc=(s,t,e,n)=>(i,r,{channelCount:o,channelCountMode:a,channelInterpretation:c,feedback:u,feedforward:l})=>{const h=zi(r,i.sampleRate),p=u instanceof Float64Array?u:new Float64Array(u),f=l instanceof Float64Array?l:new Float64Array(l),d=p.length,m=f.length,g=Math.min(d,m);if(d===0||d>20)throw n();if(p[0]===0)throw t();if(m===0||m>20)throw n();if(f[0]===0)throw t();if(p[0]!==1){for(let T=0;T<m;T+=1)f[T]/=p[0];for(let T=1;T<d;T+=1)p[T]/=p[0]}const y=e(i,h,o,o);y.channelCount=o,y.channelCountMode=a,y.channelInterpretation=c;const b=32,k=[],S=[],_=[];for(let T=0;T<o;T+=1){k.push(0);const O=new Float32Array(b),A=new Float32Array(b);O.fill(0),A.fill(0),S.push(O),_.push(A)}y.onaudioprocess=T=>{const O=T.inputBuffer,A=T.outputBuffer,N=O.numberOfChannels;for(let C=0;C<N;C+=1){const I=O.getChannelData(C),D=A.getChannelData(C);k[C]=Gi(p,d,f,m,g,S[C],_[C],k[C],b,I,D)}};const v=i.sampleRate/2;return Ge({get bufferSize(){return h},get channelCount(){return y.channelCount},set channelCount(T){y.channelCount=T},get channelCountMode(){return y.channelCountMode},set channelCountMode(T){y.channelCountMode=T},get channelInterpretation(){return y.channelInterpretation},set channelInterpretation(T){y.channelInterpretation=T},get context(){return y.context},get inputs(){return[y]},get numberOfInputs(){return y.numberOfInputs},get numberOfOutputs(){return y.numberOfOutputs},addEventListener(...T){return y.addEventListener(T[0],T[1],T[2])},dispatchEvent(...T){return y.dispatchEvent(T[0])},getFrequencyResponse(T,O,A){if(T.length!==O.length||O.length!==A.length)throw s();const N=T.length;for(let C=0;C<N;C+=1){const I=-Math.PI*(T[C]/v),D=[Math.cos(I),Math.sin(I)],W=vi(f,D),M=vi(p,D),R=Nc(W,M);O[C]=Math.sqrt(R[0]*R[0]+R[1]*R[1]),A[C]=Math.atan2(R[1],R[0])}},removeEventListener(...T){return y.removeEventListener(T[0],T[1],T[2])}},y)},Ec=(s,t)=>s.createMediaElementSource(t.mediaElement),Ic=(s,t)=>{const e=s.createMediaStreamDestination();return pt(e,t),e.numberOfOutputs===1&&Object.defineProperty(e,"numberOfOutputs",{get:()=>0}),e},Mc=(s,{mediaStream:t})=>{const e=t.getAudioTracks();e.sort((r,o)=>r.id<o.id?-1:r.id>o.id?1:0);const n=e.slice(0,1),i=s.createMediaStreamSource(new MediaStream(n));return Object.defineProperty(i,"mediaStream",{value:t}),i},Rc=(s,t)=>(e,{mediaStreamTrack:n})=>{if(typeof e.createMediaStreamTrackSource=="function")return e.createMediaStreamTrackSource(n);const i=new MediaStream([n]),r=e.createMediaStreamSource(i);if(n.kind!=="audio")throw s();if(t(e))throw new TypeError;return r},Vc=s=>s===null?null:s.hasOwnProperty("OfflineAudioContext")?s.OfflineAudioContext:s.hasOwnProperty("webkitOfflineAudioContext")?s.webkitOfflineAudioContext:null,Pc=(s,t,e,n,i,r)=>(o,a)=>{const c=o.createOscillator();return pt(c,a),ct(c,a,"detune"),ct(c,a,"frequency"),a.periodicWave!==void 0?c.setPeriodicWave(a.periodicWave):it(c,a,"type"),t(e,()=>e(o))||qs(c),t(n,()=>n(o))||r(c,o),t(i,()=>i(o))||Ws(c),s(o,c),c},Fc=s=>(t,e)=>{const n=t.createPanner();return n.orientationX===void 0?s(t,e):(pt(n,e),ct(n,e,"orientationX"),ct(n,e,"orientationY"),ct(n,e,"orientationZ"),ct(n,e,"positionX"),ct(n,e,"positionY"),ct(n,e,"positionZ"),it(n,e,"coneInnerAngle"),it(n,e,"coneOuterAngle"),it(n,e,"coneOuterGain"),it(n,e,"distanceModel"),it(n,e,"maxDistance"),it(n,e,"panningModel"),it(n,e,"refDistance"),it(n,e,"rolloffFactor"),n)},qc=(s,t,e,n,i,r,o,a,c,u)=>(l,{coneInnerAngle:h,coneOuterAngle:p,coneOuterGain:f,distanceModel:d,maxDistance:m,orientationX:g,orientationY:y,orientationZ:b,panningModel:k,positionX:S,positionY:_,positionZ:v,refDistance:w,rolloffFactor:T,...O})=>{const A=l.createPanner();if(O.channelCount>2||O.channelCountMode==="max")throw o();pt(A,O);const N={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},C=e(l,{...N,channelInterpretation:"speakers",numberOfInputs:6}),I=n(l,{...O,gain:1}),D=n(l,{...N,gain:1}),W=n(l,{...N,gain:0}),M=n(l,{...N,gain:0}),R=n(l,{...N,gain:0}),G=n(l,{...N,gain:0}),q=n(l,{...N,gain:0}),B=i(l,256,6,1),j=r(l,{...N,curve:new Float32Array([1,1]),oversample:"none"});let H=[g,y,b],At=[S,_,v];const kt=new Float32Array(1);B.onaudioprocess=({inputBuffer:P})=>{const he=[c(P,kt,0),c(P,kt,1),c(P,kt,2)];he.some((Ne,Oe)=>Ne!==H[Oe])&&(A.setOrientation(...he),H=he);const de=[c(P,kt,3),c(P,kt,4),c(P,kt,5)];de.some((Ne,Oe)=>Ne!==At[Oe])&&(A.setPosition(...de),At=de)},Object.defineProperty(W.gain,"defaultValue",{get:()=>0}),Object.defineProperty(M.gain,"defaultValue",{get:()=>0}),Object.defineProperty(R.gain,"defaultValue",{get:()=>0}),Object.defineProperty(G.gain,"defaultValue",{get:()=>0}),Object.defineProperty(q.gain,"defaultValue",{get:()=>0});const z={get bufferSize(){},get channelCount(){return A.channelCount},set channelCount(P){if(P>2)throw o();I.channelCount=P,A.channelCount=P},get channelCountMode(){return A.channelCountMode},set channelCountMode(P){if(P==="max")throw o();I.channelCountMode=P,A.channelCountMode=P},get channelInterpretation(){return A.channelInterpretation},set channelInterpretation(P){I.channelInterpretation=P,A.channelInterpretation=P},get coneInnerAngle(){return A.coneInnerAngle},set coneInnerAngle(P){A.coneInnerAngle=P},get coneOuterAngle(){return A.coneOuterAngle},set coneOuterAngle(P){A.coneOuterAngle=P},get coneOuterGain(){return A.coneOuterGain},set coneOuterGain(P){if(P<0||P>1)throw t();A.coneOuterGain=P},get context(){return A.context},get distanceModel(){return A.distanceModel},set distanceModel(P){A.distanceModel=P},get inputs(){return[I]},get maxDistance(){return A.maxDistance},set maxDistance(P){if(P<0)throw new RangeError;A.maxDistance=P},get numberOfInputs(){return A.numberOfInputs},get numberOfOutputs(){return A.numberOfOutputs},get orientationX(){return D.gain},get orientationY(){return W.gain},get orientationZ(){return M.gain},get panningModel(){return A.panningModel},set panningModel(P){A.panningModel=P},get positionX(){return R.gain},get positionY(){return G.gain},get positionZ(){return q.gain},get refDistance(){return A.refDistance},set refDistance(P){if(P<0)throw new RangeError;A.refDistance=P},get rolloffFactor(){return A.rolloffFactor},set rolloffFactor(P){if(P<0)throw new RangeError;A.rolloffFactor=P},addEventListener(...P){return I.addEventListener(P[0],P[1],P[2])},dispatchEvent(...P){return I.dispatchEvent(P[0])},removeEventListener(...P){return I.removeEventListener(P[0],P[1],P[2])}};h!==z.coneInnerAngle&&(z.coneInnerAngle=h),p!==z.coneOuterAngle&&(z.coneOuterAngle=p),f!==z.coneOuterGain&&(z.coneOuterGain=f),d!==z.distanceModel&&(z.distanceModel=d),m!==z.maxDistance&&(z.maxDistance=m),g!==z.orientationX.value&&(z.orientationX.value=g),y!==z.orientationY.value&&(z.orientationY.value=y),b!==z.orientationZ.value&&(z.orientationZ.value=b),k!==z.panningModel&&(z.panningModel=k),S!==z.positionX.value&&(z.positionX.value=S),_!==z.positionY.value&&(z.positionY.value=_),v!==z.positionZ.value&&(z.positionZ.value=v),w!==z.refDistance&&(z.refDistance=w),T!==z.rolloffFactor&&(z.rolloffFactor=T),(H[0]!==1||H[1]!==0||H[2]!==0)&&A.setOrientation(...H),(At[0]!==0||At[1]!==0||At[2]!==0)&&A.setPosition(...At);const st=()=>{I.connect(A),s(I,j,0,0),j.connect(D).connect(C,0,0),j.connect(W).connect(C,0,1),j.connect(M).connect(C,0,2),j.connect(R).connect(C,0,3),j.connect(G).connect(C,0,4),j.connect(q).connect(C,0,5),C.connect(B).connect(l.destination)},yt=()=>{I.disconnect(A),a(I,j,0,0),j.disconnect(D),D.disconnect(C),j.disconnect(W),W.disconnect(C),j.disconnect(M),M.disconnect(C),j.disconnect(R),R.disconnect(C),j.disconnect(G),G.disconnect(C),j.disconnect(q),q.disconnect(C),C.disconnect(B),B.disconnect(l.destination)};return u(Ge(z,A),st,yt)},Wc=s=>(t,{disableNormalization:e,imag:n,real:i})=>{const r=n instanceof Float32Array?n:new Float32Array(n),o=i instanceof Float32Array?i:new Float32Array(i),a=t.createPeriodicWave(o,r,{disableNormalization:e});if(Array.from(n).length<2)throw s();return a},bn=(s,t,e,n)=>s.createScriptProcessor(t,e,n),Lc=(s,t)=>(e,n)=>{const i=n.channelCountMode;if(i==="clamped-max")throw t();if(e.createStereoPanner===void 0)return s(e,n);const r=e.createStereoPanner();return pt(r,n),ct(r,n,"pan"),Object.defineProperty(r,"channelCountMode",{get:()=>i,set:o=>{if(o!==i)throw t()}}),r},jc=(s,t,e,n,i,r)=>{const a=new Float32Array([1,1]),c=Math.PI/2,u={channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete"},l={...u,oversample:"none"},h=(d,m,g,y)=>{const b=new Float32Array(16385),k=new Float32Array(16385);for(let O=0;O<16385;O+=1){const A=O/16384*c;b[O]=Math.cos(A),k[O]=Math.sin(A)}const S=e(d,{...u,gain:0}),_=n(d,{...l,curve:b}),v=n(d,{...l,curve:a}),w=e(d,{...u,gain:0}),T=n(d,{...l,curve:k});return{connectGraph(){m.connect(S),m.connect(v.inputs===void 0?v:v.inputs[0]),m.connect(w),v.connect(g),g.connect(_.inputs===void 0?_:_.inputs[0]),g.connect(T.inputs===void 0?T:T.inputs[0]),_.connect(S.gain),T.connect(w.gain),S.connect(y,0,0),w.connect(y,0,1)},disconnectGraph(){m.disconnect(S),m.disconnect(v.inputs===void 0?v:v.inputs[0]),m.disconnect(w),v.disconnect(g),g.disconnect(_.inputs===void 0?_:_.inputs[0]),g.disconnect(T.inputs===void 0?T:T.inputs[0]),_.disconnect(S.gain),T.disconnect(w.gain),S.disconnect(y,0,0),w.disconnect(y,0,1)}}},p=(d,m,g,y)=>{const b=new Float32Array(16385),k=new Float32Array(16385),S=new Float32Array(16385),_=new Float32Array(16385),v=Math.floor(16385/2);for(let R=0;R<16385;R+=1)if(R>v){const G=(R-v)/(16384-v)*c;b[R]=Math.cos(G),k[R]=Math.sin(G),S[R]=0,_[R]=1}else{const G=R/(16384-v)*c;b[R]=1,k[R]=0,S[R]=Math.cos(G),_[R]=Math.sin(G)}const w=t(d,{channelCount:2,channelCountMode:"explicit",channelInterpretation:"discrete",numberOfOutputs:2}),T=e(d,{...u,gain:0}),O=n(d,{...l,curve:b}),A=e(d,{...u,gain:0}),N=n(d,{...l,curve:k}),C=n(d,{...l,curve:a}),I=e(d,{...u,gain:0}),D=n(d,{...l,curve:S}),W=e(d,{...u,gain:0}),M=n(d,{...l,curve:_});return{connectGraph(){m.connect(w),m.connect(C.inputs===void 0?C:C.inputs[0]),w.connect(T,0),w.connect(A,0),w.connect(I,1),w.connect(W,1),C.connect(g),g.connect(O.inputs===void 0?O:O.inputs[0]),g.connect(N.inputs===void 0?N:N.inputs[0]),g.connect(D.inputs===void 0?D:D.inputs[0]),g.connect(M.inputs===void 0?M:M.inputs[0]),O.connect(T.gain),N.connect(A.gain),D.connect(I.gain),M.connect(W.gain),T.connect(y,0,0),I.connect(y,0,0),A.connect(y,0,1),W.connect(y,0,1)},disconnectGraph(){m.disconnect(w),m.disconnect(C.inputs===void 0?C:C.inputs[0]),w.disconnect(T,0),w.disconnect(A,0),w.disconnect(I,1),w.disconnect(W,1),C.disconnect(g),g.disconnect(O.inputs===void 0?O:O.inputs[0]),g.disconnect(N.inputs===void 0?N:N.inputs[0]),g.disconnect(D.inputs===void 0?D:D.inputs[0]),g.disconnect(M.inputs===void 0?M:M.inputs[0]),O.disconnect(T.gain),N.disconnect(A.gain),D.disconnect(I.gain),M.disconnect(W.gain),T.disconnect(y,0,0),I.disconnect(y,0,0),A.disconnect(y,0,1),W.disconnect(y,0,1)}}},f=(d,m,g,y,b)=>{if(m===1)return h(d,g,y,b);if(m===2)return p(d,g,y,b);throw i()};return(d,{channelCount:m,channelCountMode:g,pan:y,...b})=>{if(g==="max")throw i();const k=s(d,{...b,channelCount:1,channelCountMode:g,numberOfInputs:2}),S=e(d,{...b,channelCount:m,channelCountMode:g,gain:1}),_=e(d,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:y});let{connectGraph:v,disconnectGraph:w}=f(d,m,S,_,k);Object.defineProperty(_.gain,"defaultValue",{get:()=>0}),Object.defineProperty(_.gain,"maxValue",{get:()=>1}),Object.defineProperty(_.gain,"minValue",{get:()=>-1});const T={get bufferSize(){},get channelCount(){return S.channelCount},set channelCount(C){S.channelCount!==C&&(O&&w(),{connectGraph:v,disconnectGraph:w}=f(d,C,S,_,k),O&&v()),S.channelCount=C},get channelCountMode(){return S.channelCountMode},set channelCountMode(C){if(C==="clamped-max"||C==="max")throw i();S.channelCountMode=C},get channelInterpretation(){return S.channelInterpretation},set channelInterpretation(C){S.channelInterpretation=C},get context(){return S.context},get inputs(){return[S]},get numberOfInputs(){return S.numberOfInputs},get numberOfOutputs(){return S.numberOfOutputs},get pan(){return _.gain},addEventListener(...C){return S.addEventListener(C[0],C[1],C[2])},dispatchEvent(...C){return S.dispatchEvent(C[0])},removeEventListener(...C){return S.removeEventListener(C[0],C[1],C[2])}};let O=!1;const A=()=>{v(),O=!0},N=()=>{w(),O=!1};return r(Ge(T,k),A,N)}},Bc=(s,t,e,n,i,r,o)=>(a,c)=>{const u=a.createWaveShaper();if(r!==null&&r.name==="webkitAudioContext"&&a.createGain().gain.automationRate===void 0)return e(a,c);pt(u,c);const l=c.curve===null||c.curve instanceof Float32Array?c.curve:new Float32Array(c.curve);if(l!==null&&l.length<2)throw t();it(u,{curve:l},"curve"),it(u,c,"oversample");let h=null,p=!1;return o(u,"curve",m=>()=>m.call(u),m=>g=>(m.call(u,g),p&&(n(g)&&h===null?h=s(a,u):!n(g)&&h!==null&&(h(),h=null)),g)),i(u,()=>{p=!0,n(u.curve)&&(h=s(a,u))},()=>{p=!1,h!==null&&(h(),h=null)})},Uc=(s,t,e,n,i)=>(r,{curve:o,oversample:a,...c})=>{const u=r.createWaveShaper(),l=r.createWaveShaper();pt(u,c),pt(l,c);const h=e(r,{...c,gain:1}),p=e(r,{...c,gain:-1}),f=e(r,{...c,gain:1}),d=e(r,{...c,gain:-1});let m=null,g=!1,y=null;const b={get bufferSize(){},get channelCount(){return u.channelCount},set channelCount(_){h.channelCount=_,p.channelCount=_,u.channelCount=_,f.channelCount=_,l.channelCount=_,d.channelCount=_},get channelCountMode(){return u.channelCountMode},set channelCountMode(_){h.channelCountMode=_,p.channelCountMode=_,u.channelCountMode=_,f.channelCountMode=_,l.channelCountMode=_,d.channelCountMode=_},get channelInterpretation(){return u.channelInterpretation},set channelInterpretation(_){h.channelInterpretation=_,p.channelInterpretation=_,u.channelInterpretation=_,f.channelInterpretation=_,l.channelInterpretation=_,d.channelInterpretation=_},get context(){return u.context},get curve(){return y},set curve(_){if(_!==null&&_.length<2)throw t();if(_===null)u.curve=_,l.curve=_;else{const v=_.length,w=new Float32Array(v+2-v%2),T=new Float32Array(v+2-v%2);w[0]=_[0],T[0]=-_[v-1];const O=Math.ceil((v+1)/2),A=(v+1)/2-1;for(let N=1;N<O;N+=1){const C=N/O*A,I=Math.floor(C),D=Math.ceil(C);w[N]=I===D?_[I]:(1-(C-I))*_[I]+(1-(D-C))*_[D],T[N]=I===D?-_[v-1-I]:-((1-(C-I))*_[v-1-I])-(1-(D-C))*_[v-1-D]}w[O]=v%2===1?_[O-1]:(_[O-2]+_[O-1])/2,u.curve=w,l.curve=T}y=_,g&&(n(y)&&m===null?m=s(r,h):m!==null&&(m(),m=null))},get inputs(){return[h]},get numberOfInputs(){return u.numberOfInputs},get numberOfOutputs(){return u.numberOfOutputs},get oversample(){return u.oversample},set oversample(_){u.oversample=_,l.oversample=_},addEventListener(..._){return h.addEventListener(_[0],_[1],_[2])},dispatchEvent(..._){return h.dispatchEvent(_[0])},removeEventListener(..._){return h.removeEventListener(_[0],_[1],_[2])}};o!==null&&(b.curve=o instanceof Float32Array?o:new Float32Array(o)),a!==b.oversample&&(b.oversample=a);const k=()=>{h.connect(u).connect(f),h.connect(p).connect(l).connect(d).connect(f),g=!0,n(y)&&(m=s(r,h))},S=()=>{h.disconnect(u),u.disconnect(f),h.disconnect(p),p.disconnect(l),l.disconnect(d),d.disconnect(f),g=!1,m!==null&&(m(),m=null)};return i(Ge(b,f),k,S)},Tt=()=>new DOMException("","NotSupportedError"),Gc={numberOfChannels:1},zc=(s,t,e,n,i)=>class extends s{constructor(o,a,c){let u;if(typeof o=="number"&&a!==void 0&&c!==void 0)u={length:a,numberOfChannels:o,sampleRate:c};else if(typeof o=="object")u=o;else throw new Error("The given parameters are not valid.");const{length:l,numberOfChannels:h,sampleRate:p}={...Gc,...u},f=n(h,l,p);t(Qe,()=>Qe(f))||f.addEventListener("statechange",(()=>{let d=0;const m=g=>{this._state==="running"&&(d>0?(f.removeEventListener("statechange",m),g.stopImmediatePropagation(),this._waitForThePromiseToSettle(g)):d+=1)};return m})()),super(f,h),this._length=l,this._nativeOfflineAudioContext=f,this._state=null}get length(){return this._nativeOfflineAudioContext.length===void 0?this._length:this._nativeOfflineAudioContext.length}get state(){return this._state===null?this._nativeOfflineAudioContext.state:this._state}startRendering(){return this._state==="running"?Promise.reject(e()):(this._state="running",i(this.destination,this._nativeOfflineAudioContext).finally(()=>{this._state=null,qi(this)}))}_waitForThePromiseToSettle(o){this._state===null?this._nativeOfflineAudioContext.dispatchEvent(o):setTimeout(()=>this._waitForThePromiseToSettle(o))}},$c={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",detune:0,frequency:440,periodicWave:void 0,type:"sine"},Zc=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...$c,...u},p=e(l,h),f=r(l),d=f?n():null,m=c.sampleRate/2;super(c,!1,p,d),this._detune=t(this,f,p.detune,153600,-153600),this._frequency=t(this,f,p.frequency,m,-m),this._nativeOscillatorNode=p,this._onended=null,this._oscillatorNodeRenderer=d,this._oscillatorNodeRenderer!==null&&h.periodicWave!==void 0&&(this._oscillatorNodeRenderer.periodicWave=h.periodicWave)}get detune(){return this._detune}get frequency(){return this._frequency}get onended(){return this._onended}set onended(c){const u=typeof c=="function"?o(this,c):null;this._nativeOscillatorNode.onended=u;const l=this._nativeOscillatorNode.onended;this._onended=l!==null&&l===u?c:l}get type(){return this._nativeOscillatorNode.type}set type(c){this._nativeOscillatorNode.type=c,this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=null)}setPeriodicWave(c){this._nativeOscillatorNode.setPeriodicWave(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.periodicWave=c)}start(c=0){if(this._nativeOscillatorNode.start(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.start=c),this.context.state!=="closed"){Pe(this);const u=()=>{this._nativeOscillatorNode.removeEventListener("ended",u),Yt(this)&&yn(this)};this._nativeOscillatorNode.addEventListener("ended",u)}}stop(c=0){this._nativeOscillatorNode.stop(c),this._oscillatorNodeRenderer!==null&&(this._oscillatorNodeRenderer.stop=c)}},Xc=(s,t,e,n,i)=>()=>{const r=new WeakMap;let o=null,a=null,c=null;const u=async(l,h)=>{let p=e(l);const f=gt(p,h);if(!f){const d={channelCount:p.channelCount,channelCountMode:p.channelCountMode,channelInterpretation:p.channelInterpretation,detune:p.detune.value,frequency:p.frequency.value,periodicWave:o===null?void 0:o,type:p.type};p=t(h,d),a!==null&&p.start(a),c!==null&&p.stop(c)}return r.set(h,p),f?(await s(h,l.detune,p.detune),await s(h,l.frequency,p.frequency)):(await n(h,l.detune,p.detune),await n(h,l.frequency,p.frequency)),await i(l,h,p),p};return{set periodicWave(l){o=l},set start(l){a=l},set stop(l){c=l},render(l,h){const p=r.get(h);return p!==void 0?Promise.resolve(p):u(l,h)}}},Yc={channelCount:2,channelCountMode:"clamped-max",channelInterpretation:"speakers",coneInnerAngle:360,coneOuterAngle:360,coneOuterGain:0,distanceModel:"inverse",maxDistance:1e4,orientationX:1,orientationY:0,orientationZ:0,panningModel:"equalpower",positionX:0,positionY:0,positionZ:0,refDistance:1,rolloffFactor:1},Hc=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...Yc,...u},p=e(l,h),f=r(l),d=f?n():null;super(c,!1,p,d),this._nativePannerNode=p,this._orientationX=t(this,f,p.orientationX,vt,bt),this._orientationY=t(this,f,p.orientationY,vt,bt),this._orientationZ=t(this,f,p.orientationZ,vt,bt),this._positionX=t(this,f,p.positionX,vt,bt),this._positionY=t(this,f,p.positionY,vt,bt),this._positionZ=t(this,f,p.positionZ,vt,bt),o(this,1)}get coneInnerAngle(){return this._nativePannerNode.coneInnerAngle}set coneInnerAngle(c){this._nativePannerNode.coneInnerAngle=c}get coneOuterAngle(){return this._nativePannerNode.coneOuterAngle}set coneOuterAngle(c){this._nativePannerNode.coneOuterAngle=c}get coneOuterGain(){return this._nativePannerNode.coneOuterGain}set coneOuterGain(c){this._nativePannerNode.coneOuterGain=c}get distanceModel(){return this._nativePannerNode.distanceModel}set distanceModel(c){this._nativePannerNode.distanceModel=c}get maxDistance(){return this._nativePannerNode.maxDistance}set maxDistance(c){this._nativePannerNode.maxDistance=c}get orientationX(){return this._orientationX}get orientationY(){return this._orientationY}get orientationZ(){return this._orientationZ}get panningModel(){return this._nativePannerNode.panningModel}set panningModel(c){this._nativePannerNode.panningModel=c}get positionX(){return this._positionX}get positionY(){return this._positionY}get positionZ(){return this._positionZ}get refDistance(){return this._nativePannerNode.refDistance}set refDistance(c){this._nativePannerNode.refDistance=c}get rolloffFactor(){return this._nativePannerNode.rolloffFactor}set rolloffFactor(c){this._nativePannerNode.rolloffFactor=c}},Qc=(s,t,e,n,i,r,o,a,c,u)=>()=>{const l=new WeakMap;let h=null;const p=async(f,d)=>{let m=null,g=r(f);const y={channelCount:g.channelCount,channelCountMode:g.channelCountMode,channelInterpretation:g.channelInterpretation},b={...y,coneInnerAngle:g.coneInnerAngle,coneOuterAngle:g.coneOuterAngle,coneOuterGain:g.coneOuterGain,distanceModel:g.distanceModel,maxDistance:g.maxDistance,panningModel:g.panningModel,refDistance:g.refDistance,rolloffFactor:g.rolloffFactor},k=gt(g,d);if("bufferSize"in g)m=n(d,{...y,gain:1});else if(!k){const S={...b,orientationX:g.orientationX.value,orientationY:g.orientationY.value,orientationZ:g.orientationZ.value,positionX:g.positionX.value,positionY:g.positionY.value,positionZ:g.positionZ.value};g=i(d,S)}if(l.set(d,m===null?g:m),m!==null){if(h===null){if(o===null)throw new Error("Missing the native OfflineAudioContext constructor.");const N=new o(6,f.context.length,d.sampleRate),C=t(N,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"speakers",numberOfInputs:6});C.connect(N.destination),h=(async()=>{const I=await Promise.all([f.orientationX,f.orientationY,f.orientationZ,f.positionX,f.positionY,f.positionZ].map(async(D,W)=>{const M=e(N,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",offset:W===0?1:0});return await a(N,D,M.offset),M}));for(let D=0;D<6;D+=1)I[D].connect(C,0,D),I[D].start(0);return u(N)})()}const S=await h,_=n(d,{...y,gain:1});await c(f,d,_);const v=[];for(let N=0;N<S.numberOfChannels;N+=1)v.push(S.getChannelData(N));let w=[v[0][0],v[1][0],v[2][0]],T=[v[3][0],v[4][0],v[5][0]],O=n(d,{...y,gain:1}),A=i(d,{...b,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:T[0],positionY:T[1],positionZ:T[2]});_.connect(O).connect(A.inputs[0]),A.connect(m);for(let N=128;N<S.length;N+=128){const C=[v[0][N],v[1][N],v[2][N]],I=[v[3][N],v[4][N],v[5][N]];if(C.some((D,W)=>D!==w[W])||I.some((D,W)=>D!==T[W])){w=C,T=I;const D=N/d.sampleRate;O.gain.setValueAtTime(0,D),O=n(d,{...y,gain:0}),A=i(d,{...b,orientationX:w[0],orientationY:w[1],orientationZ:w[2],positionX:T[0],positionY:T[1],positionZ:T[2]}),O.gain.setValueAtTime(1,D),_.connect(O).connect(A.inputs[0]),A.connect(m)}}return m}return k?(await s(d,f.orientationX,g.orientationX),await s(d,f.orientationY,g.orientationY),await s(d,f.orientationZ,g.orientationZ),await s(d,f.positionX,g.positionX),await s(d,f.positionY,g.positionY),await s(d,f.positionZ,g.positionZ)):(await a(d,f.orientationX,g.orientationX),await a(d,f.orientationY,g.orientationY),await a(d,f.orientationZ,g.orientationZ),await a(d,f.positionX,g.positionX),await a(d,f.positionY,g.positionY),await a(d,f.positionZ,g.positionZ)),Ue(g)?await c(f,d,g.inputs[0]):await c(f,d,g),g};return{render(f,d){const m=l.get(d);return m!==void 0?Promise.resolve(m):p(f,d)}}},Jc={disableNormalization:!1},Kc=(s,t,e,n)=>class Xi{constructor(r,o){const a=t(r),c=n({...Jc,...o}),u=s(a,c);return e.add(u),u}static[Symbol.hasInstance](r){return r!==null&&typeof r=="object"&&Object.getPrototypeOf(r)===Xi.prototype||e.has(r)}},tu=(s,t)=>(e,n,i)=>(s(n).replay(i),t(n,e,i)),eu=(s,t,e)=>async(n,i,r)=>{const o=s(n);await Promise.all(o.activeInputs.map((a,c)=>Array.from(a).map(async([u,l])=>{const p=await t(u).render(u,i),f=n.context.destination;!e(u)&&(n!==f||!e(n))&&p.connect(r,l,c)})).reduce((a,c)=>[...a,...c],[]))},nu=(s,t,e)=>async(n,i,r)=>{const o=t(n);await Promise.all(Array.from(o.activeInputs).map(async([a,c])=>{const l=await s(a).render(a,i);e(a)||l.connect(r,c)}))},su=(s,t,e,n)=>i=>s(Qe,()=>Qe(i))?Promise.resolve(s(n,n)).then(r=>{if(!r){const o=e(i,512,0,1);i.oncomplete=()=>{o.onaudioprocess=null,o.disconnect()},o.onaudioprocess=()=>i.currentTime,o.connect(i.destination)}return i.startRendering()}):new Promise(r=>{const o=t(i,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});i.oncomplete=a=>{o.disconnect(),r(a.renderedBuffer)},o.connect(i.destination),i.startRendering()}),iu=s=>(t,e)=>{s.set(t,e)},ru=s=>(t,e)=>s.set(t,e),ou=(s,t,e,n,i,r,o,a)=>(c,u)=>e(c).render(c,u).then(()=>Promise.all(Array.from(n(u)).map(l=>e(l).render(l,u)))).then(()=>i(u)).then(l=>(typeof l.copyFromChannel!="function"?(o(l),Vs(l)):t(r,()=>r(l))||a(l),s.add(l),l)),au={channelCount:2,channelCountMode:"explicit",channelInterpretation:"speakers",pan:0},cu=(s,t,e,n,i,r)=>class extends s{constructor(a,c){const u=i(a),l={...au,...c},h=e(u,l),p=r(u),f=p?n():null;super(a,!1,h,f),this._pan=t(this,p,h.pan)}get pan(){return this._pan}},uu=(s,t,e,n,i)=>()=>{const r=new WeakMap,o=async(a,c)=>{let u=e(a);const l=gt(u,c);if(!l){const h={channelCount:u.channelCount,channelCountMode:u.channelCountMode,channelInterpretation:u.channelInterpretation,pan:u.pan.value};u=t(c,h)}return r.set(c,u),l?await s(c,a.pan,u.pan):await n(c,a.pan,u.pan),Ue(u)?await i(a,c,u.inputs[0]):await i(a,c,u),u};return{render(a,c){const u=r.get(c);return u!==void 0?Promise.resolve(u):o(a,c)}}},lu=s=>()=>{if(s===null)return!1;try{new s({length:1,sampleRate:44100})}catch{return!1}return!0},hu=(s,t)=>async()=>{if(s===null)return!0;if(t===null)return!1;const e=new Blob(['class A extends AudioWorkletProcessor{process(i){this.port.postMessage(i,[i[0][0].buffer])}}registerProcessor("a",A)'],{type:"application/javascript; charset=utf-8"}),n=new t(1,128,44100),i=URL.createObjectURL(e);let r=!1,o=!1;try{await n.audioWorklet.addModule(i);const a=new s(n,"a",{numberOfOutputs:0}),c=n.createOscillator();a.port.onmessage=()=>r=!0,a.onprocessorerror=()=>o=!0,c.connect(a),c.start(0),await n.startRendering()}catch{}finally{URL.revokeObjectURL(i)}return r&&!o},du=(s,t)=>()=>{if(t===null)return Promise.resolve(!1);const e=new t(1,1,44100),n=s(e,{channelCount:1,channelCountMode:"explicit",channelInterpretation:"discrete",gain:0});return new Promise(i=>{e.oncomplete=()=>{n.disconnect(),i(e.currentTime!==0)},e.startRendering()})},pu=()=>new DOMException("","UnknownError"),fu={channelCount:2,channelCountMode:"max",channelInterpretation:"speakers",curve:null,oversample:"none"},mu=(s,t,e,n,i,r,o)=>class extends s{constructor(c,u){const l=i(c),h={...fu,...u},p=e(l,h),d=r(l)?n():null;super(c,!0,p,d),this._isCurveNullified=!1,this._nativeWaveShaperNode=p,o(this,1)}get curve(){return this._isCurveNullified?null:this._nativeWaveShaperNode.curve}set curve(c){if(c===null)this._isCurveNullified=!0,this._nativeWaveShaperNode.curve=new Float32Array([0,0]);else{if(c.length<2)throw t();this._isCurveNullified=!1,this._nativeWaveShaperNode.curve=c}}get oversample(){return this._nativeWaveShaperNode.oversample}set oversample(c){this._nativeWaveShaperNode.oversample=c}},_u=(s,t,e)=>()=>{const n=new WeakMap,i=async(r,o)=>{let a=t(r);if(!gt(a,o)){const u={channelCount:a.channelCount,channelCountMode:a.channelCountMode,channelInterpretation:a.channelInterpretation,curve:a.curve,oversample:a.oversample};a=s(o,u)}return n.set(o,a),Ue(a)?await e(r,o,a.inputs[0]):await e(r,o,a),a};return{render(r,o){const a=n.get(o);return a!==void 0?Promise.resolve(a):i(r,o)}}},gu=()=>typeof window>"u"?null:window,yu=(s,t)=>e=>{e.copyFromChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=e.numberOfChannels)throw t();const c=e.length,u=e.getChannelData(a),l=n.length;for(let h=o<0?-o:0;h+o<c&&h<l;h+=1)n[h]=u[h+o]},e.copyToChannel=(n,i,r=0)=>{const o=s(r),a=s(i);if(a>=e.numberOfChannels)throw t();const c=e.length,u=e.getChannelData(a),l=n.length;for(let h=o<0?-o:0;h+o<c&&h<l;h+=1)u[h+o]=n[h]}},vu=s=>t=>{t.copyFromChannel=(e=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<t.length)return e.call(t,n,a,o)})(t.copyFromChannel),t.copyToChannel=(e=>(n,i,r=0)=>{const o=s(r),a=s(i);if(o<t.length)return e.call(t,n,a,o)})(t.copyToChannel)},wu=s=>(t,e)=>{const n=e.createBuffer(1,1,44100);t.buffer===null&&(t.buffer=n),s(t,"buffer",i=>()=>{const r=i.call(t);return r===n?null:r},i=>r=>i.call(t,r===null?n:r))},Tu=(s,t)=>(e,n)=>{n.channelCount=1,n.channelCountMode="explicit",Object.defineProperty(n,"channelCount",{get:()=>1,set:()=>{throw s()}}),Object.defineProperty(n,"channelCountMode",{get:()=>"explicit",set:()=>{throw s()}});const i=e.createBufferSource();t(n,()=>{const a=n.numberOfInputs;for(let c=0;c<a;c+=1)i.connect(n,0,c)},()=>i.disconnect(n))},Yi=(s,t,e)=>s.copyFromChannel===void 0?s.getChannelData(e)[0]:(s.copyFromChannel(t,e),t[0]),Hi=s=>{if(s===null)return!1;const t=s.length;return t%2!==0?s[Math.floor(t/2)]!==0:s[t/2-1]+s[t/2]!==0},xn=(s,t,e,n)=>{let i=s;for(;!i.hasOwnProperty(t);)i=Object.getPrototypeOf(i);const{get:r,set:o}=Object.getOwnPropertyDescriptor(i,t);Object.defineProperty(s,t,{get:e(r),set:n(o)})},bu=s=>({...s,outputChannelCount:s.outputChannelCount!==void 0?s.outputChannelCount:s.numberOfInputs===1&&s.numberOfOutputs===1?[s.channelCount]:Array.from({length:s.numberOfOutputs},()=>1)}),xu=s=>({...s,channelCount:s.numberOfOutputs}),Cu=s=>{const{imag:t,real:e}=s;return t===void 0?e===void 0?{...s,imag:[0,0],real:[0,0]}:{...s,imag:Array.from(e,()=>0),real:e}:e===void 0?{...s,imag:t,real:Array.from(t,()=>0)}:{...s,imag:t,real:e}},Qi=(s,t,e)=>{try{s.setValueAtTime(t,e)}catch(n){if(n.code!==9)throw n;Qi(s,t,e+1e-7)}},Su=s=>{const t=s.createBufferSource();t.start();try{t.start()}catch{return!0}return!1},Au=s=>{const t=s.createBufferSource(),e=s.createBuffer(1,1,44100);t.buffer=e;try{t.start(0,1)}catch{return!1}return!0},ku=s=>{const t=s.createBufferSource();t.start();try{t.stop()}catch{return!1}return!0},Ls=s=>{const t=s.createOscillator();try{t.start(-1)}catch(e){return e instanceof RangeError}return!1},Ji=s=>{const t=s.createBuffer(1,1,44100),e=s.createBufferSource();e.buffer=t,e.start(),e.stop();try{return e.stop(),!0}catch{return!1}},js=s=>{const t=s.createOscillator();try{t.stop(-1)}catch(e){return e instanceof RangeError}return!1},Nu=s=>{const{port1:t,port2:e}=new MessageChannel;try{t.postMessage(s)}finally{t.close(),e.close()}},Ou=s=>{s.start=(t=>(e=0,n=0,i)=>{const r=s.buffer,o=r===null?n:Math.min(r.duration,n);r!==null&&o>r.duration-.5/s.context.sampleRate?t.call(s,e,0,0):t.call(s,e,o,i)})(s.start)},Ki=(s,t)=>{const e=t.createGain();s.connect(e);const n=(i=>()=>{i.call(s,e),s.removeEventListener("ended",n)})(s.disconnect);s.addEventListener("ended",n),Ge(s,e),s.stop=(i=>{let r=!1;return(o=0)=>{if(r)try{i.call(s,o)}catch{e.gain.setValueAtTime(0,o)}else i.call(s,o),r=!0}})(s.stop)},ze=(s,t)=>e=>{const n={value:s};return Object.defineProperties(e,{currentTarget:n,target:n}),typeof t=="function"?t.call(s,e):t.handleEvent.call(s,e)},Du=Yr(Se),Eu=eo(Se),Iu=fa(ns),tr=new WeakMap,Mu=Ia(tr),qt=Go(new Map,new WeakMap),jt=gu(),er=cc(qt,Gt),Bs=Ea(wt),mt=eu(wt,Bs,we),Ru=oo(er,nt,mt),et=Va(es),te=Vc(jt),tt=Ja(te),nr=new WeakMap,sr=Ca(ze),Cn=dc(jt),Us=Xa(Cn),Gs=Ya(jt),ir=Ha(jt),Je=fc(jt),ht=Io(Hr(Ei),to(Du,Eu,Fn,Iu,qn,wt,Mu,gn,nt,Se,Yt,we,En),qt,Ua(ws,qn,wt,nt,He,Yt),Gt,ss,Tt,la(Fn,ws,wt,nt,He,et,Yt,tt),ga(nr,wt,Pt),sr,et,Us,Gs,ir,tt,Je),Vu=ro(ht,Ru,Gt,er,et,tt),zs=new WeakSet,wi=uc(jt),rr=sa(new Uint32Array(1)),$s=yu(rr,Gt),Zs=vu(rr),or=co(zs,qt,Tt,wi,te,lu(wi),$s,Zs),is=no(St),ar=nu(Bs,vn,we),zt=Qo(ar),$e=hc(is,qt,Su,Au,ku,Ls,Ji,js,Ou,wu(xn),Ki),$t=tu(Ma(vn),ar),Pu=ho(zt,$e,nt,$t,mt),Wt=Mo(Qr(Ii),nr,Rs,Ro,Ur,Gr,zr,$r,Zr,gs,Oi,Cn,Qi),Fu=lo(ht,Pu,Wt,ft,$e,et,tt,ze),qu=To(ht,bo,Gt,ft,pc(St,xn),et,tt,mt),Wu=Uo(zt,$i,nt,$t,mt),Ae=ru(tr),Lu=Bo(ht,Wt,Wu,ss,$i,et,tt,Ae),ue=oc(Se,Gs),ju=Tu(ft,ue),le=Tc(Cn,ju),Bu=Zo(le,nt,mt),Uu=$o(ht,Bu,le,et,tt),Gu=Ho(Tn,nt,mt),zu=Yo(ht,Gu,Tn,et,tt,xu),$u=Cc(is,$e,St,ue),Ze=xc(is,qt,$u,Ls,js),Zu=na(zt,Ze,nt,$t,mt),Xu=ea(ht,Wt,Zu,Ze,et,tt,ze),cr=Sc(Tt,xn),Yu=oa(cr,nt,mt),Hu=ra(ht,Yu,cr,et,tt,Ae),Qu=pa(zt,Zi,nt,$t,mt),Ju=da(ht,Wt,Qu,Zi,et,tt,Ae),ur=Ac(Tt),Ku=Ta(zt,ur,nt,$t,mt),tl=wa(ht,Wt,Ku,ur,Tt,et,tt,Ae),el=Oa(zt,St,nt,$t,mt),nl=Na(ht,Wt,el,St,et,tt),sl=Dc(ss,ft,bn,Tt),rs=su(qt,St,bn,du(St,te)),il=Ba($e,nt,te,mt,rs),rl=kc(sl),ol=La(ht,rl,il,et,tt,Ae),al=xo(Wt,le,Ze,bn,Tt,Yi,tt,xn),lr=new WeakMap,cl=rc(qu,al,sr,tt,lr,ze),hr=Pc(is,qt,Ls,Ji,js,Ki),ul=Xc(zt,hr,nt,$t,mt),ll=Zc(ht,Wt,hr,ul,et,tt,ze),dr=Ko($e),hl=Uc(dr,ft,St,Hi,ue),os=Bc(dr,ft,hl,Hi,ue,Cn,xn),dl=qc(Fn,ft,le,St,bn,os,Tt,qn,Yi,ue),pr=Fc(dl),pl=Qc(zt,le,Ze,St,pr,nt,te,$t,mt,rs),fl=Hc(ht,Wt,pr,pl,et,tt,Ae),ml=Wc(Gt),_l=Kc(ml,et,new WeakSet,Cu),gl=jc(le,Tn,St,os,Tt,ue),fr=Lc(gl,Tt),yl=uu(zt,fr,nt,$t,mt),vl=cu(ht,Wt,fr,yl,et,tt),wl=_u(os,nt,mt),Tl=mu(ht,ft,os,wl,et,tt,Ae),mr=Ka(jt),Xs=Sa(jt),_r=new WeakMap,bl=Pa(_r,te),xl=mr?Kr(qt,Tt,xa(jt),Xs,Aa(Xr),et,bl,tt,Je,new WeakMap,new WeakMap,hu(Je,te),jt):void 0,Cl=Qa(Us,tt),Sl=ua(zs,qt,ca,ba,new WeakSet,et,Cl,Vn,Qe,$s,Zs),gr=Lo(xl,Vu,or,Fu,Lu,Uu,zu,Xu,Hu,Sl,Ju,tl,nl,ol,cl,ll,fl,_l,vl,Tl),Al=tc(ht,Ec,et,tt),kl=nc(ht,Ic,et,tt),Nl=sc(ht,Mc,et,tt),Ol=Rc(ft,tt),Dl=ic(ht,Ol,et),El=wo(gr,ft,Tt,pu,Al,kl,Nl,Dl,Cn),Ys=Fa(lr),Il=so(Ys),yr=Jo(Gt),Ml=ma(Ys),vr=ya(Gt),wr=new WeakMap,Rl=Da(wr,Pt),Vl=wc(yr,Gt,ft,le,Tn,Ze,St,bn,Tt,vr,Xs,Rl,ue),Pl=_c(ft,Vl,St,Tt,ue),Fl=Wo(zt,yr,$e,le,Tn,Ze,St,Ml,vr,Xs,nt,Je,te,$t,mt,rs),ql=Ra(_r),Wl=iu(wr),Ti=mr?Po(Il,ht,Wt,Fl,Pl,wt,ql,et,tt,Je,bu,Wl,Nu,ze):void 0,Ll=aa(Tt,te),jl=ou(zs,qt,Bs,Ys,rs,Vn,$s,Zs),Bl=zc(gr,qt,ft,Ll,jl),Ul=Ga(es,Us),Gl=za(Ms,Gs),zl=$a(Rs,ir),$l=Za(es,tt);function Ot(s){return typeof s>"u"}function $(s){return!Ot(s)}function Zl(s){return typeof s=="function"}function Ht(s){return typeof s=="number"}function ge(s){return Object.prototype.toString.call(s)==="[object Object]"&&s.constructor===Object}function Xl(s){return typeof s=="boolean"}function Dt(s){return Array.isArray(s)}function Qt(s){return typeof s=="string"}function On(s){return Qt(s)&&/^([a-g]{1}(?:b|#|x|bb)?)(-?[0-9]+)/i.test(s)}function F(s,t){if(!s)throw new Error(t)}function Ft(s,t,e=1/0){if(!(t<=s&&s<=e))throw new RangeError(`Value must be within [${t}, ${e}], got: ${s}`)}function Tr(s){!s.isOffline&&s.state!=="running"&&as('The AudioContext is "suspended". Invoke Tone.start() from a user action to start the audio.')}let br=!1,bi=!1;function xi(s){br=s}function Yl(s){Ot(s)&&br&&!bi&&(bi=!0,as("Events scheduled inside of scheduled callbacks should use the passed in scheduling time. See https://github.com/Tonejs/Tone.js/wiki/Accurate-Timing"))}let xr=console;function Hl(...s){xr.log(...s)}function as(...s){xr.warn(...s)}function Ql(s){return new El(s)}function Jl(s,t,e){return new Bl(s,t,e)}const ye=typeof self=="object"?self:null,Kl=ye&&(ye.hasOwnProperty("AudioContext")||ye.hasOwnProperty("webkitAudioContext"));function th(s,t,e){return F($(Ti),"This node only works in a secure context (https or localhost)"),new Ti(s,t,e)}/*! *****************************************************************************
Copyright (c) Microsoft Corporation.

Permission to use, copy, modify, and/or distribute this software for any
purpose with or without fee is hereby granted.

THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
PERFORMANCE OF THIS SOFTWARE.
***************************************************************************** */function Lt(s,t,e,n){var i=arguments.length,r=i<3?t:n===null?n=Object.getOwnPropertyDescriptor(t,e):n,o;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")r=Reflect.decorate(s,t,e,n);else for(var a=s.length-1;a>=0;a--)(o=s[a])&&(r=(i<3?o(r):i>3?o(t,e,r):o(t,e))||r);return i>3&&r&&Object.defineProperty(t,e,r),r}function lt(s,t,e,n){function i(r){return r instanceof e?r:new e(function(o){o(r)})}return new(e||(e=Promise))(function(r,o){function a(l){try{u(n.next(l))}catch(h){o(h)}}function c(l){try{u(n.throw(l))}catch(h){o(h)}}function u(l){l.done?r(l.value):i(l.value).then(a,c)}u((n=n.apply(s,t||[])).next())})}class eh{constructor(t,e,n,i){this._callback=t,this._type=e,this._minimumUpdateInterval=Math.max(128/(i||44100),.001),this.updateInterval=n,this._createClock()}_createWorker(){const t=new Blob([`
			// the initial timeout time
			let timeoutTime =  ${(this._updateInterval*1e3).toFixed(1)};
			// onmessage callback
			self.onmessage = function(msg){
				timeoutTime = parseInt(msg.data);
			};
			// the tick function which posts a message
			// and schedules a new tick
			function tick(){
				setTimeout(tick, timeoutTime);
				self.postMessage('tick');
			}
			// call tick initially
			tick();
			`],{type:"text/javascript"}),e=URL.createObjectURL(t),n=new Worker(e);n.onmessage=this._callback.bind(this),this._worker=n}_createTimeout(){this._timeout=setTimeout(()=>{this._createTimeout(),this._callback()},this._updateInterval*1e3)}_createClock(){if(this._type==="worker")try{this._createWorker()}catch{this._type="timeout",this._createClock()}else this._type==="timeout"&&this._createTimeout()}_disposeClock(){this._timeout&&clearTimeout(this._timeout),this._worker&&(this._worker.terminate(),this._worker.onmessage=null)}get updateInterval(){return this._updateInterval}set updateInterval(t){var e;this._updateInterval=Math.max(t,this._minimumUpdateInterval),this._type==="worker"&&((e=this._worker)===null||e===void 0||e.postMessage(this._updateInterval*1e3))}get type(){return this._type}set type(t){this._disposeClock(),this._type=t,this._createClock()}dispose(){this._disposeClock()}}function Te(s){return zl(s)}function oe(s){return Gl(s)}function In(s){return $l(s)}function Ee(s){return Ul(s)}function nh(s){return s instanceof or}function sh(s,t){return s==="value"||Te(t)||oe(t)||nh(t)}function ve(s,...t){if(!t.length)return s;const e=t.shift();if(ge(s)&&ge(e))for(const n in e)sh(n,e[n])?s[n]=e[n]:ge(e[n])?(s[n]||Object.assign(s,{[n]:{}}),ve(s[n],e[n])):Object.assign(s,{[n]:e[n]});return ve(s,...t)}function ih(s,t){return s.length===t.length&&s.every((e,n)=>t[n]===e)}function x(s,t,e=[],n){const i={},r=Array.from(t);if(ge(r[0])&&n&&!Reflect.has(r[0],n)&&(Object.keys(r[0]).some(a=>Reflect.has(s,a))||(ve(i,{[n]:r[0]}),e.splice(e.indexOf(n),1),r.shift())),r.length===1&&ge(r[0]))ve(i,r[0]);else for(let o=0;o<e.length;o++)$(r[o])&&(i[e[o]]=r[o]);return ve(s,i)}function rh(s){return s.constructor.getDefaults()}function Re(s,t){return Ot(s)?t:s}function fe(s,t){return t.forEach(e=>{Reflect.has(s,e)&&delete s[e]}),s}/**
 * Tone.js
 * @author Yotam Mann
 * @license http://opensource.org/licenses/MIT MIT License
 * @copyright 2014-2019 Yotam Mann
 */class ee{constructor(){this.debug=!1,this._wasDisposed=!1}static getDefaults(){return{}}log(...t){(this.debug||ye&&this.toString()===ye.TONE_DEBUG_CLASS)&&Hl(this,...t)}dispose(){return this._wasDisposed=!0,this}get disposed(){return this._wasDisposed}toString(){return this.name}}ee.version=Ni;const Hs=1e-6;function Fe(s,t){return s>t+Hs}function Ss(s,t){return Fe(s,t)||Rt(s,t)}function Bn(s,t){return s+Hs<t}function Rt(s,t){return Math.abs(s-t)<Hs}function oh(s,t,e){return Math.max(Math.min(s,e),t)}class It extends ee{constructor(){super(),this.name="Timeline",this._timeline=[];const t=x(It.getDefaults(),arguments,["memory"]);this.memory=t.memory,this.increasing=t.increasing}static getDefaults(){return{memory:1/0,increasing:!1}}get length(){return this._timeline.length}add(t){if(F(Reflect.has(t,"time"),"Timeline: events must have a time attribute"),t.time=t.time.valueOf(),this.increasing&&this.length){const e=this._timeline[this.length-1];F(Ss(t.time,e.time),"The time must be greater than or equal to the last scheduled time"),this._timeline.push(t)}else{const e=this._search(t.time);this._timeline.splice(e+1,0,t)}if(this.length>this.memory){const e=this.length-this.memory;this._timeline.splice(0,e)}return this}remove(t){const e=this._timeline.indexOf(t);return e!==-1&&this._timeline.splice(e,1),this}get(t,e="time"){const n=this._search(t,e);return n!==-1?this._timeline[n]:null}peek(){return this._timeline[0]}shift(){return this._timeline.shift()}getAfter(t,e="time"){const n=this._search(t,e);return n+1<this._timeline.length?this._timeline[n+1]:null}getBefore(t){const e=this._timeline.length;if(e>0&&this._timeline[e-1].time<t)return this._timeline[e-1];const n=this._search(t);return n-1>=0?this._timeline[n-1]:null}cancel(t){if(this._timeline.length>1){let e=this._search(t);if(e>=0)if(Rt(this._timeline[e].time,t)){for(let n=e;n>=0&&Rt(this._timeline[n].time,t);n--)e=n;this._timeline=this._timeline.slice(0,e)}else this._timeline=this._timeline.slice(0,e+1);else this._timeline=[]}else this._timeline.length===1&&Ss(this._timeline[0].time,t)&&(this._timeline=[]);return this}cancelBefore(t){const e=this._search(t);return e>=0&&(this._timeline=this._timeline.slice(e+1)),this}previousEvent(t){const e=this._timeline.indexOf(t);return e>0?this._timeline[e-1]:null}_search(t,e="time"){if(this._timeline.length===0)return-1;let n=0;const i=this._timeline.length;let r=i;if(i>0&&this._timeline[i-1][e]<=t)return i-1;for(;n<r;){let o=Math.floor(n+(r-n)/2);const a=this._timeline[o],c=this._timeline[o+1];if(Rt(a[e],t)){for(let u=o;u<this._timeline.length;u++){const l=this._timeline[u];if(Rt(l[e],t))o=u;else break}return o}else{if(Bn(a[e],t)&&Fe(c[e],t))return o;Fe(a[e],t)?r=o:n=o+1}}return-1}_iterate(t,e=0,n=this._timeline.length-1){this._timeline.slice(e,n+1).forEach(t)}forEach(t){return this._iterate(t),this}forEachBefore(t,e){const n=this._search(t);return n!==-1&&this._iterate(e,0,n),this}forEachAfter(t,e){const n=this._search(t);return this._iterate(e,n+1),this}forEachBetween(t,e,n){let i=this._search(t),r=this._search(e);return i!==-1&&r!==-1?(this._timeline[i].time!==t&&(i+=1),this._timeline[r].time===e&&(r-=1),this._iterate(n,i,r)):i===-1&&this._iterate(n,0,r),this}forEachFrom(t,e){let n=this._search(t);for(;n>=0&&this._timeline[n].time>=t;)n--;return this._iterate(e,n+1),this}forEachAtTime(t,e){const n=this._search(t);if(n!==-1&&Rt(this._timeline[n].time,t)){let i=n;for(let r=n;r>=0&&Rt(this._timeline[r].time,t);r--)i=r;this._iterate(r=>{e(r)},i,n)}return this}dispose(){return super.dispose(),this._timeline=[],this}}const Cr=[];function cs(s){Cr.push(s)}function ah(s){Cr.forEach(t=>t(s))}const Sr=[];function us(s){Sr.push(s)}function ch(s){Sr.forEach(t=>t(s))}class Sn extends ee{constructor(){super(...arguments),this.name="Emitter"}on(t,e){return t.split(/\W+/).forEach(i=>{Ot(this._events)&&(this._events={}),this._events.hasOwnProperty(i)||(this._events[i]=[]),this._events[i].push(e)}),this}once(t,e){const n=(...i)=>{e(...i),this.off(t,n)};return this.on(t,n),this}off(t,e){return t.split(/\W+/).forEach(i=>{if(Ot(this._events)&&(this._events={}),this._events.hasOwnProperty(i))if(Ot(e))this._events[i]=[];else{const r=this._events[i];for(let o=r.length-1;o>=0;o--)r[o]===e&&r.splice(o,1)}}),this}emit(t,...e){if(this._events&&this._events.hasOwnProperty(t)){const n=this._events[t].slice(0);for(let i=0,r=n.length;i<r;i++)n[i].apply(this,e)}return this}static mixin(t){["on","once","off","emit"].forEach(e=>{const n=Object.getOwnPropertyDescriptor(Sn.prototype,e);Object.defineProperty(t.prototype,e,n)})}dispose(){return super.dispose(),this._events=void 0,this}}class Ar extends Sn{constructor(){super(...arguments),this.isOffline=!1}toJSON(){return{}}}class An extends Ar{constructor(){var t,e;super(),this.name="Context",this._constants=new Map,this._timeouts=new It,this._timeoutIds=0,this._initialized=!1,this.isOffline=!1,this._workletPromise=null;const n=x(An.getDefaults(),arguments,["context"]);n.context?(this._context=n.context,this._latencyHint=((t=arguments[0])===null||t===void 0?void 0:t.latencyHint)||""):(this._context=Ql({latencyHint:n.latencyHint}),this._latencyHint=n.latencyHint),this._ticker=new eh(this.emit.bind(this,"tick"),n.clockSource,n.updateInterval,this._context.sampleRate),this.on("tick",this._timeoutLoop.bind(this)),this._context.onstatechange=()=>{this.emit("statechange",this.state)},this[!((e=arguments[0])===null||e===void 0)&&e.hasOwnProperty("updateInterval")?"_lookAhead":"lookAhead"]=n.lookAhead}static getDefaults(){return{clockSource:"worker",latencyHint:"interactive",lookAhead:.1,updateInterval:.05}}initialize(){return this._initialized||(ah(this),this._initialized=!0),this}createAnalyser(){return this._context.createAnalyser()}createOscillator(){return this._context.createOscillator()}createBufferSource(){return this._context.createBufferSource()}createBiquadFilter(){return this._context.createBiquadFilter()}createBuffer(t,e,n){return this._context.createBuffer(t,e,n)}createChannelMerger(t){return this._context.createChannelMerger(t)}createChannelSplitter(t){return this._context.createChannelSplitter(t)}createConstantSource(){return this._context.createConstantSource()}createConvolver(){return this._context.createConvolver()}createDelay(t){return this._context.createDelay(t)}createDynamicsCompressor(){return this._context.createDynamicsCompressor()}createGain(){return this._context.createGain()}createIIRFilter(t,e){return this._context.createIIRFilter(t,e)}createPanner(){return this._context.createPanner()}createPeriodicWave(t,e,n){return this._context.createPeriodicWave(t,e,n)}createStereoPanner(){return this._context.createStereoPanner()}createWaveShaper(){return this._context.createWaveShaper()}createMediaStreamSource(t){return F(Ee(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamSource(t)}createMediaElementSource(t){return F(Ee(this._context),"Not available if OfflineAudioContext"),this._context.createMediaElementSource(t)}createMediaStreamDestination(){return F(Ee(this._context),"Not available if OfflineAudioContext"),this._context.createMediaStreamDestination()}decodeAudioData(t){return this._context.decodeAudioData(t)}get currentTime(){return this._context.currentTime}get state(){return this._context.state}get sampleRate(){return this._context.sampleRate}get listener(){return this.initialize(),this._listener}set listener(t){F(!this._initialized,"The listener cannot be set after initialization."),this._listener=t}get transport(){return this.initialize(),this._transport}set transport(t){F(!this._initialized,"The transport cannot be set after initialization."),this._transport=t}get draw(){return this.initialize(),this._draw}set draw(t){F(!this._initialized,"Draw cannot be set after initialization."),this._draw=t}get destination(){return this.initialize(),this._destination}set destination(t){F(!this._initialized,"The destination cannot be set after initialization."),this._destination=t}createAudioWorkletNode(t,e){return th(this.rawContext,t,e)}addAudioWorkletModule(t){return lt(this,void 0,void 0,function*(){F($(this.rawContext.audioWorklet),"AudioWorkletNode is only available in a secure context (https or localhost)"),this._workletPromise||(this._workletPromise=this.rawContext.audioWorklet.addModule(t)),yield this._workletPromise})}workletsAreReady(){return lt(this,void 0,void 0,function*(){(yield this._workletPromise)?this._workletPromise:Promise.resolve()})}get updateInterval(){return this._ticker.updateInterval}set updateInterval(t){this._ticker.updateInterval=t}get clockSource(){return this._ticker.type}set clockSource(t){this._ticker.type=t}get lookAhead(){return this._lookAhead}set lookAhead(t){this._lookAhead=t,this.updateInterval=t?t/2:.01}get latencyHint(){return this._latencyHint}get rawContext(){return this._context}now(){return this._context.currentTime+this._lookAhead}immediate(){return this._context.currentTime}resume(){return Ee(this._context)?this._context.resume():Promise.resolve()}close(){return lt(this,void 0,void 0,function*(){Ee(this._context)&&(yield this._context.close()),this._initialized&&ch(this)})}getConstant(t){if(this._constants.has(t))return this._constants.get(t);{const e=this._context.createBuffer(1,128,this._context.sampleRate),n=e.getChannelData(0);for(let r=0;r<n.length;r++)n[r]=t;const i=this._context.createBufferSource();return i.channelCount=1,i.channelCountMode="explicit",i.buffer=e,i.loop=!0,i.start(0),this._constants.set(t,i),i}}dispose(){return super.dispose(),this._ticker.dispose(),this._timeouts.dispose(),Object.keys(this._constants).map(t=>this._constants[t].disconnect()),this}_timeoutLoop(){const t=this.now();let e=this._timeouts.peek();for(;this._timeouts.length&&e&&e.time<=t;)e.callback(),this._timeouts.shift(),e=this._timeouts.peek()}setTimeout(t,e){this._timeoutIds++;const n=this.now();return this._timeouts.add({callback:t,id:this._timeoutIds,time:n+e}),this._timeoutIds}clearTimeout(t){return this._timeouts.forEach(e=>{e.id===t&&this._timeouts.remove(e)}),this}clearInterval(t){return this.clearTimeout(t)}setInterval(t,e){const n=++this._timeoutIds,i=()=>{const r=this.now();this._timeouts.add({callback:()=>{t(),i()},id:n,time:r+e})};return i(),n}}class uh extends Ar{constructor(){super(...arguments),this.lookAhead=0,this.latencyHint=0,this.isOffline=!1}createAnalyser(){return{}}createOscillator(){return{}}createBufferSource(){return{}}createBiquadFilter(){return{}}createBuffer(t,e,n){return{}}createChannelMerger(t){return{}}createChannelSplitter(t){return{}}createConstantSource(){return{}}createConvolver(){return{}}createDelay(t){return{}}createDynamicsCompressor(){return{}}createGain(){return{}}createIIRFilter(t,e){return{}}createPanner(){return{}}createPeriodicWave(t,e,n){return{}}createStereoPanner(){return{}}createWaveShaper(){return{}}createMediaStreamSource(t){return{}}createMediaElementSource(t){return{}}createMediaStreamDestination(){return{}}decodeAudioData(t){return Promise.resolve({})}createAudioWorkletNode(t,e){return{}}get rawContext(){return{}}addAudioWorkletModule(t){return lt(this,void 0,void 0,function*(){return Promise.resolve()})}resume(){return Promise.resolve()}setTimeout(t,e){return 0}clearTimeout(t){return this}setInterval(t,e){return 0}clearInterval(t){return this}getConstant(t){return{}}get currentTime(){return 0}get state(){return{}}get sampleRate(){return 0}get listener(){return{}}get transport(){return{}}get draw(){return{}}set draw(t){}get destination(){return{}}set destination(t){}now(){return 0}immediate(){return 0}}function Z(s,t){Dt(t)?t.forEach(e=>Z(s,e)):Object.defineProperty(s,t,{enumerable:!0,writable:!1})}function Qs(s,t){Dt(t)?t.forEach(e=>Qs(s,e)):Object.defineProperty(s,t,{writable:!0})}const Y=()=>{};class Q extends ee{constructor(){super(),this.name="ToneAudioBuffer",this.onload=Y;const t=x(Q.getDefaults(),arguments,["url","onload","onerror"]);this.reverse=t.reverse,this.onload=t.onload,Qt(t.url)?this.load(t.url).catch(t.onerror):t.url&&this.set(t.url)}static getDefaults(){return{onerror:Y,onload:Y,reverse:!1}}get sampleRate(){return this._buffer?this._buffer.sampleRate:Nt().sampleRate}set(t){return t instanceof Q?t.loaded?this._buffer=t.get():t.onload=()=>{this.set(t),this.onload(this)}:this._buffer=t,this._reversed&&this._reverse(),this}get(){return this._buffer}load(t){return lt(this,void 0,void 0,function*(){const e=Q.load(t).then(n=>{this.set(n),this.onload(this)});Q.downloads.push(e);try{yield e}finally{const n=Q.downloads.indexOf(e);Q.downloads.splice(n,1)}return this})}dispose(){return super.dispose(),this._buffer=void 0,this}fromArray(t){const e=Dt(t)&&t[0].length>0,n=e?t.length:1,i=e?t[0].length:t.length,r=Nt(),o=r.createBuffer(n,i,r.sampleRate),a=!e&&n===1?[t]:t;for(let c=0;c<n;c++)o.copyToChannel(a[c],c);return this._buffer=o,this}toMono(t){if(Ht(t))this.fromArray(this.toArray(t));else{let e=new Float32Array(this.length);const n=this.numberOfChannels;for(let i=0;i<n;i++){const r=this.toArray(i);for(let o=0;o<r.length;o++)e[o]+=r[o]}e=e.map(i=>i/n),this.fromArray(e)}return this}toArray(t){if(Ht(t))return this.getChannelData(t);if(this.numberOfChannels===1)return this.toArray(0);{const e=[];for(let n=0;n<this.numberOfChannels;n++)e[n]=this.getChannelData(n);return e}}getChannelData(t){return this._buffer?this._buffer.getChannelData(t):new Float32Array(0)}slice(t,e=this.duration){F(this.loaded,"Buffer is not loaded");const n=Math.floor(t*this.sampleRate),i=Math.floor(e*this.sampleRate);F(n<i,"The start time must be less than the end time");const r=i-n,o=Nt().createBuffer(this.numberOfChannels,r,this.sampleRate);for(let a=0;a<this.numberOfChannels;a++)o.copyToChannel(this.getChannelData(a).subarray(n,i),a);return new Q(o)}_reverse(){if(this.loaded)for(let t=0;t<this.numberOfChannels;t++)this.getChannelData(t).reverse();return this}get loaded(){return this.length>0}get duration(){return this._buffer?this._buffer.duration:0}get length(){return this._buffer?this._buffer.length:0}get numberOfChannels(){return this._buffer?this._buffer.numberOfChannels:0}get reverse(){return this._reversed}set reverse(t){this._reversed!==t&&(this._reversed=t,this._reverse())}static fromArray(t){return new Q().fromArray(t)}static fromUrl(t){return lt(this,void 0,void 0,function*(){return yield new Q().load(t)})}static load(t){return lt(this,void 0,void 0,function*(){const e=t.match(/\[([^\]\[]+\|.+)\]$/);if(e){const c=e[1].split("|");let u=c[0];for(const l of c)if(Q.supportsType(l)){u=l;break}t=t.replace(e[0],u)}const n=Q.baseUrl===""||Q.baseUrl.endsWith("/")?Q.baseUrl:Q.baseUrl+"/",i=document.createElement("a");i.href=n+t,i.pathname=(i.pathname+i.hash).split("/").map(encodeURIComponent).join("/");const r=yield fetch(i.href);if(!r.ok)throw new Error(`could not load url: ${t}`);const o=yield r.arrayBuffer();return yield Nt().decodeAudioData(o)})}static supportsType(t){const e=t.split("."),n=e[e.length-1];return document.createElement("audio").canPlayType("audio/"+n)!==""}static loaded(){return lt(this,void 0,void 0,function*(){for(yield Promise.resolve();Q.downloads.length;)yield Q.downloads[0]})}}Q.baseUrl="";Q.downloads=[];class ls extends An{constructor(){super({clockSource:"offline",context:In(arguments[0])?arguments[0]:Jl(arguments[0],arguments[1]*arguments[2],arguments[2]),lookAhead:0,updateInterval:In(arguments[0])?128/arguments[0].sampleRate:128/arguments[2]}),this.name="OfflineContext",this._currentTime=0,this.isOffline=!0,this._duration=In(arguments[0])?arguments[0].length/arguments[0].sampleRate:arguments[1]}now(){return this._currentTime}get currentTime(){return this._currentTime}_renderClock(t){return lt(this,void 0,void 0,function*(){let e=0;for(;this._duration-this._currentTime>=0;){this.emit("tick"),this._currentTime+=128/this.sampleRate,e++;const n=Math.floor(this.sampleRate/128);t&&e%n===0&&(yield new Promise(i=>setTimeout(i,1)))}})}render(t=!0){return lt(this,void 0,void 0,function*(){yield this.workletsAreReady(),yield this._renderClock(t);const e=yield this._context.startRendering();return new Q(e)})}close(){return Promise.resolve()}}const kr=new uh;let me=kr;function Nt(){return me===kr&&Kl&&lh(new An),me}function lh(s,t=!1){t&&me.dispose(),Ee(s)?me=new An(s):In(s)?me=new ls(s):me=s}function id(){return me.resume()}if(ye&&!ye.TONE_SILENCE_LOGGING){const t=` * Tone.js v${Ni} * `;console.log(`%c${t}`,"background: #000; color: #fff")}function hh(s){return Math.pow(10,s/20)}function dh(s){return 20*(Math.log(s)/Math.LN10)}function Nr(s){return Math.pow(2,s/12)}let hs=440;function ph(){return hs}function fh(s){hs=s}function _e(s){return Math.round(Or(s))}function Or(s){return 69+12*Math.log2(s/hs)}function Dr(s){return hs*Math.pow(2,(s-69)/12)}class Js extends ee{constructor(t,e,n){super(),this.defaultUnits="s",this._val=e,this._units=n,this.context=t,this._expressions=this._getExpressions()}_getExpressions(){return{hz:{method:t=>this._frequencyToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)hz$/i},i:{method:t=>this._ticksToUnits(parseInt(t,10)),regexp:/^(\d+)i$/i},m:{method:t=>this._beatsToUnits(parseInt(t,10)*this._getTimeSignature()),regexp:/^(\d+)m$/i},n:{method:(t,e)=>{const n=parseInt(t,10),i=e==="."?1.5:1;return n===1?this._beatsToUnits(this._getTimeSignature())*i:this._beatsToUnits(4/n)*i},regexp:/^(\d+)n(\.?)$/i},number:{method:t=>this._expressions[this.defaultUnits].method.call(this,t),regexp:/^(\d+(?:\.\d+)?)$/},s:{method:t=>this._secondsToUnits(parseFloat(t)),regexp:/^(\d+(?:\.\d+)?)s$/},samples:{method:t=>parseInt(t,10)/this.context.sampleRate,regexp:/^(\d+)samples$/},t:{method:t=>{const e=parseInt(t,10);return this._beatsToUnits(8/(Math.floor(e)*3))},regexp:/^(\d+)t$/i},tr:{method:(t,e,n)=>{let i=0;return t&&t!=="0"&&(i+=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i+=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(i+=this._beatsToUnits(parseFloat(n)/4)),i},regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?$/}}}valueOf(){if(this._val instanceof Js&&this.fromType(this._val),Ot(this._val))return this._noArg();if(Qt(this._val)&&Ot(this._units)){for(const t in this._expressions)if(this._expressions[t].regexp.test(this._val.trim())){this._units=t;break}}else if(ge(this._val)){let t=0;for(const e in this._val)if($(this._val[e])){const n=this._val[e];t+=new this.constructor(this.context,e).valueOf()*n}return t}if($(this._units)){const t=this._expressions[this._units],e=this._val.toString().trim().match(t.regexp);return e?t.method.apply(this,e.slice(1)):t.method.call(this,this._val)}else return Qt(this._val)?parseFloat(this._val):this._val}_frequencyToUnits(t){return 1/t}_beatsToUnits(t){return 60/this._getBpm()*t}_secondsToUnits(t){return t}_ticksToUnits(t){return t*this._beatsToUnits(1)/this._getPPQ()}_noArg(){return this._now()}_getBpm(){return this.context.transport.bpm.value}_getTimeSignature(){return this.context.transport.timeSignature}_getPPQ(){return this.context.transport.PPQ}fromType(t){switch(this._units=void 0,this.defaultUnits){case"s":this._val=t.toSeconds();break;case"i":this._val=t.toTicks();break;case"hz":this._val=t.toFrequency();break;case"midi":this._val=t.toMidi();break}return this}toFrequency(){return 1/this.toSeconds()}toSamples(){return this.toSeconds()*this.context.sampleRate}toMilliseconds(){return this.toSeconds()*1e3}}class Vt extends Js{constructor(){super(...arguments),this.name="TimeClass"}_getExpressions(){return Object.assign(super._getExpressions(),{now:{method:t=>this._now()+new this.constructor(this.context,t).valueOf(),regexp:/^\+(.+)/},quantize:{method:t=>{const e=new Vt(this.context,t).valueOf();return this._secondsToUnits(this.context.transport.nextSubdivision(e))},regexp:/^@(.+)/}})}quantize(t,e=1){const n=new this.constructor(this.context,t).valueOf(),i=this.valueOf(),a=Math.round(i/n)*n-i;return i+a*e}toNotation(){const t=this.toSeconds(),e=["1m"];for(let r=1;r<9;r++){const o=Math.pow(2,r);e.push(o+"n."),e.push(o+"n"),e.push(o+"t")}e.push("0");let n=e[0],i=new Vt(this.context,e[0]).toSeconds();return e.forEach(r=>{const o=new Vt(this.context,r).toSeconds();Math.abs(o-t)<Math.abs(i-t)&&(n=r,i=o)}),n}toBarsBeatsSixteenths(){const t=this._beatsToUnits(1);let e=this.valueOf()/t;e=parseFloat(e.toFixed(4));const n=Math.floor(e/this._getTimeSignature());let i=e%1*4;e=Math.floor(e)%this._getTimeSignature();const r=i.toString();return r.length>3&&(i=parseFloat(parseFloat(r).toFixed(3))),[n,e,i].join(":")}toTicks(){const t=this._beatsToUnits(1);return this.valueOf()/t*this._getPPQ()}toSeconds(){return this.valueOf()}toMidi(){return _e(this.toFrequency())}_now(){return this.context.now()}}class xt extends Vt{constructor(){super(...arguments),this.name="Frequency",this.defaultUnits="hz"}static get A4(){return ph()}static set A4(t){fh(t)}_getExpressions(){return Object.assign({},super._getExpressions(),{midi:{regexp:/^(\d+(?:\.\d+)?midi)/,method(t){return this.defaultUnits==="midi"?t:xt.mtof(t)}},note:{regexp:/^([a-g]{1}(?:b|#|##|x|bb|###|#x|x#|bbb)?)(-?[0-9]+)/i,method(t,e){const i=mh[t.toLowerCase()]+(parseInt(e,10)+1)*12;return this.defaultUnits==="midi"?i:xt.mtof(i)}},tr:{regexp:/^(\d+(?:\.\d+)?):(\d+(?:\.\d+)?):?(\d+(?:\.\d+)?)?/,method(t,e,n){let i=1;return t&&t!=="0"&&(i*=this._beatsToUnits(this._getTimeSignature()*parseFloat(t))),e&&e!=="0"&&(i*=this._beatsToUnits(parseFloat(e))),n&&n!=="0"&&(i*=this._beatsToUnits(parseFloat(n)/4)),i}}})}transpose(t){return new xt(this.context,this.valueOf()*Nr(t))}harmonize(t){return t.map(e=>this.transpose(e))}toMidi(){return _e(this.valueOf())}toNote(){const t=this.toFrequency(),e=Math.log2(t/xt.A4);let n=Math.round(12*e)+57;const i=Math.floor(n/12);return i<0&&(n+=-12*i),_h[n%12]+i.toString()}toSeconds(){return 1/super.toSeconds()}toTicks(){const t=this._beatsToUnits(1),e=this.valueOf()/t;return Math.floor(e*this._getPPQ())}_noArg(){return 0}_frequencyToUnits(t){return t}_ticksToUnits(t){return 1/(t*60/(this._getBpm()*this._getPPQ()))}_beatsToUnits(t){return 1/super._beatsToUnits(t)}_secondsToUnits(t){return 1/t}static mtof(t){return Dr(t)}static ftom(t){return _e(t)}}const mh={cbbb:-3,cbb:-2,cb:-1,c:0,"c#":1,cx:2,"c##":2,"c###":3,"cx#":3,"c#x":3,dbbb:-1,dbb:0,db:1,d:2,"d#":3,dx:4,"d##":4,"d###":5,"dx#":5,"d#x":5,ebbb:1,ebb:2,eb:3,e:4,"e#":5,ex:6,"e##":6,"e###":7,"ex#":7,"e#x":7,fbbb:2,fbb:3,fb:4,f:5,"f#":6,fx:7,"f##":7,"f###":8,"fx#":8,"f#x":8,gbbb:4,gbb:5,gb:6,g:7,"g#":8,gx:9,"g##":9,"g###":10,"gx#":10,"g#x":10,abbb:6,abb:7,ab:8,a:9,"a#":10,ax:11,"a##":11,"a###":12,"ax#":12,"a#x":12,bbbb:8,bbb:9,bb:10,b:11,"b#":12,bx:13,"b##":13,"b###":14,"bx#":14,"b#x":14},_h=["C","C#","D","D#","E","F","F#","G","G#","A","A#","B"];function rd(s,t){return new xt(Nt(),s,t)}class Ye extends Vt{constructor(){super(...arguments),this.name="TransportTime"}_now(){return this.context.transport.seconds}}class Ct extends ee{constructor(){super();const t=x(Ct.getDefaults(),arguments,["context"]);this.defaultContext?this.context=this.defaultContext:this.context=t.context}static getDefaults(){return{context:Nt()}}now(){return this.context.currentTime+this.context.lookAhead}immediate(){return this.context.currentTime}get sampleTime(){return 1/this.context.sampleRate}get blockTime(){return 128/this.context.sampleRate}toSeconds(t){return Yl(t),new Vt(this.context,t).toSeconds()}toFrequency(t){return new xt(this.context,t).toFrequency()}toTicks(t){return new Ye(this.context,t).toTicks()}_getPartialProperties(t){const e=this.get();return Object.keys(e).forEach(n=>{Ot(t[n])&&delete e[n]}),e}get(){const t=rh(this);return Object.keys(t).forEach(e=>{if(Reflect.has(this,e)){const n=this[e];$(n)&&$(n.value)&&$(n.setValueAtTime)?t[e]=n.value:n instanceof Ct?t[e]=n._getPartialProperties(t[e]):Dt(n)||Ht(n)||Qt(n)||Xl(n)?t[e]=n:delete t[e]}}),t}set(t){return Object.keys(t).forEach(e=>{Reflect.has(this,e)&&$(this[e])&&(this[e]&&$(this[e].value)&&$(this[e].setValueAtTime)?this[e].value!==t[e]&&(this[e].value=t[e]):this[e]instanceof Ct?this[e].set(t[e]):this[e]=t[e])}),this}}class Ks extends It{constructor(t="stopped"){super(),this.name="StateTimeline",this._initial=t,this.setStateAtTime(this._initial,0)}getValueAtTime(t){const e=this.get(t);return e!==null?e.state:this._initial}setStateAtTime(t,e,n){return Ft(e,0),this.add(Object.assign({},n,{state:t,time:e})),this}getLastState(t,e){const n=this._search(e);for(let i=n;i>=0;i--){const r=this._timeline[i];if(r.state===t)return r}}getNextState(t,e){const n=this._search(e);if(n!==-1)for(let i=n;i<this._timeline.length;i++){const r=this._timeline[i];if(r.state===t)return r}}}class U extends Ct{constructor(){super(x(U.getDefaults(),arguments,["param","units","convert"])),this.name="Param",this.overridden=!1,this._minOutput=1e-7;const t=x(U.getDefaults(),arguments,["param","units","convert"]);for(F($(t.param)&&(Te(t.param)||t.param instanceof U),"param must be an AudioParam");!Te(t.param);)t.param=t.param._param;this._swappable=$(t.swappable)?t.swappable:!1,this._swappable?(this.input=this.context.createGain(),this._param=t.param,this.input.connect(this._param)):this._param=this.input=t.param,this._events=new It(1e3),this._initialValue=this._param.defaultValue,this.units=t.units,this.convert=t.convert,this._minValue=t.minValue,this._maxValue=t.maxValue,$(t.value)&&t.value!==this._toType(this._initialValue)&&this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(Ct.getDefaults(),{convert:!0,units:"number"})}get value(){const t=this.now();return this.getValueAtTime(t)}set value(t){this.cancelScheduledValues(this.now()),this.setValueAtTime(t,this.now())}get minValue(){return $(this._minValue)?this._minValue:this.units==="time"||this.units==="frequency"||this.units==="normalRange"||this.units==="positive"||this.units==="transportTime"||this.units==="ticks"||this.units==="bpm"||this.units==="hertz"||this.units==="samples"?0:this.units==="audioRange"?-1:this.units==="decibels"?-1/0:this._param.minValue}get maxValue(){return $(this._maxValue)?this._maxValue:this.units==="normalRange"||this.units==="audioRange"?1:this._param.maxValue}_is(t,e){return this.units===e}_assertRange(t){return $(this.maxValue)&&$(this.minValue)&&Ft(t,this._fromType(this.minValue),this._fromType(this.maxValue)),t}_fromType(t){return this.convert&&!this.overridden?this._is(t,"time")?this.toSeconds(t):this._is(t,"decibels")?hh(t):this._is(t,"frequency")?this.toFrequency(t):t:this.overridden?0:t}_toType(t){return this.convert&&this.units==="decibels"?dh(t):t}setValueAtTime(t,e){const n=this.toSeconds(e),i=this._fromType(t);return F(isFinite(i)&&isFinite(n),`Invalid argument(s) to setValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(i),this.log(this.units,"setValueAtTime",t,n),this._events.add({time:n,type:"setValueAtTime",value:i}),this._param.setValueAtTime(i,n),this}getValueAtTime(t){const e=Math.max(this.toSeconds(t),0),n=this._events.getAfter(e),i=this._events.get(e);let r=this._initialValue;if(i===null)r=this._initialValue;else if(i.type==="setTargetAtTime"&&(n===null||n.type==="setValueAtTime")){const o=this._events.getBefore(i.time);let a;o===null?a=this._initialValue:a=o.value,i.type==="setTargetAtTime"&&(r=this._exponentialApproach(i.time,a,i.value,i.constant,e))}else if(n===null)r=i.value;else if(n.type==="linearRampToValueAtTime"||n.type==="exponentialRampToValueAtTime"){let o=i.value;if(i.type==="setTargetAtTime"){const a=this._events.getBefore(i.time);a===null?o=this._initialValue:o=a.value}n.type==="linearRampToValueAtTime"?r=this._linearInterpolate(i.time,o,n.time,n.value,e):r=this._exponentialInterpolate(i.time,o,n.time,n.value,e)}else r=i.value;return this._toType(r)}setRampPoint(t){t=this.toSeconds(t);let e=this.getValueAtTime(t);return this.cancelAndHoldAtTime(t),this._fromType(e)===0&&(e=this._toType(this._minOutput)),this.setValueAtTime(e,t),this}linearRampToValueAtTime(t,e){const n=this._fromType(t),i=this.toSeconds(e);return F(isFinite(n)&&isFinite(i),`Invalid argument(s) to linearRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._assertRange(n),this._events.add({time:i,type:"linearRampToValueAtTime",value:n}),this.log(this.units,"linearRampToValueAtTime",t,i),this._param.linearRampToValueAtTime(n,i),this}exponentialRampToValueAtTime(t,e){let n=this._fromType(t);n=Rt(n,0)?this._minOutput:n,this._assertRange(n);const i=this.toSeconds(e);return F(isFinite(n)&&isFinite(i),`Invalid argument(s) to exponentialRampToValueAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({time:i,type:"exponentialRampToValueAtTime",value:n}),this.log(this.units,"exponentialRampToValueAtTime",t,i),this._param.exponentialRampToValueAtTime(n,i),this}exponentialRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialRampToValueAtTime(t,n+this.toSeconds(e)),this}linearRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.linearRampToValueAtTime(t,n+this.toSeconds(e)),this}targetRampTo(t,e,n){return n=this.toSeconds(n),this.setRampPoint(n),this.exponentialApproachValueAtTime(t,n,e),this}exponentialApproachValueAtTime(t,e,n){e=this.toSeconds(e),n=this.toSeconds(n);const i=Math.log(n+1)/Math.log(200);return this.setTargetAtTime(t,e,i),this.cancelAndHoldAtTime(e+n*.9),this.linearRampToValueAtTime(t,e+n),this}setTargetAtTime(t,e,n){const i=this._fromType(t);F(isFinite(n)&&n>0,"timeConstant must be a number greater than 0");const r=this.toSeconds(e);return this._assertRange(i),F(isFinite(i)&&isFinite(r),`Invalid argument(s) to setTargetAtTime: ${JSON.stringify(t)}, ${JSON.stringify(e)}`),this._events.add({constant:n,time:r,type:"setTargetAtTime",value:i}),this.log(this.units,"setTargetAtTime",t,r,n),this._param.setTargetAtTime(i,r,n),this}setValueCurveAtTime(t,e,n,i=1){n=this.toSeconds(n),e=this.toSeconds(e);const r=this._fromType(t[0])*i;this.setValueAtTime(this._toType(r),e);const o=n/(t.length-1);for(let a=1;a<t.length;a++){const c=this._fromType(t[a])*i;this.linearRampToValueAtTime(this._toType(c),e+a*o)}return this}cancelScheduledValues(t){const e=this.toSeconds(t);return F(isFinite(e),`Invalid argument to cancelScheduledValues: ${JSON.stringify(t)}`),this._events.cancel(e),this._param.cancelScheduledValues(e),this.log(this.units,"cancelScheduledValues",e),this}cancelAndHoldAtTime(t){const e=this.toSeconds(t),n=this._fromType(this.getValueAtTime(e));F(isFinite(e),`Invalid argument to cancelAndHoldAtTime: ${JSON.stringify(t)}`),this.log(this.units,"cancelAndHoldAtTime",e,"value="+n);const i=this._events.get(e),r=this._events.getAfter(e);return i&&Rt(i.time,e)?r?(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time)):(this._param.cancelAndHoldAtTime(e),this._events.cancel(e+this.sampleTime)):r&&(this._param.cancelScheduledValues(r.time),this._events.cancel(r.time),r.type==="linearRampToValueAtTime"?this.linearRampToValueAtTime(this._toType(n),e):r.type==="exponentialRampToValueAtTime"&&this.exponentialRampToValueAtTime(this._toType(n),e)),this._events.add({time:e,type:"setValueAtTime",value:n}),this._param.setValueAtTime(n,e),this}rampTo(t,e=.1,n){return this.units==="frequency"||this.units==="bpm"||this.units==="decibels"?this.exponentialRampTo(t,e,n):this.linearRampTo(t,e,n),this}apply(t){const e=this.context.currentTime;t.setValueAtTime(this.getValueAtTime(e),e);const n=this._events.get(e);if(n&&n.type==="setTargetAtTime"){const i=this._events.getAfter(n.time),r=i?i.time:e+2,o=(r-e)/10;for(let a=e;a<r;a+=o)t.linearRampToValueAtTime(this.getValueAtTime(a),a)}return this._events.forEachAfter(this.context.currentTime,i=>{i.type==="cancelScheduledValues"?t.cancelScheduledValues(i.time):i.type==="setTargetAtTime"?t.setTargetAtTime(i.value,i.time,i.constant):t[i.type](i.value,i.time)}),this}setParam(t){F(this._swappable,"The Param must be assigned as 'swappable' in the constructor");const e=this.input;return e.disconnect(this._param),this.apply(t),this._param=t,e.connect(this._param),this}dispose(){return super.dispose(),this._events.dispose(),this}get defaultValue(){return this._toType(this._param.defaultValue)}_exponentialApproach(t,e,n,i,r){return n+(e-n)*Math.exp(-(r-t)/i)}_linearInterpolate(t,e,n,i,r){return e+(i-e)*((r-t)/(n-t))}_exponentialInterpolate(t,e,n,i,r){return e*Math.pow(i/e,(r-t)/(n-t))}}class V extends Ct{constructor(){super(...arguments),this._internalChannels=[]}get numberOfInputs(){return $(this.input)?Te(this.input)||this.input instanceof U?1:this.input.numberOfInputs:0}get numberOfOutputs(){return $(this.output)?this.output.numberOfOutputs:0}_isAudioNode(t){return $(t)&&(t instanceof V||oe(t))}_getInternalNodes(){const t=this._internalChannels.slice(0);return this._isAudioNode(this.input)&&t.push(this.input),this._isAudioNode(this.output)&&this.input!==this.output&&t.push(this.output),t}_setChannelProperties(t){this._getInternalNodes().forEach(n=>{n.channelCount=t.channelCount,n.channelCountMode=t.channelCountMode,n.channelInterpretation=t.channelInterpretation})}_getChannelProperties(){const t=this._getInternalNodes();F(t.length>0,"ToneAudioNode does not have any internal nodes");const e=t[0];return{channelCount:e.channelCount,channelCountMode:e.channelCountMode,channelInterpretation:e.channelInterpretation}}get channelCount(){return this._getChannelProperties().channelCount}set channelCount(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCount:t}))}get channelCountMode(){return this._getChannelProperties().channelCountMode}set channelCountMode(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelCountMode:t}))}get channelInterpretation(){return this._getChannelProperties().channelInterpretation}set channelInterpretation(t){const e=this._getChannelProperties();this._setChannelProperties(Object.assign(e,{channelInterpretation:t}))}connect(t,e=0,n=0){return Jt(this,t,e,n),this}toDestination(){return this.connect(this.context.destination),this}toMaster(){return as("toMaster() has been renamed toDestination()"),this.toDestination()}disconnect(t,e=0,n=0){return Er(this,t,e,n),this}chain(...t){return Ke(this,...t),this}fan(...t){return t.forEach(e=>this.connect(e)),this}dispose(){return super.dispose(),$(this.input)&&(this.input instanceof V?this.input.dispose():oe(this.input)&&this.input.disconnect()),$(this.output)&&(this.output instanceof V?this.output.dispose():oe(this.output)&&this.output.disconnect()),this._internalChannels=[],this}}function Ke(...s){const t=s.shift();s.reduce((e,n)=>(e instanceof V?e.connect(n):oe(e)&&Jt(e,n),n),t)}function Jt(s,t,e=0,n=0){for(F($(s),"Cannot connect from undefined node"),F($(t),"Cannot connect to undefined node"),(t instanceof V||oe(t))&&F(t.numberOfInputs>0,"Cannot connect to node with no inputs"),F(s.numberOfOutputs>0,"Cannot connect from node with no outputs");t instanceof V||t instanceof U;)$(t.input)&&(t=t.input);for(;s instanceof V;)$(s.output)&&(s=s.output);Te(t)?s.connect(t,e):s.connect(t,e,n)}function Er(s,t,e=0,n=0){if($(t))for(;t instanceof V;)t=t.input;for(;!oe(s);)$(s.output)&&(s=s.output);Te(t)?s.disconnect(t,e):oe(t)?s.disconnect(t,e,n):s.disconnect()}class K extends V{constructor(){super(x(K.getDefaults(),arguments,["gain","units"])),this.name="Gain",this._gainNode=this.context.createGain(),this.input=this._gainNode,this.output=this._gainNode;const t=x(K.getDefaults(),arguments,["gain","units"]);this.gain=new U({context:this.context,convert:t.convert,param:this._gainNode.gain,units:t.units,value:t.gain,minValue:t.minValue,maxValue:t.maxValue}),Z(this,"gain")}static getDefaults(){return Object.assign(V.getDefaults(),{convert:!0,gain:1,units:"gain"})}dispose(){return super.dispose(),this._gainNode.disconnect(),this.gain.dispose(),this}}class qe extends V{constructor(t){super(t),this.onended=Y,this._startTime=-1,this._stopTime=-1,this._timeout=-1,this.output=new K({context:this.context,gain:0}),this._gainNode=this.output,this.getStateAtTime=function(e){const n=this.toSeconds(e);return this._startTime!==-1&&n>=this._startTime&&(this._stopTime===-1||n<=this._stopTime)?"started":"stopped"},this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut,this._curve=t.curve,this.onended=t.onended}static getDefaults(){return Object.assign(V.getDefaults(),{curve:"linear",fadeIn:0,fadeOut:0,onended:Y})}_startGain(t,e=1){F(this._startTime===-1,"Source cannot be started more than once");const n=this.toSeconds(this._fadeIn);return this._startTime=t+n,this._startTime=Math.max(this._startTime,this.context.currentTime),n>0?(this._gainNode.gain.setValueAtTime(0,t),this._curve==="linear"?this._gainNode.gain.linearRampToValueAtTime(e,t+n):this._gainNode.gain.exponentialApproachValueAtTime(e,t,n)):this._gainNode.gain.setValueAtTime(e,t),this}stop(t){return this.log("stop",t),this._stopGain(this.toSeconds(t)),this}_stopGain(t){F(this._startTime!==-1,"'start' must be called before 'stop'"),this.cancelStop();const e=this.toSeconds(this._fadeOut);return this._stopTime=this.toSeconds(t)+e,this._stopTime=Math.max(this._stopTime,this.now()),e>0?this._curve==="linear"?this._gainNode.gain.linearRampTo(0,e,t):this._gainNode.gain.targetRampTo(0,e,t):(this._gainNode.gain.cancelAndHoldAtTime(t),this._gainNode.gain.setValueAtTime(0,t)),this.context.clearTimeout(this._timeout),this._timeout=this.context.setTimeout(()=>{const n=this._curve==="exponential"?e*2:0;this._stopSource(this.now()+n),this._onended()},this._stopTime-this.context.currentTime),this}_onended(){if(this.onended!==Y&&(this.onended(this),this.onended=Y,!this.context.isOffline)){const t=()=>this.dispose();typeof window.requestIdleCallback<"u"?window.requestIdleCallback(t):setTimeout(t,1e3)}}get state(){return this.getStateAtTime(this.now())}cancelStop(){return this.log("cancelStop"),F(this._startTime!==-1,"Source is not started"),this._gainNode.gain.cancelScheduledValues(this._startTime+this.sampleTime),this.context.clearTimeout(this._timeout),this._stopTime=-1,this}dispose(){return super.dispose(),this._gainNode.dispose(),this.onended=Y,this}}class Un extends qe{constructor(){super(x(Un.getDefaults(),arguments,["offset"])),this.name="ToneConstantSource",this._source=this.context.createConstantSource();const t=x(Un.getDefaults(),arguments,["offset"]);Jt(this._source,this._gainNode),this.offset=new U({context:this.context,convert:t.convert,param:this._source.offset,units:t.units,value:t.offset,minValue:t.minValue,maxValue:t.maxValue})}static getDefaults(){return Object.assign(qe.getDefaults(),{convert:!0,offset:1,units:"number"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._source.start(e),this}_stopSource(t){this._source.stop(t)}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._source.disconnect(),this.offset.dispose(),this}}class J extends V{constructor(){super(x(J.getDefaults(),arguments,["value","units"])),this.name="Signal",this.override=!0;const t=x(J.getDefaults(),arguments,["value","units"]);this.output=this._constantSource=new Un({context:this.context,convert:t.convert,offset:t.value,units:t.units,minValue:t.minValue,maxValue:t.maxValue}),this._constantSource.start(0),this.input=this._param=this._constantSource.offset}static getDefaults(){return Object.assign(V.getDefaults(),{convert:!0,units:"number",value:0})}connect(t,e=0,n=0){return ds(this,t,e,n),this}dispose(){return super.dispose(),this._param.dispose(),this._constantSource.dispose(),this}setValueAtTime(t,e){return this._param.setValueAtTime(t,e),this}getValueAtTime(t){return this._param.getValueAtTime(t)}setRampPoint(t){return this._param.setRampPoint(t),this}linearRampToValueAtTime(t,e){return this._param.linearRampToValueAtTime(t,e),this}exponentialRampToValueAtTime(t,e){return this._param.exponentialRampToValueAtTime(t,e),this}exponentialRampTo(t,e,n){return this._param.exponentialRampTo(t,e,n),this}linearRampTo(t,e,n){return this._param.linearRampTo(t,e,n),this}targetRampTo(t,e,n){return this._param.targetRampTo(t,e,n),this}exponentialApproachValueAtTime(t,e,n){return this._param.exponentialApproachValueAtTime(t,e,n),this}setTargetAtTime(t,e,n){return this._param.setTargetAtTime(t,e,n),this}setValueCurveAtTime(t,e,n,i){return this._param.setValueCurveAtTime(t,e,n,i),this}cancelScheduledValues(t){return this._param.cancelScheduledValues(t),this}cancelAndHoldAtTime(t){return this._param.cancelAndHoldAtTime(t),this}rampTo(t,e,n){return this._param.rampTo(t,e,n),this}get value(){return this._param.value}set value(t){this._param.value=t}get convert(){return this._param.convert}set convert(t){this._param.convert=t}get units(){return this._param.units}get overridden(){return this._param.overridden}set overridden(t){this._param.overridden=t}get maxValue(){return this._param.maxValue}get minValue(){return this._param.minValue}apply(t){return this._param.apply(t),this}}function ds(s,t,e,n){(t instanceof U||Te(t)||t instanceof J&&t.override)&&(t.cancelScheduledValues(0),t.setValueAtTime(0,0),t instanceof J&&(t.overridden=!0)),Jt(s,t,e,n)}class Gn extends U{constructor(){super(x(Gn.getDefaults(),arguments,["value"])),this.name="TickParam",this._events=new It(1/0),this._multiplier=1;const t=x(Gn.getDefaults(),arguments,["value"]);this._multiplier=t.multiplier,this._events.cancel(0),this._events.add({ticks:0,time:0,type:"setValueAtTime",value:this._fromType(t.value)}),this.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(U.getDefaults(),{multiplier:1,units:"hertz",value:1})}setTargetAtTime(t,e,n){e=this.toSeconds(e),this.setRampPoint(e);const i=this._fromType(t),r=this._events.get(e),o=Math.round(Math.max(1/n,1));for(let a=0;a<=o;a++){const c=n*a+e,u=this._exponentialApproach(r.time,r.value,i,n,c);this.linearRampToValueAtTime(this._toType(u),c)}return this}setValueAtTime(t,e){const n=this.toSeconds(e);super.setValueAtTime(t,e);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}linearRampToValueAtTime(t,e){const n=this.toSeconds(e);super.linearRampToValueAtTime(t,e);const i=this._events.get(n),r=this._events.previousEvent(i),o=this._getTicksUntilEvent(r,n);return i.ticks=Math.max(o,0),this}exponentialRampToValueAtTime(t,e){e=this.toSeconds(e);const n=this._fromType(t),i=this._events.get(e),r=Math.round(Math.max((e-i.time)*10,1)),o=(e-i.time)/r;for(let a=0;a<=r;a++){const c=o*a+i.time,u=this._exponentialInterpolate(i.time,i.value,e,n,c);this.linearRampToValueAtTime(this._toType(u),c)}return this}_getTicksUntilEvent(t,e){if(t===null)t={ticks:0,time:0,type:"setValueAtTime",value:0};else if(Ot(t.ticks)){const o=this._events.previousEvent(t);t.ticks=this._getTicksUntilEvent(o,t.time)}const n=this._fromType(this.getValueAtTime(t.time));let i=this._fromType(this.getValueAtTime(e));const r=this._events.get(e);return r&&r.time===e&&r.type==="setValueAtTime"&&(i=this._fromType(this.getValueAtTime(e-this.sampleTime))),.5*(e-t.time)*(n+i)+t.ticks}getTicksAtTime(t){const e=this.toSeconds(t),n=this._events.get(e);return Math.max(this._getTicksUntilEvent(n,e),0)}getDurationOfTicks(t,e){const n=this.toSeconds(e),i=this.getTicksAtTime(e);return this.getTimeOfTick(i+t)-n}getTimeOfTick(t){const e=this._events.get(t,"ticks"),n=this._events.getAfter(t,"ticks");if(e&&e.ticks===t)return e.time;if(e&&n&&n.type==="linearRampToValueAtTime"&&e.value!==n.value){const i=this._fromType(this.getValueAtTime(e.time)),o=(this._fromType(this.getValueAtTime(n.time))-i)/(n.time-e.time),a=Math.sqrt(Math.pow(i,2)-2*o*(e.ticks-t)),c=(-i+a)/o,u=(-i-a)/o;return(c>0?c:u)+e.time}else return e?e.value===0?1/0:e.time+(t-e.ticks)/e.value:t/this._initialValue}ticksToTime(t,e){return this.getDurationOfTicks(t,e)}timeToTicks(t,e){const n=this.toSeconds(e),i=this.toSeconds(t),r=this.getTicksAtTime(n);return this.getTicksAtTime(n+i)-r}_fromType(t){return this.units==="bpm"&&this.multiplier?1/(60/t/this.multiplier):super._fromType(t)}_toType(t){return this.units==="bpm"&&this.multiplier?t/this.multiplier*60:super._toType(t)}get multiplier(){return this._multiplier}set multiplier(t){const e=this.value;this._multiplier=t,this.cancelScheduledValues(0),this.setValueAtTime(e,0)}}class zn extends J{constructor(){super(x(zn.getDefaults(),arguments,["value"])),this.name="TickSignal";const t=x(zn.getDefaults(),arguments,["value"]);this.input=this._param=new Gn({context:this.context,convert:t.convert,multiplier:t.multiplier,param:this._constantSource.offset,units:t.units,value:t.value})}static getDefaults(){return Object.assign(J.getDefaults(),{multiplier:1,units:"hertz",value:1})}ticksToTime(t,e){return this._param.ticksToTime(t,e)}timeToTicks(t,e){return this._param.timeToTicks(t,e)}getTimeOfTick(t){return this._param.getTimeOfTick(t)}getDurationOfTicks(t,e){return this._param.getDurationOfTicks(t,e)}getTicksAtTime(t){return this._param.getTicksAtTime(t)}get multiplier(){return this._param.multiplier}set multiplier(t){this._param.multiplier=t}dispose(){return super.dispose(),this._param.dispose(),this}}class $n extends Ct{constructor(){super(x($n.getDefaults(),arguments,["frequency"])),this.name="TickSource",this._state=new Ks,this._tickOffset=new It,this._ticksAtTime=new It,this._secondsAtTime=new It;const t=x($n.getDefaults(),arguments,["frequency"]);this.frequency=new zn({context:this.context,units:t.units,value:t.frequency}),Z(this,"frequency"),this._state.setStateAtTime("stopped",0),this.setTicksAtTime(0,0)}static getDefaults(){return Object.assign({frequency:1,units:"hertz"},Ct.getDefaults())}get state(){return this.getStateAtTime(this.now())}start(t,e){const n=this.toSeconds(t);return this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),$(e)&&this.setTicksAtTime(e,n),this._ticksAtTime.cancel(n),this._secondsAtTime.cancel(n)),this}stop(t){const e=this.toSeconds(t);if(this._state.getValueAtTime(e)==="stopped"){const n=this._state.get(e);n&&n.time>0&&(this._tickOffset.cancel(n.time),this._state.cancel(n.time))}return this._state.cancel(e),this._state.setStateAtTime("stopped",e),this.setTicksAtTime(0,e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e)),this}cancel(t){return t=this.toSeconds(t),this._state.cancel(t),this._tickOffset.cancel(t),this._ticksAtTime.cancel(t),this._secondsAtTime.cancel(t),this}getTicksAtTime(t){const e=this.toSeconds(t),n=this._state.getLastState("stopped",e),i=this._ticksAtTime.get(e),r={state:"paused",time:e};this._state.add(r);let o=i||n,a=i?i.ticks:0,c=null;return this._state.forEachBetween(o.time,e+this.sampleTime,u=>{let l=o.time;const h=this._tickOffset.get(u.time);h&&h.time>=o.time&&(a=h.ticks,l=h.time),o.state==="started"&&u.state!=="started"&&(a+=this.frequency.getTicksAtTime(u.time)-this.frequency.getTicksAtTime(l),u.time!=r.time&&(c={state:u.state,time:u.time,ticks:a})),o=u}),this._state.remove(r),c&&this._ticksAtTime.add(c),a}get ticks(){return this.getTicksAtTime(this.now())}set ticks(t){this.setTicksAtTime(t,this.now())}get seconds(){return this.getSecondsAtTime(this.now())}set seconds(t){const e=this.now(),n=this.frequency.timeToTicks(t,e);this.setTicksAtTime(n,e)}getSecondsAtTime(t){t=this.toSeconds(t);const e=this._state.getLastState("stopped",t),n={state:"paused",time:t};this._state.add(n);const i=this._secondsAtTime.get(t);let r=i||e,o=i?i.seconds:0,a=null;return this._state.forEachBetween(r.time,t+this.sampleTime,c=>{let u=r.time;const l=this._tickOffset.get(c.time);l&&l.time>=r.time&&(o=l.seconds,u=l.time),r.state==="started"&&c.state!=="started"&&(o+=c.time-u,c.time!=n.time&&(a={state:c.state,time:c.time,seconds:o})),r=c}),this._state.remove(n),a&&this._secondsAtTime.add(a),o}setTicksAtTime(t,e){return e=this.toSeconds(e),this._tickOffset.cancel(e),this._tickOffset.add({seconds:this.frequency.getDurationOfTicks(t,e),ticks:t,time:e}),this._ticksAtTime.cancel(e),this._secondsAtTime.cancel(e),this}getStateAtTime(t){return t=this.toSeconds(t),this._state.getValueAtTime(t)}getTimeOfTick(t,e=this.now()){const n=this._tickOffset.get(e),i=this._state.get(e),r=Math.max(n.time,i.time),o=this.frequency.getTicksAtTime(r)+t-n.ticks;return this.frequency.getTimeOfTick(o)}forEachTickBetween(t,e,n){let i=this._state.get(t);this._state.forEachBetween(t,e,o=>{i&&i.state==="started"&&o.state!=="started"&&this.forEachTickBetween(Math.max(i.time,t),o.time-this.sampleTime,n),i=o});let r=null;if(i&&i.state==="started"){const o=Math.max(i.time,t),a=this.frequency.getTicksAtTime(o),c=this.frequency.getTicksAtTime(i.time),u=a-c;let l=Math.ceil(u)-u;l=Rt(l,1)?0:l;let h=this.frequency.getTimeOfTick(a+l);for(;h<e;){try{n(h,Math.round(this.getTicksAtTime(h)))}catch(p){r=p;break}h+=this.frequency.getDurationOfTicks(1,h)}}if(r)throw r;return this}dispose(){return super.dispose(),this._state.dispose(),this._tickOffset.dispose(),this._ticksAtTime.dispose(),this._secondsAtTime.dispose(),this.frequency.dispose(),this}}class tn extends Ct{constructor(){super(x(tn.getDefaults(),arguments,["callback","frequency"])),this.name="Clock",this.callback=Y,this._lastUpdate=0,this._state=new Ks("stopped"),this._boundLoop=this._loop.bind(this);const t=x(tn.getDefaults(),arguments,["callback","frequency"]);this.callback=t.callback,this._tickSource=new $n({context:this.context,frequency:t.frequency,units:t.units}),this._lastUpdate=0,this.frequency=this._tickSource.frequency,Z(this,"frequency"),this._state.setStateAtTime("stopped",0),this.context.on("tick",this._boundLoop)}static getDefaults(){return Object.assign(Ct.getDefaults(),{callback:Y,frequency:1,units:"hertz"})}get state(){return this._state.getValueAtTime(this.now())}start(t,e){Tr(this.context);const n=this.toSeconds(t);return this.log("start",n),this._state.getValueAtTime(n)!=="started"&&(this._state.setStateAtTime("started",n),this._tickSource.start(n,e),n<this._lastUpdate&&this.emit("start",n,e)),this}stop(t){const e=this.toSeconds(t);return this.log("stop",e),this._state.cancel(e),this._state.setStateAtTime("stopped",e),this._tickSource.stop(e),e<this._lastUpdate&&this.emit("stop",e),this}pause(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)==="started"&&(this._state.setStateAtTime("paused",e),this._tickSource.pause(e),e<this._lastUpdate&&this.emit("pause",e)),this}get ticks(){return Math.ceil(this.getTicksAtTime(this.now()))}set ticks(t){this._tickSource.ticks=t}get seconds(){return this._tickSource.seconds}set seconds(t){this._tickSource.seconds=t}getSecondsAtTime(t){return this._tickSource.getSecondsAtTime(t)}setTicksAtTime(t,e){return this._tickSource.setTicksAtTime(t,e),this}getTimeOfTick(t,e=this.now()){return this._tickSource.getTimeOfTick(t,e)}getTicksAtTime(t){return this._tickSource.getTicksAtTime(t)}nextTickTime(t,e){const n=this.toSeconds(e),i=this.getTicksAtTime(n);return this._tickSource.getTimeOfTick(i+t,n)}_loop(){const t=this._lastUpdate,e=this.now();this._lastUpdate=e,this.log("loop",t,e),t!==e&&(this._state.forEachBetween(t,e,n=>{switch(n.state){case"started":const i=this._tickSource.getTicksAtTime(n.time);this.emit("start",n.time,i);break;case"stopped":n.time!==0&&this.emit("stop",n.time);break;case"paused":this.emit("pause",n.time);break}}),this._tickSource.forEachTickBetween(t,e,(n,i)=>{this.callback(n,i)}))}getStateAtTime(t){const e=this.toSeconds(t);return this._state.getValueAtTime(e)}dispose(){return super.dispose(),this.context.off("tick",this._boundLoop),this._tickSource.dispose(),this._state.dispose(),this}}Sn.mixin(tn);class Zn extends V{constructor(){super(x(Zn.getDefaults(),arguments,["delayTime","maxDelay"])),this.name="Delay";const t=x(Zn.getDefaults(),arguments,["delayTime","maxDelay"]),e=this.toSeconds(t.maxDelay);this._maxDelay=Math.max(e,this.toSeconds(t.delayTime)),this._delayNode=this.input=this.output=this.context.createDelay(e),this.delayTime=new U({context:this.context,param:this._delayNode.delayTime,units:"time",value:t.delayTime,minValue:0,maxValue:this.maxDelay}),Z(this,"delayTime")}static getDefaults(){return Object.assign(V.getDefaults(),{delayTime:0,maxDelay:1})}get maxDelay(){return this._maxDelay}dispose(){return super.dispose(),this._delayNode.disconnect(),this.delayTime.dispose(),this}}class ti extends ee{constructor(){super(),this.name="ToneAudioBuffers",this._buffers=new Map,this._loadingCount=0;const t=x(ti.getDefaults(),arguments,["urls","onload","baseUrl"],"urls");this.baseUrl=t.baseUrl,Object.keys(t.urls).forEach(e=>{this._loadingCount++;const n=t.urls[e];this.add(e,n,this._bufferLoaded.bind(this,t.onload),t.onerror)})}static getDefaults(){return{baseUrl:"",onerror:Y,onload:Y,urls:{}}}has(t){return this._buffers.has(t.toString())}get(t){return F(this.has(t),`ToneAudioBuffers has no buffer named: ${t}`),this._buffers.get(t.toString())}_bufferLoaded(t){this._loadingCount--,this._loadingCount===0&&t&&t()}get loaded(){return Array.from(this._buffers).every(([t,e])=>e.loaded)}add(t,e,n=Y,i=Y){return Qt(e)?(this.baseUrl&&e.trim().substring(0,11).toLowerCase()==="data:audio/"&&(this.baseUrl=""),this._buffers.set(t.toString(),new Q(this.baseUrl+e,n,i))):this._buffers.set(t.toString(),new Q(e,n,i)),this}dispose(){return super.dispose(),this._buffers.forEach(t=>t.dispose()),this._buffers.clear(),this}}class en extends xt{constructor(){super(...arguments),this.name="MidiClass",this.defaultUnits="midi"}_frequencyToUnits(t){return _e(super._frequencyToUnits(t))}_ticksToUnits(t){return _e(super._ticksToUnits(t))}_beatsToUnits(t){return _e(super._beatsToUnits(t))}_secondsToUnits(t){return _e(super._secondsToUnits(t))}toMidi(){return this.valueOf()}toFrequency(){return Dr(this.toMidi())}transpose(t){return new en(this.context,this.toMidi()+t)}}function od(s,t){return new en(Nt(),s,t)}class Me extends Ye{constructor(){super(...arguments),this.name="Ticks",this.defaultUnits="i"}_now(){return this.context.transport.ticks}_beatsToUnits(t){return this._getPPQ()*t}_secondsToUnits(t){return Math.floor(t/(60/this._getBpm())*this._getPPQ())}_ticksToUnits(t){return t}toTicks(){return this.valueOf()}toSeconds(){return this.valueOf()/this._getPPQ()*(60/this._getBpm())}}class gh extends Ct{constructor(){super(...arguments),this.name="Draw",this.expiration=.25,this.anticipation=.008,this._events=new It,this._boundDrawLoop=this._drawLoop.bind(this),this._animationFrame=-1}schedule(t,e){return this._events.add({callback:t,time:this.toSeconds(e)}),this._events.length===1&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop)),this}cancel(t){return this._events.cancel(this.toSeconds(t)),this}_drawLoop(){const t=this.context.currentTime;for(;this._events.length&&this._events.peek().time-this.anticipation<=t;){const e=this._events.shift();e&&t-e.time<=this.expiration&&e.callback()}this._events.length>0&&(this._animationFrame=requestAnimationFrame(this._boundDrawLoop))}dispose(){return super.dispose(),this._events.dispose(),cancelAnimationFrame(this._animationFrame),this}}cs(s=>{s.draw=new gh({context:s})});us(s=>{s.draw.dispose()});class yh extends ee{constructor(){super(...arguments),this.name="IntervalTimeline",this._root=null,this._length=0}add(t){F($(t.time),"Events must have a time property"),F($(t.duration),"Events must have a duration parameter"),t.time=t.time.valueOf();let e=new vh(t.time,t.time+t.duration,t);for(this._root===null?this._root=e:this._root.insert(e),this._length++;e!==null;)e.updateHeight(),e.updateMax(),this._rebalance(e),e=e.parent;return this}remove(t){if(this._root!==null){const e=[];this._root.search(t.time,e);for(const n of e)if(n.event===t){this._removeNode(n),this._length--;break}}return this}get length(){return this._length}cancel(t){return this.forEachFrom(t,e=>this.remove(e)),this}_setRoot(t){this._root=t,this._root!==null&&(this._root.parent=null)}_replaceNodeInParent(t,e){t.parent!==null?(t.isLeftChild()?t.parent.left=e:t.parent.right=e,this._rebalance(t.parent)):this._setRoot(e)}_removeNode(t){if(t.left===null&&t.right===null)this._replaceNodeInParent(t,null);else if(t.right===null)this._replaceNodeInParent(t,t.left);else if(t.left===null)this._replaceNodeInParent(t,t.right);else{const e=t.getBalance();let n,i=null;if(e>0)if(t.left.right===null)n=t.left,n.right=t.right,i=n;else{for(n=t.left.right;n.right!==null;)n=n.right;n.parent&&(n.parent.right=n.left,i=n.parent,n.left=t.left,n.right=t.right)}else if(t.right.left===null)n=t.right,n.left=t.left,i=n;else{for(n=t.right.left;n.left!==null;)n=n.left;n.parent&&(n.parent.left=n.right,i=n.parent,n.left=t.left,n.right=t.right)}t.parent!==null?t.isLeftChild()?t.parent.left=n:t.parent.right=n:this._setRoot(n),i&&this._rebalance(i)}t.dispose()}_rotateLeft(t){const e=t.parent,n=t.isLeftChild(),i=t.right;i&&(t.right=i.left,i.left=t),e!==null?n?e.left=i:e.right=i:this._setRoot(i)}_rotateRight(t){const e=t.parent,n=t.isLeftChild(),i=t.left;i&&(t.left=i.right,i.right=t),e!==null?n?e.left=i:e.right=i:this._setRoot(i)}_rebalance(t){const e=t.getBalance();e>1&&t.left?t.left.getBalance()<0?this._rotateLeft(t.left):this._rotateRight(t):e<-1&&t.right&&(t.right.getBalance()>0?this._rotateRight(t.right):this._rotateLeft(t))}get(t){if(this._root!==null){const e=[];if(this._root.search(t,e),e.length>0){let n=e[0];for(let i=1;i<e.length;i++)e[i].low>n.low&&(n=e[i]);return n.event}}return null}forEach(t){if(this._root!==null){const e=[];this._root.traverse(n=>e.push(n)),e.forEach(n=>{n.event&&t(n.event)})}return this}forEachAtTime(t,e){if(this._root!==null){const n=[];this._root.search(t,n),n.forEach(i=>{i.event&&e(i.event)})}return this}forEachFrom(t,e){if(this._root!==null){const n=[];this._root.searchAfter(t,n),n.forEach(i=>{i.event&&e(i.event)})}return this}dispose(){return super.dispose(),this._root!==null&&this._root.traverse(t=>t.dispose()),this._root=null,this}}class vh{constructor(t,e,n){this._left=null,this._right=null,this.parent=null,this.height=0,this.event=n,this.low=t,this.high=e,this.max=this.high}insert(t){t.low<=this.low?this.left===null?this.left=t:this.left.insert(t):this.right===null?this.right=t:this.right.insert(t)}search(t,e){t>this.max||(this.left!==null&&this.left.search(t,e),this.low<=t&&this.high>t&&e.push(this),!(this.low>t)&&this.right!==null&&this.right.search(t,e))}searchAfter(t,e){this.low>=t&&(e.push(this),this.left!==null&&this.left.searchAfter(t,e)),this.right!==null&&this.right.searchAfter(t,e)}traverse(t){t(this),this.left!==null&&this.left.traverse(t),this.right!==null&&this.right.traverse(t)}updateHeight(){this.left!==null&&this.right!==null?this.height=Math.max(this.left.height,this.right.height)+1:this.right!==null?this.height=this.right.height+1:this.left!==null?this.height=this.left.height+1:this.height=0}updateMax(){this.max=this.high,this.left!==null&&(this.max=Math.max(this.max,this.left.max)),this.right!==null&&(this.max=Math.max(this.max,this.right.max))}getBalance(){let t=0;return this.left!==null&&this.right!==null?t=this.left.height-this.right.height:this.left!==null?t=this.left.height+1:this.right!==null&&(t=-(this.right.height+1)),t}isLeftChild(){return this.parent!==null&&this.parent.left===this}get left(){return this._left}set left(t){this._left=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}get right(){return this._right}set right(t){this._right=t,t!==null&&(t.parent=this),this.updateHeight(),this.updateMax()}dispose(){this.parent=null,this._left=null,this._right=null,this.event=null}}class be extends V{constructor(){super(x(be.getDefaults(),arguments,["volume"])),this.name="Volume";const t=x(be.getDefaults(),arguments,["volume"]);this.input=this.output=new K({context:this.context,gain:t.volume,units:"decibels"}),this.volume=this.output.gain,Z(this,"volume"),this._unmutedVolume=t.volume,this.mute=t.mute}static getDefaults(){return Object.assign(V.getDefaults(),{mute:!1,volume:0})}get mute(){return this.volume.value===-1/0}set mute(t){!this.mute&&t?(this._unmutedVolume=this.volume.value,this.volume.value=-1/0):this.mute&&!t&&(this.volume.value=this._unmutedVolume)}dispose(){return super.dispose(),this.input.dispose(),this.volume.dispose(),this}}class Xn extends V{constructor(){super(x(Xn.getDefaults(),arguments)),this.name="Destination",this.input=new be({context:this.context}),this.output=new K({context:this.context}),this.volume=this.input.volume;const t=x(Xn.getDefaults(),arguments);Ke(this.input,this.output,this.context.rawContext.destination),this.mute=t.mute,this._internalChannels=[this.input,this.context.rawContext.destination,this.output]}static getDefaults(){return Object.assign(V.getDefaults(),{mute:!1,volume:0})}get mute(){return this.input.mute}set mute(t){this.input.mute=t}chain(...t){return this.input.disconnect(),t.unshift(this.input),t.push(this.output),Ke(...t),this}get maxChannelCount(){return this.context.rawContext.destination.maxChannelCount}dispose(){return super.dispose(),this.volume.dispose(),this}}cs(s=>{s.destination=new Xn({context:s})});us(s=>{s.destination.dispose()});class wh extends ee{constructor(t){super(),this.name="TimelineValue",this._timeline=new It({memory:10}),this._initialValue=t}set(t,e){return this._timeline.add({value:t,time:e}),this}get(t){const e=this._timeline.get(t);return e?e.value:this._initialValue}}class ae{constructor(t,e){this.id=ae._eventId++,this._remainderTime=0;const n=Object.assign(ae.getDefaults(),e);this.transport=t,this.callback=n.callback,this._once=n.once,this.time=Math.floor(n.time),this._remainderTime=n.time-this.time}static getDefaults(){return{callback:Y,once:!1,time:0}}get floatTime(){return this.time+this._remainderTime}invoke(t){if(this.callback){const e=this.transport.bpm.getDurationOfTicks(1,t);this.callback(t+this._remainderTime*e),this._once&&this.transport.clear(this.id)}}dispose(){return this.callback=void 0,this}}ae._eventId=0;class ei extends ae{constructor(t,e){super(t,e),this._currentId=-1,this._nextId=-1,this._nextTick=this.time,this._boundRestart=this._restart.bind(this);const n=Object.assign(ei.getDefaults(),e);this.duration=n.duration,this._interval=n.interval,this._nextTick=n.time,this.transport.on("start",this._boundRestart),this.transport.on("loopStart",this._boundRestart),this.transport.on("ticks",this._boundRestart),this.context=this.transport.context,this._restart()}static getDefaults(){return Object.assign({},ae.getDefaults(),{duration:1/0,interval:1,once:!1})}invoke(t){this._createEvents(t),super.invoke(t)}_createEvent(){return Bn(this._nextTick,this.floatTime+this.duration)?this.transport.scheduleOnce(this.invoke.bind(this),new Me(this.context,this._nextTick).toSeconds()):-1}_createEvents(t){Bn(this._nextTick+this._interval,this.floatTime+this.duration)&&(this._nextTick+=this._interval,this._currentId=this._nextId,this._nextId=this.transport.scheduleOnce(this.invoke.bind(this),new Me(this.context,this._nextTick).toSeconds()))}_restart(t){this.transport.clear(this._currentId),this.transport.clear(this._nextId),this._nextTick=this.floatTime;const e=this.transport.getTicksAtTime(t);Fe(e,this.time)&&(this._nextTick=this.floatTime+Math.ceil((e-this.floatTime)/this._interval)*this._interval),this._currentId=this._createEvent(),this._nextTick+=this._interval,this._nextId=this._createEvent()}dispose(){return super.dispose(),this.transport.clear(this._currentId),this.transport.clear(this._nextId),this.transport.off("start",this._boundRestart),this.transport.off("loopStart",this._boundRestart),this.transport.off("ticks",this._boundRestart),this}}class nn extends Ct{constructor(){super(x(nn.getDefaults(),arguments)),this.name="Transport",this._loop=new wh(!1),this._loopStart=0,this._loopEnd=0,this._scheduledEvents={},this._timeline=new It,this._repeatedEvents=new yh,this._syncedSignals=[],this._swingAmount=0;const t=x(nn.getDefaults(),arguments);this._ppq=t.ppq,this._clock=new tn({callback:this._processTick.bind(this),context:this.context,frequency:0,units:"bpm"}),this._bindClockEvents(),this.bpm=this._clock.frequency,this._clock.frequency.multiplier=t.ppq,this.bpm.setValueAtTime(t.bpm,0),Z(this,"bpm"),this._timeSignature=t.timeSignature,this._swingTicks=t.ppq/2}static getDefaults(){return Object.assign(Ct.getDefaults(),{bpm:120,loopEnd:"4m",loopStart:0,ppq:192,swing:0,swingSubdivision:"8n",timeSignature:4})}_processTick(t,e){if(this._loop.get(t)&&e>=this._loopEnd&&(this.emit("loopEnd",t),this._clock.setTicksAtTime(this._loopStart,t),e=this._loopStart,this.emit("loopStart",t,this._clock.getSecondsAtTime(t)),this.emit("loop",t)),this._swingAmount>0&&e%this._ppq!==0&&e%(this._swingTicks*2)!==0){const n=e%(this._swingTicks*2)/(this._swingTicks*2),i=Math.sin(n*Math.PI)*this._swingAmount;t+=new Me(this.context,this._swingTicks*2/3).toSeconds()*i}xi(!0),this._timeline.forEachAtTime(e,n=>n.invoke(t)),xi(!1)}schedule(t,e){const n=new ae(this,{callback:t,time:new Ye(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}scheduleRepeat(t,e,n,i=1/0){const r=new ei(this,{callback:t,duration:new Vt(this.context,i).toTicks(),interval:new Vt(this.context,e).toTicks(),time:new Ye(this.context,n).toTicks()});return this._addEvent(r,this._repeatedEvents)}scheduleOnce(t,e){const n=new ae(this,{callback:t,once:!0,time:new Ye(this.context,e).toTicks()});return this._addEvent(n,this._timeline)}clear(t){if(this._scheduledEvents.hasOwnProperty(t)){const e=this._scheduledEvents[t.toString()];e.timeline.remove(e.event),e.event.dispose(),delete this._scheduledEvents[t.toString()]}return this}_addEvent(t,e){return this._scheduledEvents[t.id.toString()]={event:t,timeline:e},e.add(t),t.id}cancel(t=0){const e=this.toTicks(t);return this._timeline.forEachFrom(e,n=>this.clear(n.id)),this._repeatedEvents.forEachFrom(e,n=>this.clear(n.id)),this}_bindClockEvents(){this._clock.on("start",(t,e)=>{e=new Me(this.context,e).toSeconds(),this.emit("start",t,e)}),this._clock.on("stop",t=>{this.emit("stop",t)}),this._clock.on("pause",t=>{this.emit("pause",t)})}get state(){return this._clock.getStateAtTime(this.now())}start(t,e){this.context.resume();let n;return $(e)&&(n=this.toTicks(e)),this._clock.start(t,n),this}stop(t){return this._clock.stop(t),this}pause(t){return this._clock.pause(t),this}toggle(t){return t=this.toSeconds(t),this._clock.getStateAtTime(t)!=="started"?this.start(t):this.stop(t),this}get timeSignature(){return this._timeSignature}set timeSignature(t){Dt(t)&&(t=t[0]/t[1]*4),this._timeSignature=t}get loopStart(){return new Vt(this.context,this._loopStart,"i").toSeconds()}set loopStart(t){this._loopStart=this.toTicks(t)}get loopEnd(){return new Vt(this.context,this._loopEnd,"i").toSeconds()}set loopEnd(t){this._loopEnd=this.toTicks(t)}get loop(){return this._loop.get(this.now())}set loop(t){this._loop.set(t,this.now())}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get swing(){return this._swingAmount}set swing(t){this._swingAmount=t}get swingSubdivision(){return new Me(this.context,this._swingTicks).toNotation()}set swingSubdivision(t){this._swingTicks=this.toTicks(t)}get position(){const t=this.now(),e=this._clock.getTicksAtTime(t);return new Me(this.context,e).toBarsBeatsSixteenths()}set position(t){const e=this.toTicks(t);this.ticks=e}get seconds(){return this._clock.seconds}set seconds(t){const e=this.now(),n=this._clock.frequency.timeToTicks(t,e);this.ticks=n}get progress(){if(this.loop){const t=this.now();return(this._clock.getTicksAtTime(t)-this._loopStart)/(this._loopEnd-this._loopStart)}else return 0}get ticks(){return this._clock.ticks}set ticks(t){if(this._clock.ticks!==t){const e=this.now();if(this.state==="started"){const n=this._clock.getTicksAtTime(e),i=this._clock.frequency.getDurationOfTicks(Math.ceil(n)-n,e),r=e+i;this.emit("stop",r),this._clock.setTicksAtTime(t,r),this.emit("start",r,this._clock.getSecondsAtTime(r))}else this.emit("ticks",e),this._clock.setTicksAtTime(t,e)}}getTicksAtTime(t){return this._clock.getTicksAtTime(t)}getSecondsAtTime(t){return this._clock.getSecondsAtTime(t)}get PPQ(){return this._clock.frequency.multiplier}set PPQ(t){this._clock.frequency.multiplier=t}nextSubdivision(t){if(t=this.toTicks(t),this.state!=="started")return 0;{const e=this.now(),n=this.getTicksAtTime(e),i=t-n%t;return this._clock.nextTickTime(i,e)}}syncSignal(t,e){if(!e){const i=this.now();if(t.getValueAtTime(i)!==0){const r=this.bpm.getValueAtTime(i),o=1/(60/r/this.PPQ);e=t.getValueAtTime(i)/o}else e=0}const n=new K(e);return this.bpm.connect(n),n.connect(t._param),this._syncedSignals.push({initial:t.value,ratio:n,signal:t}),t.value=0,this}unsyncSignal(t){for(let e=this._syncedSignals.length-1;e>=0;e--){const n=this._syncedSignals[e];n.signal===t&&(n.ratio.dispose(),n.signal.value=n.initial,this._syncedSignals.splice(e,1))}return this}dispose(){return super.dispose(),this._clock.dispose(),Qs(this,"bpm"),this._timeline.dispose(),this._repeatedEvents.dispose(),this}}Sn.mixin(nn);cs(s=>{s.transport=new nn({context:s})});us(s=>{s.transport.dispose()});class _t extends V{constructor(t){super(t),this.input=void 0,this._state=new Ks("stopped"),this._synced=!1,this._scheduled=[],this._syncedStart=Y,this._syncedStop=Y,this._state.memory=100,this._state.increasing=!0,this._volume=this.output=new be({context:this.context,mute:t.mute,volume:t.volume}),this.volume=this._volume.volume,Z(this,"volume"),this.onstop=t.onstop}static getDefaults(){return Object.assign(V.getDefaults(),{mute:!1,onstop:Y,volume:0})}get state(){return this._synced?this.context.transport.state==="started"?this._state.getValueAtTime(this.context.transport.seconds):"stopped":this._state.getValueAtTime(this.now())}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}_clampToCurrentTime(t){return this._synced?t:Math.max(t,this.context.currentTime)}start(t,e,n){let i=Ot(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(i=this._clampToCurrentTime(i),!this._synced&&this._state.getValueAtTime(i)==="started")F(Fe(i,this._state.get(i).time),"Start time must be strictly greater than previous start time"),this._state.cancel(i),this._state.setStateAtTime("started",i),this.log("restart",i),this.restart(i,e,n);else if(this.log("start",i),this._state.setStateAtTime("started",i),this._synced){const r=this._state.get(i);r&&(r.offset=this.toSeconds(Re(e,0)),r.duration=n?this.toSeconds(n):void 0);const o=this.context.transport.schedule(a=>{this._start(a,e,n)},i);this._scheduled.push(o),this.context.transport.state==="started"&&this.context.transport.getSecondsAtTime(this.immediate())>i&&this._syncedStart(this.now(),this.context.transport.seconds)}else Tr(this.context),this._start(i,e,n);return this}stop(t){let e=Ot(t)&&this._synced?this.context.transport.seconds:this.toSeconds(t);if(e=this._clampToCurrentTime(e),this._state.getValueAtTime(e)==="started"||$(this._state.getNextState("started",e))){if(this.log("stop",e),!this._synced)this._stop(e);else{const n=this.context.transport.schedule(this._stop.bind(this),e);this._scheduled.push(n)}this._state.cancel(e),this._state.setStateAtTime("stopped",e)}return this}restart(t,e,n){return t=this.toSeconds(t),this._state.getValueAtTime(t)==="started"&&(this._state.cancel(t),this._restart(t,e,n)),this}sync(){return this._synced||(this._synced=!0,this._syncedStart=(t,e)=>{if(Fe(e,0)){const n=this._state.get(e);if(n&&n.state==="started"&&n.time!==e){const i=e-this.toSeconds(n.time);let r;n.duration&&(r=this.toSeconds(n.duration)-i),this._start(t,this.toSeconds(n.offset)+i,r)}}},this._syncedStop=t=>{const e=this.context.transport.getSecondsAtTime(Math.max(t-this.sampleTime,0));this._state.getValueAtTime(e)==="started"&&this._stop(t)},this.context.transport.on("start",this._syncedStart),this.context.transport.on("loopStart",this._syncedStart),this.context.transport.on("stop",this._syncedStop),this.context.transport.on("pause",this._syncedStop),this.context.transport.on("loopEnd",this._syncedStop)),this}unsync(){return this._synced&&(this.context.transport.off("stop",this._syncedStop),this.context.transport.off("pause",this._syncedStop),this.context.transport.off("loopEnd",this._syncedStop),this.context.transport.off("start",this._syncedStart),this.context.transport.off("loopStart",this._syncedStart)),this._synced=!1,this._scheduled.forEach(t=>this.context.transport.clear(t)),this._scheduled=[],this._state.cancel(0),this._stop(0),this}dispose(){return super.dispose(),this.onstop=Y,this.unsync(),this._volume.dispose(),this._state.dispose(),this}}class We extends qe{constructor(){super(x(We.getDefaults(),arguments,["url","onload"])),this.name="ToneBufferSource",this._source=this.context.createBufferSource(),this._internalChannels=[this._source],this._sourceStarted=!1,this._sourceStopped=!1;const t=x(We.getDefaults(),arguments,["url","onload"]);Jt(this._source,this._gainNode),this._source.onended=()=>this._stopSource(),this.playbackRate=new U({context:this.context,param:this._source.playbackRate,units:"positive",value:t.playbackRate}),this.loop=t.loop,this.loopStart=t.loopStart,this.loopEnd=t.loopEnd,this._buffer=new Q(t.url,t.onload,t.onerror),this._internalChannels.push(this._source)}static getDefaults(){return Object.assign(qe.getDefaults(),{url:new Q,loop:!1,loopEnd:0,loopStart:0,onload:Y,onerror:Y,playbackRate:1})}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t}get curve(){return this._curve}set curve(t){this._curve=t}start(t,e,n,i=1){F(this.buffer.loaded,"buffer is either not set or not loaded");const r=this.toSeconds(t);this._startGain(r,i),this.loop?e=Re(e,this.loopStart):e=Re(e,0);let o=Math.max(this.toSeconds(e),0);if(this.loop){const a=this.toSeconds(this.loopEnd)||this.buffer.duration,c=this.toSeconds(this.loopStart),u=a-c;Ss(o,a)&&(o=(o-c)%u+c),Rt(o,this.buffer.duration)&&(o=0)}if(this._source.buffer=this.buffer.get(),this._source.loopEnd=this.toSeconds(this.loopEnd)||this.buffer.duration,Bn(o,this.buffer.duration)&&(this._sourceStarted=!0,this._source.start(r,o)),$(n)){let a=this.toSeconds(n);a=Math.max(a,0),this.stop(r+a)}return this}_stopSource(t){!this._sourceStopped&&this._sourceStarted&&(this._sourceStopped=!0,this._source.stop(this.toSeconds(t)),this._onended())}get loopStart(){return this._source.loopStart}set loopStart(t){this._source.loopStart=this.toSeconds(t)}get loopEnd(){return this._source.loopEnd}set loopEnd(t){this._source.loopEnd=this.toSeconds(t)}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._source.loop}set loop(t){this._source.loop=t,this._sourceStarted&&this.cancelStop()}dispose(){return super.dispose(),this._source.onended=null,this._source.disconnect(),this._buffer.dispose(),this.playbackRate.dispose(),this}}class sn extends _t{constructor(){super(x(sn.getDefaults(),arguments,["type"])),this.name="Noise",this._source=null;const t=x(sn.getDefaults(),arguments,["type"]);this._playbackRate=t.playbackRate,this.type=t.type,this._fadeIn=t.fadeIn,this._fadeOut=t.fadeOut}static getDefaults(){return Object.assign(_t.getDefaults(),{fadeIn:0,fadeOut:0,playbackRate:1,type:"white"})}get type(){return this._type}set type(t){if(F(t in Ci,"Noise: invalid type: "+t),this._type!==t&&(this._type=t,this.state==="started")){const e=this.now();this._stop(e),this._start(e)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t,this._source&&(this._source.playbackRate.value=t)}_start(t){const e=Ci[this._type];this._source=new We({url:e,context:this.context,fadeIn:this._fadeIn,fadeOut:this._fadeOut,loop:!0,onended:()=>this.onstop(this),playbackRate:this._playbackRate}).connect(this.output),this._source.start(this.toSeconds(t),Math.random()*(e.duration-.001))}_stop(t){this._source&&(this._source.stop(this.toSeconds(t)),this._source=null)}get fadeIn(){return this._fadeIn}set fadeIn(t){this._fadeIn=t,this._source&&(this._source.fadeIn=this._fadeIn)}get fadeOut(){return this._fadeOut}set fadeOut(t){this._fadeOut=t,this._source&&(this._source.fadeOut=this._fadeOut)}_restart(t){this._stop(t),this._start(t)}dispose(){return super.dispose(),this._source&&this._source.disconnect(),this}}const De=44100*5,_s=2,Zt={brown:null,pink:null,white:null},Ci={get brown(){if(!Zt.brown){const s=[];for(let t=0;t<_s;t++){const e=new Float32Array(De);s[t]=e;let n=0;for(let i=0;i<De;i++){const r=Math.random()*2-1;e[i]=(n+.02*r)/1.02,n=e[i],e[i]*=3.5}}Zt.brown=new Q().fromArray(s)}return Zt.brown},get pink(){if(!Zt.pink){const s=[];for(let t=0;t<_s;t++){const e=new Float32Array(De);s[t]=e;let n,i,r,o,a,c,u;n=i=r=o=a=c=u=0;for(let l=0;l<De;l++){const h=Math.random()*2-1;n=.99886*n+h*.0555179,i=.99332*i+h*.0750759,r=.969*r+h*.153852,o=.8665*o+h*.3104856,a=.55*a+h*.5329522,c=-.7616*c-h*.016898,e[l]=n+i+r+o+a+c+u+h*.5362,e[l]*=.11,u=h*.115926}}Zt.pink=new Q().fromArray(s)}return Zt.pink},get white(){if(!Zt.white){const s=[];for(let t=0;t<_s;t++){const e=new Float32Array(De);s[t]=e;for(let n=0;n<De;n++)e[n]=Math.random()*2-1}Zt.white=new Q().fromArray(s)}return Zt.white}};function ke(s,t){return lt(this,void 0,void 0,function*(){const e=t/s.context.sampleRate,n=new ls(1,e,s.context.sampleRate);return new s.constructor(Object.assign(s.get(),{frequency:2/e,detune:0,context:n})).toDestination().start(0),(yield n.render()).getChannelData(0)})}class Yn extends qe{constructor(){super(x(Yn.getDefaults(),arguments,["frequency","type"])),this.name="ToneOscillatorNode",this._oscillator=this.context.createOscillator(),this._internalChannels=[this._oscillator];const t=x(Yn.getDefaults(),arguments,["frequency","type"]);Jt(this._oscillator,this._gainNode),this.type=t.type,this.frequency=new U({context:this.context,param:this._oscillator.frequency,units:"frequency",value:t.frequency}),this.detune=new U({context:this.context,param:this._oscillator.detune,units:"cents",value:t.detune}),Z(this,["frequency","detune"])}static getDefaults(){return Object.assign(qe.getDefaults(),{detune:0,frequency:440,type:"sine"})}start(t){const e=this.toSeconds(t);return this.log("start",e),this._startGain(e),this._oscillator.start(e),this}_stopSource(t){this._oscillator.stop(t)}setPeriodicWave(t){return this._oscillator.setPeriodicWave(t),this}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t}dispose(){return super.dispose(),this.state==="started"&&this.stop(),this._oscillator.disconnect(),this.frequency.dispose(),this.detune.dispose(),this}}class ot extends _t{constructor(){super(x(ot.getDefaults(),arguments,["frequency","type"])),this.name="Oscillator",this._oscillator=null;const t=x(ot.getDefaults(),arguments,["frequency","type"]);this.frequency=new J({context:this.context,units:"frequency",value:t.frequency}),Z(this,"frequency"),this.detune=new J({context:this.context,units:"cents",value:t.detune}),Z(this,"detune"),this._partials=t.partials,this._partialCount=t.partialCount,this._type=t.type,t.partialCount&&t.type!=="custom"&&(this._type=this.baseType+t.partialCount.toString()),this.phase=t.phase}static getDefaults(){return Object.assign(_t.getDefaults(),{detune:0,frequency:440,partialCount:0,partials:[],phase:0,type:"sine"})}_start(t){const e=this.toSeconds(t),n=new Yn({context:this.context,onended:()=>this.onstop(this)});this._oscillator=n,this._wave?this._oscillator.setPeriodicWave(this._wave):this._oscillator.type=this._type,this._oscillator.connect(this.output),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.start(e)}_stop(t){const e=this.toSeconds(t);this._oscillator&&this._oscillator.stop(e)}_restart(t){const e=this.toSeconds(t);return this.log("restart",e),this._oscillator&&this._oscillator.cancelStop(),this._state.cancel(e),this}syncFrequency(){return this.context.transport.syncSignal(this.frequency),this}unsyncFrequency(){return this.context.transport.unsyncSignal(this.frequency),this}_getCachedPeriodicWave(){if(this._type==="custom")return ot._periodicWaveCache.find(e=>e.phase===this._phase&&ih(e.partials,this._partials));{const t=ot._periodicWaveCache.find(e=>e.type===this._type&&e.phase===this._phase);return this._partialCount=t?t.partialCount:this._partialCount,t}}get type(){return this._type}set type(t){this._type=t;const e=["sine","square","sawtooth","triangle"].indexOf(t)!==-1;if(this._phase===0&&e)this._wave=void 0,this._partialCount=0,this._oscillator!==null&&(this._oscillator.type=t);else{const n=this._getCachedPeriodicWave();if($(n)){const{partials:i,wave:r}=n;this._wave=r,this._partials=i,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave)}else{const[i,r]=this._getRealImaginary(t,this._phase),o=this.context.createPeriodicWave(i,r);this._wave=o,this._oscillator!==null&&this._oscillator.setPeriodicWave(this._wave),ot._periodicWaveCache.push({imag:r,partialCount:this._partialCount,partials:this._partials,phase:this._phase,real:i,type:this._type,wave:this._wave}),ot._periodicWaveCache.length>100&&ot._periodicWaveCache.shift()}}}get baseType(){return this._type.replace(this.partialCount.toString(),"")}set baseType(t){this.partialCount&&this._type!=="custom"&&t!=="custom"?this.type=t+this.partialCount:this.type=t}get partialCount(){return this._partialCount}set partialCount(t){Ft(t,0);let e=this._type;const n=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(this._type);if(n&&(e=n[1]),this._type!=="custom")t===0?this.type=e:this.type=e+t.toString();else{const i=new Float32Array(t);this._partials.forEach((r,o)=>i[o]=r),this._partials=Array.from(i),this.type=this._type}}_getRealImaginary(t,e){let i=2048;const r=new Float32Array(i),o=new Float32Array(i);let a=1;if(t==="custom"){if(a=this._partials.length+1,this._partialCount=this._partials.length,i=a,this._partials.length===0)return[r,o]}else{const c=/^(sine|triangle|square|sawtooth)(\d+)$/.exec(t);c?(a=parseInt(c[2],10)+1,this._partialCount=parseInt(c[2],10),t=c[1],a=Math.max(a,2),i=a):this._partialCount=0,this._partials=[]}for(let c=1;c<i;++c){const u=2/(c*Math.PI);let l;switch(t){case"sine":l=c<=a?1:0,this._partials[c-1]=l;break;case"square":l=c&1?2*u:0,this._partials[c-1]=l;break;case"sawtooth":l=u*(c&1?1:-1),this._partials[c-1]=l;break;case"triangle":c&1?l=2*(u*u)*(c-1>>1&1?-1:1):l=0,this._partials[c-1]=l;break;case"custom":l=this._partials[c-1];break;default:throw new TypeError("Oscillator: invalid type: "+t)}l!==0?(r[c]=-l*Math.sin(e*c),o[c]=l*Math.cos(e*c)):(r[c]=0,o[c]=0)}return[r,o]}_inverseFFT(t,e,n){let i=0;const r=t.length;for(let o=0;o<r;o++)i+=t[o]*Math.cos(o*n)+e[o]*Math.sin(o*n);return i}getInitialValue(){const[t,e]=this._getRealImaginary(this._type,0);let n=0;const i=Math.PI*2,r=32;for(let o=0;o<r;o++)n=Math.max(this._inverseFFT(t,e,o/r*i),n);return oh(-this._inverseFFT(t,e,this._phase)/n,-1,1)}get partials(){return this._partials.slice(0,this.partialCount)}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this.type="custom")}get phase(){return this._phase*(180/Math.PI)}set phase(t){this._phase=t*Math.PI/180,this.type=this._type}asArray(t=1024){return lt(this,void 0,void 0,function*(){return ke(this,t)})}dispose(){return super.dispose(),this._oscillator!==null&&this._oscillator.dispose(),this._wave=void 0,this.frequency.dispose(),this.detune.dispose(),this}}ot._periodicWaveCache=[];class Bt extends V{constructor(){super(Object.assign(x(Bt.getDefaults(),arguments,["context"])))}connect(t,e=0,n=0){return ds(this,t,e,n),this}}class xe extends Bt{constructor(){super(Object.assign(x(xe.getDefaults(),arguments,["mapping","length"]))),this.name="WaveShaper",this._shaper=this.context.createWaveShaper(),this.input=this._shaper,this.output=this._shaper;const t=x(xe.getDefaults(),arguments,["mapping","length"]);Dt(t.mapping)||t.mapping instanceof Float32Array?this.curve=Float32Array.from(t.mapping):Zl(t.mapping)&&this.setMap(t.mapping,t.length)}static getDefaults(){return Object.assign(J.getDefaults(),{length:1024})}setMap(t,e=1024){const n=new Float32Array(e);for(let i=0,r=e;i<r;i++){const o=i/(r-1)*2-1;n[i]=t(o,i)}return this.curve=n,this}get curve(){return this._shaper.curve}set curve(t){this._shaper.curve=t}get oversample(){return this._shaper.oversample}set oversample(t){const e=["none","2x","4x"].some(n=>n.includes(t));F(e,"oversampling must be either 'none', '2x', or '4x'"),this._shaper.oversample=t}dispose(){return super.dispose(),this._shaper.disconnect(),this}}class Ir extends Bt{constructor(){super(...arguments),this.name="AudioToGain",this._norm=new xe({context:this.context,mapping:t=>(t+1)/2}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class ce extends J{constructor(){super(Object.assign(x(ce.getDefaults(),arguments,["value"]))),this.name="Multiply",this.override=!1;const t=x(ce.getDefaults(),arguments,["value"]);this._mult=this.input=this.output=new K({context:this.context,minValue:t.minValue,maxValue:t.maxValue}),this.factor=this._param=this._mult.gain,this.factor.setValueAtTime(t.value,0)}static getDefaults(){return Object.assign(J.getDefaults(),{value:0})}dispose(){return super.dispose(),this._mult.dispose(),this}}class rn extends _t{constructor(){super(x(rn.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="AMOscillator",this._modulationScale=new Ir({context:this.context}),this._modulationNode=new K({context:this.context});const t=x(rn.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.frequency=this._carrier.frequency,this.detune=this._carrier.detune,this._modulator=new ot({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ce({context:this.context,units:"positive",value:t.harmonicity}),this.frequency.chain(this.harmonicity,this._modulator.frequency),this._modulator.chain(this._modulationScale,this._modulationNode.gain),this._carrier.chain(this._modulationNode,this.output),Z(this,["frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ot.getDefaults(),{harmonicity:1,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){this._modulator.restart(t),this._carrier.restart(t)}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return lt(this,void 0,void 0,function*(){return ke(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this._modulationScale.dispose(),this}}class on extends _t{constructor(){super(x(on.getDefaults(),arguments,["frequency","type","modulationType"])),this.name="FMOscillator",this._modulationNode=new K({context:this.context,gain:0});const t=x(on.getDefaults(),arguments,["frequency","type","modulationType"]);this._carrier=new ot({context:this.context,detune:t.detune,frequency:0,onstop:()=>this.onstop(this),phase:t.phase,type:t.type}),this.detune=this._carrier.detune,this.frequency=new J({context:this.context,units:"frequency",value:t.frequency}),this._modulator=new ot({context:this.context,phase:t.phase,type:t.modulationType}),this.harmonicity=new ce({context:this.context,units:"positive",value:t.harmonicity}),this.modulationIndex=new ce({context:this.context,units:"positive",value:t.modulationIndex}),this.frequency.connect(this._carrier.frequency),this.frequency.chain(this.harmonicity,this._modulator.frequency),this.frequency.chain(this.modulationIndex,this._modulationNode),this._modulator.connect(this._modulationNode.gain),this._modulationNode.connect(this._carrier.frequency),this._carrier.connect(this.output),this.detune.connect(this._modulator.detune),Z(this,["modulationIndex","frequency","detune","harmonicity"])}static getDefaults(){return Object.assign(ot.getDefaults(),{harmonicity:1,modulationIndex:2,modulationType:"square"})}_start(t){this._modulator.start(t),this._carrier.start(t)}_stop(t){this._modulator.stop(t),this._carrier.stop(t)}_restart(t){return this._modulator.restart(t),this._carrier.restart(t),this}get type(){return this._carrier.type}set type(t){this._carrier.type=t}get baseType(){return this._carrier.baseType}set baseType(t){this._carrier.baseType=t}get partialCount(){return this._carrier.partialCount}set partialCount(t){this._carrier.partialCount=t}get modulationType(){return this._modulator.type}set modulationType(t){this._modulator.type=t}get phase(){return this._carrier.phase}set phase(t){this._carrier.phase=t,this._modulator.phase=t}get partials(){return this._carrier.partials}set partials(t){this._carrier.partials=t}asArray(t=1024){return lt(this,void 0,void 0,function*(){return ke(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.harmonicity.dispose(),this._carrier.dispose(),this._modulator.dispose(),this._modulationNode.dispose(),this.modulationIndex.dispose(),this}}class Le extends _t{constructor(){super(x(Le.getDefaults(),arguments,["frequency","width"])),this.name="PulseOscillator",this._widthGate=new K({context:this.context,gain:0}),this._thresh=new xe({context:this.context,mapping:e=>e<=0?-1:1});const t=x(Le.getDefaults(),arguments,["frequency","width"]);this.width=new J({context:this.context,units:"audioRange",value:t.width}),this._triangle=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase,type:"triangle"}),this.frequency=this._triangle.frequency,this.detune=this._triangle.detune,this._triangle.chain(this._thresh,this.output),this.width.chain(this._widthGate,this._thresh),Z(this,["width","frequency","detune"])}static getDefaults(){return Object.assign(_t.getDefaults(),{detune:0,frequency:440,phase:0,type:"pulse",width:.2})}_start(t){t=this.toSeconds(t),this._triangle.start(t),this._widthGate.gain.setValueAtTime(1,t)}_stop(t){t=this.toSeconds(t),this._triangle.stop(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(0,t)}_restart(t){this._triangle.restart(t),this._widthGate.gain.cancelScheduledValues(t),this._widthGate.gain.setValueAtTime(1,t)}get phase(){return this._triangle.phase}set phase(t){this._triangle.phase=t}get type(){return"pulse"}get baseType(){return"pulse"}get partials(){return[]}get partialCount(){return 0}set carrierType(t){this._triangle.type=t}asArray(t=1024){return lt(this,void 0,void 0,function*(){return ke(this,t)})}dispose(){return super.dispose(),this._triangle.dispose(),this.width.dispose(),this._widthGate.dispose(),this._thresh.dispose(),this}}class an extends _t{constructor(){super(x(an.getDefaults(),arguments,["frequency","type","spread"])),this.name="FatOscillator",this._oscillators=[];const t=x(an.getDefaults(),arguments,["frequency","type","spread"]);this.frequency=new J({context:this.context,units:"frequency",value:t.frequency}),this.detune=new J({context:this.context,units:"cents",value:t.detune}),this._spread=t.spread,this._type=t.type,this._phase=t.phase,this._partials=t.partials,this._partialCount=t.partialCount,this.count=t.count,Z(this,["frequency","detune"])}static getDefaults(){return Object.assign(ot.getDefaults(),{count:3,spread:20,type:"sawtooth"})}_start(t){t=this.toSeconds(t),this._forEach(e=>e.start(t))}_stop(t){t=this.toSeconds(t),this._forEach(e=>e.stop(t))}_restart(t){this._forEach(e=>e.restart(t))}_forEach(t){for(let e=0;e<this._oscillators.length;e++)t(this._oscillators[e],e)}get type(){return this._type}set type(t){this._type=t,this._forEach(e=>e.type=t)}get spread(){return this._spread}set spread(t){if(this._spread=t,this._oscillators.length>1){const e=-t/2,n=t/(this._oscillators.length-1);this._forEach((i,r)=>i.detune.value=e+n*r)}}get count(){return this._oscillators.length}set count(t){if(Ft(t,1),this._oscillators.length!==t){this._forEach(e=>e.dispose()),this._oscillators=[];for(let e=0;e<t;e++){const n=new ot({context:this.context,volume:-6-t*1.1,type:this._type,phase:this._phase+e/t*360,partialCount:this._partialCount,onstop:e===0?()=>this.onstop(this):Y});this.type==="custom"&&(n.partials=this._partials),this.frequency.connect(n.frequency),this.detune.connect(n.detune),n.detune.overridden=!1,n.connect(this.output),this._oscillators[e]=n}this.spread=this._spread,this.state==="started"&&this._forEach(e=>e.start())}}get phase(){return this._phase}set phase(t){this._phase=t,this._forEach((e,n)=>e.phase=this._phase+n/this.count*360)}get baseType(){return this._oscillators[0].baseType}set baseType(t){this._forEach(e=>e.baseType=t),this._type=this._oscillators[0].type}get partials(){return this._oscillators[0].partials}set partials(t){this._partials=t,this._partialCount=this._partials.length,t.length&&(this._type="custom",this._forEach(e=>e.partials=t))}get partialCount(){return this._oscillators[0].partialCount}set partialCount(t){this._partialCount=t,this._forEach(e=>e.partialCount=t),this._type=this._oscillators[0].type}asArray(t=1024){return lt(this,void 0,void 0,function*(){return ke(this,t)})}dispose(){return super.dispose(),this.frequency.dispose(),this.detune.dispose(),this._forEach(t=>t.dispose()),this}}class cn extends _t{constructor(){super(x(cn.getDefaults(),arguments,["frequency","modulationFrequency"])),this.name="PWMOscillator",this.sourceType="pwm",this._scale=new ce({context:this.context,value:2});const t=x(cn.getDefaults(),arguments,["frequency","modulationFrequency"]);this._pulse=new Le({context:this.context,frequency:t.modulationFrequency}),this._pulse.carrierType="sine",this.modulationFrequency=this._pulse.frequency,this._modulator=new ot({context:this.context,detune:t.detune,frequency:t.frequency,onstop:()=>this.onstop(this),phase:t.phase}),this.frequency=this._modulator.frequency,this.detune=this._modulator.detune,this._modulator.chain(this._scale,this._pulse.width),this._pulse.connect(this.output),Z(this,["modulationFrequency","frequency","detune"])}static getDefaults(){return Object.assign(_t.getDefaults(),{detune:0,frequency:440,modulationFrequency:.4,phase:0,type:"pwm"})}_start(t){t=this.toSeconds(t),this._modulator.start(t),this._pulse.start(t)}_stop(t){t=this.toSeconds(t),this._modulator.stop(t),this._pulse.stop(t)}_restart(t){this._modulator.restart(t),this._pulse.restart(t)}get type(){return"pwm"}get baseType(){return"pwm"}get partials(){return[]}get partialCount(){return 0}get phase(){return this._modulator.phase}set phase(t){this._modulator.phase=t}asArray(t=1024){return lt(this,void 0,void 0,function*(){return ke(this,t)})}dispose(){return super.dispose(),this._pulse.dispose(),this._scale.dispose(),this._modulator.dispose(),this}}const Si={am:rn,fat:an,fm:on,oscillator:ot,pulse:Le,pwm:cn};class Ce extends _t{constructor(){super(x(Ce.getDefaults(),arguments,["frequency","type"])),this.name="OmniOscillator";const t=x(Ce.getDefaults(),arguments,["frequency","type"]);this.frequency=new J({context:this.context,units:"frequency",value:t.frequency}),this.detune=new J({context:this.context,units:"cents",value:t.detune}),Z(this,["frequency","detune"]),this.set(t)}static getDefaults(){return Object.assign(ot.getDefaults(),on.getDefaults(),rn.getDefaults(),an.getDefaults(),Le.getDefaults(),cn.getDefaults())}_start(t){this._oscillator.start(t)}_stop(t){this._oscillator.stop(t)}_restart(t){return this._oscillator.restart(t),this}get type(){let t="";return["am","fm","fat"].some(e=>this._sourceType===e)&&(t=this._sourceType),t+this._oscillator.type}set type(t){t.substr(0,2)==="fm"?(this._createNewOscillator("fm"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,2)==="am"?(this._createNewOscillator("am"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(2)):t.substr(0,3)==="fat"?(this._createNewOscillator("fat"),this._oscillator=this._oscillator,this._oscillator.type=t.substr(3)):t==="pwm"?(this._createNewOscillator("pwm"),this._oscillator=this._oscillator):t==="pulse"?this._createNewOscillator("pulse"):(this._createNewOscillator("oscillator"),this._oscillator=this._oscillator,this._oscillator.type=t)}get partials(){return this._oscillator.partials}set partials(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partials=t)}get partialCount(){return this._oscillator.partialCount}set partialCount(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&(this._oscillator.partialCount=t)}set(t){return Reflect.has(t,"type")&&t.type&&(this.type=t.type),super.set(t),this}_createNewOscillator(t){if(t!==this._sourceType){this._sourceType=t;const e=Si[t],n=this.now();if(this._oscillator){const i=this._oscillator;i.stop(n),this.context.setTimeout(()=>i.dispose(),this.blockTime)}this._oscillator=new e({context:this.context}),this.frequency.connect(this._oscillator.frequency),this.detune.connect(this._oscillator.detune),this._oscillator.connect(this.output),this._oscillator.onstop=()=>this.onstop(this),this.state==="started"&&this._oscillator.start(n)}}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t}get sourceType(){return this._sourceType}set sourceType(t){let e="sine";this._oscillator.type!=="pwm"&&this._oscillator.type!=="pulse"&&(e=this._oscillator.type),t==="fm"?this.type="fm"+e:t==="am"?this.type="am"+e:t==="fat"?this.type="fat"+e:t==="oscillator"?this.type=e:t==="pulse"?this.type="pulse":t==="pwm"&&(this.type="pwm")}_getOscType(t,e){return t instanceof Si[e]}get baseType(){return this._oscillator.baseType}set baseType(t){!this._getOscType(this._oscillator,"pulse")&&!this._getOscType(this._oscillator,"pwm")&&t!=="pulse"&&t!=="pwm"&&(this._oscillator.baseType=t)}get width(){if(this._getOscType(this._oscillator,"pulse"))return this._oscillator.width}get count(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.count}set count(t){this._getOscType(this._oscillator,"fat")&&Ht(t)&&(this._oscillator.count=t)}get spread(){if(this._getOscType(this._oscillator,"fat"))return this._oscillator.spread}set spread(t){this._getOscType(this._oscillator,"fat")&&Ht(t)&&(this._oscillator.spread=t)}get modulationType(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.modulationType}set modulationType(t){(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))&&Qt(t)&&(this._oscillator.modulationType=t)}get modulationIndex(){if(this._getOscType(this._oscillator,"fm"))return this._oscillator.modulationIndex}get harmonicity(){if(this._getOscType(this._oscillator,"fm")||this._getOscType(this._oscillator,"am"))return this._oscillator.harmonicity}get modulationFrequency(){if(this._getOscType(this._oscillator,"pwm"))return this._oscillator.modulationFrequency}asArray(t=1024){return lt(this,void 0,void 0,function*(){return ke(this,t)})}dispose(){return super.dispose(),this.detune.dispose(),this.frequency.dispose(),this._oscillator.dispose(),this}}class ni extends J{constructor(){super(Object.assign(x(ni.getDefaults(),arguments,["value"]))),this.override=!1,this.name="Add",this._sum=new K({context:this.context}),this.input=this._sum,this.output=this._sum,this.addend=this._param,Ke(this._constantSource,this._sum)}static getDefaults(){return Object.assign(J.getDefaults(),{value:0})}dispose(){return super.dispose(),this._sum.dispose(),this}}class un extends Bt{constructor(){super(Object.assign(x(un.getDefaults(),arguments,["min","max"]))),this.name="Scale";const t=x(un.getDefaults(),arguments,["min","max"]);this._mult=this.input=new ce({context:this.context,value:t.max-t.min}),this._add=this.output=new ni({context:this.context,value:t.min}),this._min=t.min,this._max=t.max,this.input.connect(this.output)}static getDefaults(){return Object.assign(Bt.getDefaults(),{max:1,min:0})}get min(){return this._min}set min(t){this._min=t,this._setRange()}get max(){return this._max}set max(t){this._max=t,this._setRange()}_setRange(){this._add.value=this._min,this._mult.value=this._max-this._min}dispose(){return super.dispose(),this._add.dispose(),this._mult.dispose(),this}}class si extends Bt{constructor(){super(Object.assign(x(si.getDefaults(),arguments))),this.name="Zero",this._gain=new K({context:this.context}),this.output=this._gain,this.input=void 0,Jt(this.context.getConstant(0),this._gain)}dispose(){return super.dispose(),Er(this.context.getConstant(0),this._gain),this}}class Hn extends V{constructor(){super(x(Hn.getDefaults(),arguments,["frequency","min","max"])),this.name="LFO",this._stoppedValue=0,this._units="number",this.convert=!0,this._fromType=U.prototype._fromType,this._toType=U.prototype._toType,this._is=U.prototype._is,this._clampValue=U.prototype._clampValue;const t=x(Hn.getDefaults(),arguments,["frequency","min","max"]);this._oscillator=new ot(t),this.frequency=this._oscillator.frequency,this._amplitudeGain=new K({context:this.context,gain:t.amplitude,units:"normalRange"}),this.amplitude=this._amplitudeGain.gain,this._stoppedSignal=new J({context:this.context,units:"audioRange",value:0}),this._zeros=new si({context:this.context}),this._a2g=new Ir({context:this.context}),this._scaler=this.output=new un({context:this.context,max:t.max,min:t.min}),this.units=t.units,this.min=t.min,this.max=t.max,this._oscillator.chain(this._amplitudeGain,this._a2g,this._scaler),this._zeros.connect(this._a2g),this._stoppedSignal.connect(this._a2g),Z(this,["amplitude","frequency"]),this.phase=t.phase}static getDefaults(){return Object.assign(ot.getDefaults(),{amplitude:1,frequency:"4n",max:1,min:0,type:"sine",units:"number"})}start(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(0,t),this._oscillator.start(t),this}stop(t){return t=this.toSeconds(t),this._stoppedSignal.setValueAtTime(this._stoppedValue,t),this._oscillator.stop(t),this}sync(){return this._oscillator.sync(),this._oscillator.syncFrequency(),this}unsync(){return this._oscillator.unsync(),this._oscillator.unsyncFrequency(),this}_setStoppedValue(){this._stoppedValue=this._oscillator.getInitialValue(),this._stoppedSignal.value=this._stoppedValue}get min(){return this._toType(this._scaler.min)}set min(t){t=this._fromType(t),this._scaler.min=t}get max(){return this._toType(this._scaler.max)}set max(t){t=this._fromType(t),this._scaler.max=t}get type(){return this._oscillator.type}set type(t){this._oscillator.type=t,this._setStoppedValue()}get partials(){return this._oscillator.partials}set partials(t){this._oscillator.partials=t,this._setStoppedValue()}get phase(){return this._oscillator.phase}set phase(t){this._oscillator.phase=t,this._setStoppedValue()}get units(){return this._units}set units(t){const e=this.min,n=this.max;this._units=t,this.min=e,this.max=n}get state(){return this._oscillator.state}connect(t,e,n){return(t instanceof U||t instanceof J)&&(this.convert=t.convert,this.units=t.units),ds(this,t,e,n),this}dispose(){return super.dispose(),this._oscillator.dispose(),this._stoppedSignal.dispose(),this._zeros.dispose(),this._scaler.dispose(),this._a2g.dispose(),this._amplitudeGain.dispose(),this.amplitude.dispose(),this}}function Mr(s,t=1/0){const e=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Ft(r,s,t),e.set(this,r)}})}}function ne(s,t=1/0){const e=new WeakMap;return function(n,i){Reflect.defineProperty(n,i,{configurable:!0,enumerable:!0,get:function(){return e.get(this)},set:function(r){Ft(this.toSeconds(r),s,t),e.set(this,r)}})}}class ln extends _t{constructor(){super(x(ln.getDefaults(),arguments,["url","onload"])),this.name="Player",this._activeSources=new Set;const t=x(ln.getDefaults(),arguments,["url","onload"]);this._buffer=new Q({onload:this._onload.bind(this,t.onload),onerror:t.onerror,reverse:t.reverse,url:t.url}),this.autostart=t.autostart,this._loop=t.loop,this._loopStart=t.loopStart,this._loopEnd=t.loopEnd,this._playbackRate=t.playbackRate,this.fadeIn=t.fadeIn,this.fadeOut=t.fadeOut}static getDefaults(){return Object.assign(_t.getDefaults(),{autostart:!1,fadeIn:0,fadeOut:0,loop:!1,loopEnd:0,loopStart:0,onload:Y,onerror:Y,playbackRate:1,reverse:!1})}load(t){return lt(this,void 0,void 0,function*(){return yield this._buffer.load(t),this._onload(),this})}_onload(t=Y){t(),this.autostart&&this.start()}_onSourceEnd(t){this.onstop(this),this._activeSources.delete(t),this._activeSources.size===0&&!this._synced&&this._state.getValueAtTime(this.now())==="started"&&(this._state.cancel(this.now()),this._state.setStateAtTime("stopped",this.now()))}start(t,e,n){return super.start(t,e,n),this}_start(t,e,n){this._loop?e=Re(e,this._loopStart):e=Re(e,0);const i=this.toSeconds(e),r=n;n=Re(n,Math.max(this._buffer.duration-i,0));let o=this.toSeconds(n);o=o/this._playbackRate,t=this.toSeconds(t);const a=new We({url:this._buffer,context:this.context,fadeIn:this.fadeIn,fadeOut:this.fadeOut,loop:this._loop,loopEnd:this._loopEnd,loopStart:this._loopStart,onended:this._onSourceEnd.bind(this),playbackRate:this._playbackRate}).connect(this.output);!this._loop&&!this._synced&&(this._state.cancel(t+o),this._state.setStateAtTime("stopped",t+o,{implicitEnd:!0})),this._activeSources.add(a),this._loop&&Ot(r)?a.start(t,i):a.start(t,i,o-this.toSeconds(this.fadeOut))}_stop(t){const e=this.toSeconds(t);this._activeSources.forEach(n=>n.stop(e))}restart(t,e,n){return super.restart(t,e,n),this}_restart(t,e,n){var i;(i=[...this._activeSources].pop())===null||i===void 0||i.stop(t),this._start(t,e,n)}seek(t,e){const n=this.toSeconds(e);if(this._state.getValueAtTime(n)==="started"){const i=this.toSeconds(t);this._stop(n),this._start(n,i)}return this}setLoopPoints(t,e){return this.loopStart=t,this.loopEnd=e,this}get loopStart(){return this._loopStart}set loopStart(t){this._loopStart=t,this.buffer.loaded&&Ft(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopStart=t})}get loopEnd(){return this._loopEnd}set loopEnd(t){this._loopEnd=t,this.buffer.loaded&&Ft(this.toSeconds(t),0,this.buffer.duration),this._activeSources.forEach(e=>{e.loopEnd=t})}get buffer(){return this._buffer}set buffer(t){this._buffer.set(t)}get loop(){return this._loop}set loop(t){if(this._loop!==t&&(this._loop=t,this._activeSources.forEach(e=>{e.loop=t}),t)){const e=this._state.getNextState("stopped",this.now());e&&this._state.cancel(e.time)}}get playbackRate(){return this._playbackRate}set playbackRate(t){this._playbackRate=t;const e=this.now(),n=this._state.getNextState("stopped",e);n&&n.implicitEnd&&(this._state.cancel(n.time),this._activeSources.forEach(i=>i.cancelStop())),this._activeSources.forEach(i=>{i.playbackRate.setValueAtTime(t,e)})}get reverse(){return this._buffer.reverse}set reverse(t){this._buffer.reverse=t}get loaded(){return this._buffer.loaded}dispose(){return super.dispose(),this._activeSources.forEach(t=>t.dispose()),this._activeSources.clear(),this._buffer.dispose(),this}}Lt([ne(0)],ln.prototype,"fadeIn",void 0);Lt([ne(0)],ln.prototype,"fadeOut",void 0);class Th extends Bt{constructor(){super(...arguments),this.name="GainToAudio",this._norm=new xe({context:this.context,mapping:t=>Math.abs(t)*2-1}),this.input=this._norm,this.output=this._norm}dispose(){return super.dispose(),this._norm.dispose(),this}}class Qn extends Bt{constructor(){super(Object.assign(x(Qn.getDefaults(),arguments,["value"]))),this.name="Pow";const t=x(Qn.getDefaults(),arguments,["value"]);this._exponentScaler=this.input=this.output=new xe({context:this.context,mapping:this._expFunc(t.value),length:8192}),this._exponent=t.value}static getDefaults(){return Object.assign(Bt.getDefaults(),{value:1})}_expFunc(t){return e=>Math.pow(Math.abs(e),t)}get value(){return this._exponent}set value(t){this._exponent=t,this._exponentScaler.setMap(this._expFunc(this._exponent))}dispose(){return super.dispose(),this._exponentScaler.dispose(),this}}class Mt extends V{constructor(){super(x(Mt.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="Envelope",this._sig=new J({context:this.context,value:0}),this.output=this._sig,this.input=void 0;const t=x(Mt.getDefaults(),arguments,["attack","decay","sustain","release"]);this.attack=t.attack,this.decay=t.decay,this.sustain=t.sustain,this.release=t.release,this.attackCurve=t.attackCurve,this.releaseCurve=t.releaseCurve,this.decayCurve=t.decayCurve}static getDefaults(){return Object.assign(V.getDefaults(),{attack:.01,attackCurve:"linear",decay:.1,decayCurve:"exponential",release:1,releaseCurve:"exponential",sustain:.5})}get value(){return this.getValueAtTime(this.now())}_getCurve(t,e){if(Qt(t))return t;{let n;for(n in Dn)if(Dn[n][e]===t)return n;return t}}_setCurve(t,e,n){if(Qt(n)&&Reflect.has(Dn,n)){const i=Dn[n];ge(i)?t!=="_decayCurve"&&(this[t]=i[e]):this[t]=i}else if(Dt(n)&&t!=="_decayCurve")this[t]=n;else throw new Error("Envelope: invalid curve: "+n)}get attackCurve(){return this._getCurve(this._attackCurve,"In")}set attackCurve(t){this._setCurve("_attackCurve","In",t)}get releaseCurve(){return this._getCurve(this._releaseCurve,"Out")}set releaseCurve(t){this._setCurve("_releaseCurve","Out",t)}get decayCurve(){return this._decayCurve}set decayCurve(t){F(["linear","exponential"].some(e=>e===t),`Invalid envelope curve: ${t}`),this._decayCurve=t}triggerAttack(t,e=1){this.log("triggerAttack",t,e),t=this.toSeconds(t);let i=this.toSeconds(this.attack);const r=this.toSeconds(this.decay),o=this.getValueAtTime(t);if(o>0){const a=1/i;i=(1-o)/a}if(i<this.sampleTime)this._sig.cancelScheduledValues(t),this._sig.setValueAtTime(e,t);else if(this._attackCurve==="linear")this._sig.linearRampTo(e,i,t);else if(this._attackCurve==="exponential")this._sig.targetRampTo(e,i,t);else{this._sig.cancelAndHoldAtTime(t);let a=this._attackCurve;for(let c=1;c<a.length;c++)if(a[c-1]<=o&&o<=a[c]){a=this._attackCurve.slice(c),a[0]=o;break}this._sig.setValueCurveAtTime(a,t,i,e)}if(r&&this.sustain<1){const a=e*this.sustain,c=t+i;this.log("decay",c),this._decayCurve==="linear"?this._sig.linearRampToValueAtTime(a,r+c):this._sig.exponentialApproachValueAtTime(a,c,r)}return this}triggerRelease(t){this.log("triggerRelease",t),t=this.toSeconds(t);const e=this.getValueAtTime(t);if(e>0){const n=this.toSeconds(this.release);n<this.sampleTime?this._sig.setValueAtTime(0,t):this._releaseCurve==="linear"?this._sig.linearRampTo(0,n,t):this._releaseCurve==="exponential"?this._sig.targetRampTo(0,n,t):(F(Dt(this._releaseCurve),"releaseCurve must be either 'linear', 'exponential' or an array"),this._sig.cancelAndHoldAtTime(t),this._sig.setValueCurveAtTime(this._releaseCurve,t,n,e))}return this}getValueAtTime(t){return this._sig.getValueAtTime(t)}triggerAttackRelease(t,e,n=1){return e=this.toSeconds(e),this.triggerAttack(e,n),this.triggerRelease(e+this.toSeconds(t)),this}cancel(t){return this._sig.cancelScheduledValues(this.toSeconds(t)),this}connect(t,e=0,n=0){return ds(this,t,e,n),this}asArray(t=1024){return lt(this,void 0,void 0,function*(){const e=t/this.context.sampleRate,n=new ls(1,e,this.context.sampleRate),i=this.toSeconds(this.attack)+this.toSeconds(this.decay),r=i+this.toSeconds(this.release),o=r*.1,a=r+o,c=new this.constructor(Object.assign(this.get(),{attack:e*this.toSeconds(this.attack)/a,decay:e*this.toSeconds(this.decay)/a,release:e*this.toSeconds(this.release)/a,context:n}));return c._sig.toDestination(),c.triggerAttackRelease(e*(i+o)/a,0),(yield n.render()).getChannelData(0)})}dispose(){return super.dispose(),this._sig.dispose(),this}}Lt([ne(0)],Mt.prototype,"attack",void 0);Lt([ne(0)],Mt.prototype,"decay",void 0);Lt([Mr(0,1)],Mt.prototype,"sustain",void 0);Lt([ne(0)],Mt.prototype,"release",void 0);const Dn=(()=>{let t,e;const n=[];for(t=0;t<128;t++)n[t]=Math.sin(t/(128-1)*(Math.PI/2));const i=[],r=6.4;for(t=0;t<128-1;t++){e=t/(128-1);const p=Math.sin(e*(Math.PI*2)*r-Math.PI/2)+1;i[t]=p/10+e*.83}i[128-1]=1;const o=[],a=5;for(t=0;t<128;t++)o[t]=Math.ceil(t/(128-1)*a)/a;const c=[];for(t=0;t<128;t++)e=t/(128-1),c[t]=.5*(1-Math.cos(Math.PI*e));const u=[];for(t=0;t<128;t++){e=t/(128-1);const p=Math.pow(e,3)*4+.2,f=Math.cos(p*Math.PI*2*e);u[t]=Math.abs(f*(1-e))}function l(p){const f=new Array(p.length);for(let d=0;d<p.length;d++)f[d]=1-p[d];return f}function h(p){return p.slice(0).reverse()}return{bounce:{In:l(u),Out:u},cosine:{In:n,Out:h(n)},exponential:"exponential",linear:"linear",ripple:{In:i,Out:l(i)},sine:{In:c,Out:l(c)},step:{In:o,Out:l(o)}}})();class Kt extends V{constructor(){super(x(Kt.getDefaults(),arguments)),this._scheduledEvents=[],this._synced=!1,this._original_triggerAttack=this.triggerAttack,this._original_triggerRelease=this.triggerRelease,this._syncedRelease=e=>this._original_triggerRelease(e);const t=x(Kt.getDefaults(),arguments);this._volume=this.output=new be({context:this.context,volume:t.volume}),this.volume=this._volume.volume,Z(this,"volume")}static getDefaults(){return Object.assign(V.getDefaults(),{volume:0})}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",0),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}_syncState(){let t=!1;return this._synced||(this._synced=!0,t=!0),t}_syncMethod(t,e){const n=this["_original_"+t]=this[t];this[t]=(...i)=>{const r=i[e],o=this.context.transport.schedule(a=>{i[e]=a,n.apply(this,i)},r);this._scheduledEvents.push(o)}}unsync(){return this._scheduledEvents.forEach(t=>this.context.transport.clear(t)),this._scheduledEvents=[],this._synced&&(this._synced=!1,this.triggerAttack=this._original_triggerAttack,this.triggerRelease=this._original_triggerRelease,this.context.transport.off("stop",this._syncedRelease),this.context.transport.off("pause",this._syncedRelease),this.context.transport.off("loopEnd",this._syncedRelease)),this}triggerAttackRelease(t,e,n,i){const r=this.toSeconds(n),o=this.toSeconds(e);return this.triggerAttack(t,r,i),this.triggerRelease(r+o),this}dispose(){return super.dispose(),this._volume.dispose(),this.unsync(),this._scheduledEvents=[],this}}class Ut extends Kt{constructor(){super(x(Ut.getDefaults(),arguments));const t=x(Ut.getDefaults(),arguments);this.portamento=t.portamento,this.onsilence=t.onsilence}static getDefaults(){return Object.assign(Kt.getDefaults(),{detune:0,onsilence:Y,portamento:0})}triggerAttack(t,e,n=1){this.log("triggerAttack",t,e,n);const i=this.toSeconds(e);return this._triggerEnvelopeAttack(i,n),this.setNote(t,i),this}triggerRelease(t){this.log("triggerRelease",t);const e=this.toSeconds(t);return this._triggerEnvelopeRelease(e),this}setNote(t,e){const n=this.toSeconds(e),i=t instanceof xt?t.toFrequency():t;if(this.portamento>0&&this.getLevelAtTime(n)>.05){const r=this.toSeconds(this.portamento);this.frequency.exponentialRampTo(i,r,n)}else this.frequency.setValueAtTime(i,n);return this}}Lt([ne(0)],Ut.prototype,"portamento",void 0);class ps extends Mt{constructor(){super(x(ps.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="AmplitudeEnvelope",this._gainNode=new K({context:this.context,gain:0}),this.output=this._gainNode,this.input=this._gainNode,this._sig.connect(this._gainNode.gain),this.output=this._gainNode,this.input=this._gainNode}dispose(){return super.dispose(),this._gainNode.dispose(),this}}class je extends Ut{constructor(){super(x(je.getDefaults(),arguments)),this.name="Synth";const t=x(je.getDefaults(),arguments);this.oscillator=new Ce(Object.assign({context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)},t.oscillator)),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.envelope=new ps(Object.assign({context:this.context},t.envelope)),this.oscillator.chain(this.envelope,this.output),Z(this,["oscillator","frequency","detune","envelope"])}static getDefaults(){return Object.assign(Ut.getDefaults(),{envelope:Object.assign(fe(Mt.getDefaults(),Object.keys(V.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.3}),oscillator:Object.assign(fe(Ce.getDefaults(),[...Object.keys(_t.getDefaults()),"frequency","detune"]),{type:"triangle"})})}_triggerEnvelopeAttack(t,e){if(this.envelope.triggerAttack(t,e),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this}}class hn extends V{constructor(){super(x(hn.getDefaults(),arguments,["frequency","type"])),this.name="BiquadFilter";const t=x(hn.getDefaults(),arguments,["frequency","type"]);this._filter=this.context.createBiquadFilter(),this.input=this.output=this._filter,this.Q=new U({context:this.context,units:"number",value:t.Q,param:this._filter.Q}),this.frequency=new U({context:this.context,units:"frequency",value:t.frequency,param:this._filter.frequency}),this.detune=new U({context:this.context,units:"cents",value:t.detune,param:this._filter.detune}),this.gain=new U({context:this.context,units:"decibels",convert:!1,value:t.gain,param:this._filter.gain}),this.type=t.type}static getDefaults(){return Object.assign(V.getDefaults(),{Q:1,type:"lowpass",frequency:350,detune:0,gain:0})}get type(){return this._filter.type}set type(t){F(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._filter.type=t}getFrequencyResponse(t=128){const e=new Float32Array(t);for(let o=0;o<t;o++){const c=Math.pow(o/t,2)*(2e4-20)+20;e[o]=c}const n=new Float32Array(t),i=new Float32Array(t),r=this.context.createBiquadFilter();return r.type=this.type,r.Q.value=this.Q.value,r.frequency.value=this.frequency.value,r.gain.value=this.gain.value,r.getFrequencyResponse(e,n,i),n}dispose(){return super.dispose(),this._filter.disconnect(),this.Q.dispose(),this.frequency.dispose(),this.gain.dispose(),this.detune.dispose(),this}}class dn extends V{constructor(){super(x(dn.getDefaults(),arguments,["frequency","type","rolloff"])),this.name="Filter",this.input=new K({context:this.context}),this.output=new K({context:this.context}),this._filters=[];const t=x(dn.getDefaults(),arguments,["frequency","type","rolloff"]);this._filters=[],this.Q=new J({context:this.context,units:"positive",value:t.Q}),this.frequency=new J({context:this.context,units:"frequency",value:t.frequency}),this.detune=new J({context:this.context,units:"cents",value:t.detune}),this.gain=new J({context:this.context,units:"decibels",convert:!1,value:t.gain}),this._type=t.type,this.rolloff=t.rolloff,Z(this,["detune","frequency","gain","Q"])}static getDefaults(){return Object.assign(V.getDefaults(),{Q:1,detune:0,frequency:350,gain:0,rolloff:-12,type:"lowpass"})}get type(){return this._type}set type(t){F(["lowpass","highpass","bandpass","lowshelf","highshelf","notch","allpass","peaking"].indexOf(t)!==-1,`Invalid filter type: ${t}`),this._type=t,this._filters.forEach(n=>n.type=t)}get rolloff(){return this._rolloff}set rolloff(t){const e=Ht(t)?t:parseInt(t,10),n=[-12,-24,-48,-96];let i=n.indexOf(e);F(i!==-1,`rolloff can only be ${n.join(", ")}`),i+=1,this._rolloff=e,this.input.disconnect(),this._filters.forEach(r=>r.disconnect()),this._filters=new Array(i);for(let r=0;r<i;r++){const o=new hn({context:this.context});o.type=this._type,this.frequency.connect(o.frequency),this.detune.connect(o.detune),this.Q.connect(o.Q),this.gain.connect(o.gain),this._filters[r]=o}this._internalChannels=this._filters,Ke(this.input,...this._internalChannels,this.output)}getFrequencyResponse(t=128){const e=new hn({frequency:this.frequency.value,gain:this.gain.value,Q:this.Q.value,type:this._type,detune:this.detune.value}),n=new Float32Array(t).map(()=>1);return this._filters.forEach(()=>{e.getFrequencyResponse(t).forEach((r,o)=>n[o]*=r)}),e.dispose(),n}dispose(){return super.dispose(),this._filters.forEach(t=>{t.dispose()}),Qs(this,["detune","frequency","gain","Q"]),this.frequency.dispose(),this.Q.dispose(),this.detune.dispose(),this.gain.dispose(),this}}class pn extends Mt{constructor(){super(x(pn.getDefaults(),arguments,["attack","decay","sustain","release"])),this.name="FrequencyEnvelope";const t=x(pn.getDefaults(),arguments,["attack","decay","sustain","release"]);this._octaves=t.octaves,this._baseFrequency=this.toFrequency(t.baseFrequency),this._exponent=this.input=new Qn({context:this.context,value:t.exponent}),this._scale=this.output=new un({context:this.context,min:this._baseFrequency,max:this._baseFrequency*Math.pow(2,this._octaves)}),this._sig.chain(this._exponent,this._scale)}static getDefaults(){return Object.assign(Mt.getDefaults(),{baseFrequency:200,exponent:1,octaves:4})}get baseFrequency(){return this._baseFrequency}set baseFrequency(t){const e=this.toFrequency(t);Ft(e,0),this._baseFrequency=e,this._scale.min=this._baseFrequency,this.octaves=this._octaves}get octaves(){return this._octaves}set octaves(t){this._octaves=t,this._scale.max=this._baseFrequency*Math.pow(2,t)}get exponent(){return this._exponent.value}set exponent(t){this._exponent.value=t}dispose(){return super.dispose(),this._exponent.dispose(),this._scale.dispose(),this}}class As extends Ut{constructor(){super(x(As.getDefaults(),arguments)),this.name="MonoSynth";const t=x(As.getDefaults(),arguments);this.oscillator=new Ce(Object.assign(t.oscillator,{context:this.context,detune:t.detune,onstop:()=>this.onsilence(this)})),this.frequency=this.oscillator.frequency,this.detune=this.oscillator.detune,this.filter=new dn(Object.assign(t.filter,{context:this.context})),this.filterEnvelope=new pn(Object.assign(t.filterEnvelope,{context:this.context})),this.envelope=new ps(Object.assign(t.envelope,{context:this.context})),this.oscillator.chain(this.filter,this.envelope,this.output),this.filterEnvelope.connect(this.filter.frequency),Z(this,["oscillator","frequency","detune","filter","filterEnvelope","envelope"])}static getDefaults(){return Object.assign(Ut.getDefaults(),{envelope:Object.assign(fe(Mt.getDefaults(),Object.keys(V.getDefaults())),{attack:.005,decay:.1,release:1,sustain:.9}),filter:Object.assign(fe(dn.getDefaults(),Object.keys(V.getDefaults())),{Q:1,rolloff:-12,type:"lowpass"}),filterEnvelope:Object.assign(fe(pn.getDefaults(),Object.keys(V.getDefaults())),{attack:.6,baseFrequency:200,decay:.2,exponent:2,octaves:3,release:2,sustain:.5}),oscillator:Object.assign(fe(Ce.getDefaults(),Object.keys(_t.getDefaults())),{type:"sawtooth"})})}_triggerEnvelopeAttack(t,e=1){if(this.envelope.triggerAttack(t,e),this.filterEnvelope.triggerAttack(t),this.oscillator.start(t),this.envelope.sustain===0){const n=this.toSeconds(this.envelope.attack),i=this.toSeconds(this.envelope.decay);this.oscillator.stop(t+n+i)}}_triggerEnvelopeRelease(t){this.envelope.triggerRelease(t),this.filterEnvelope.triggerRelease(t),this.oscillator.stop(t+this.toSeconds(this.envelope.release))}getLevelAtTime(t){return t=this.toSeconds(t),this.envelope.getValueAtTime(t)}dispose(){return super.dispose(),this.oscillator.dispose(),this.envelope.dispose(),this.filterEnvelope.dispose(),this.filter.dispose(),this}}class fn extends je{constructor(){super(x(fn.getDefaults(),arguments)),this.name="MembraneSynth",this.portamento=0;const t=x(fn.getDefaults(),arguments);this.pitchDecay=t.pitchDecay,this.octaves=t.octaves,Z(this,["oscillator","envelope"])}static getDefaults(){return ve(Ut.getDefaults(),je.getDefaults(),{envelope:{attack:.001,attackCurve:"exponential",decay:.4,release:1.4,sustain:.01},octaves:10,oscillator:{type:"sine"},pitchDecay:.05})}setNote(t,e){const n=this.toSeconds(e),i=this.toFrequency(t instanceof xt?t.toFrequency():t),r=i*this.octaves;return this.oscillator.frequency.setValueAtTime(r,n),this.oscillator.frequency.exponentialRampToValueAtTime(i,n+this.toSeconds(this.pitchDecay)),this}dispose(){return super.dispose(),this}}Lt([Mr(0)],fn.prototype,"octaves",void 0);Lt([ne(0)],fn.prototype,"pitchDecay",void 0);const Rr=new Set;function ii(s){Rr.add(s)}function Vr(s,t){const e=`registerProcessor("${s}", ${t})`;Rr.add(e)}const bh=`
	/**
	 * The base AudioWorkletProcessor for use in Tone.js. Works with the [[ToneAudioWorklet]]. 
	 */
	class ToneAudioWorkletProcessor extends AudioWorkletProcessor {

		constructor(options) {
			
			super(options);
			/**
			 * If the processor was disposed or not. Keep alive until it's disposed.
			 */
			this.disposed = false;
		   	/** 
			 * The number of samples in the processing block
			 */
			this.blockSize = 128;
			/**
			 * the sample rate
			 */
			this.sampleRate = sampleRate;

			this.port.onmessage = (event) => {
				// when it receives a dispose 
				if (event.data === "dispose") {
					this.disposed = true;
				}
			};
		}
	}
`;ii(bh);const xh=`
	/**
	 * Abstract class for a single input/output processor. 
	 * has a 'generate' function which processes one sample at a time
	 */
	class SingleIOProcessor extends ToneAudioWorkletProcessor {

		constructor(options) {
			super(Object.assign(options, {
				numberOfInputs: 1,
				numberOfOutputs: 1
			}));
			/**
			 * Holds the name of the parameter and a single value of that
			 * parameter at the current sample
			 * @type { [name: string]: number }
			 */
			this.params = {}
		}

		/**
		 * Generate an output sample from the input sample and parameters
		 * @abstract
		 * @param input number
		 * @param channel number
		 * @param parameters { [name: string]: number }
		 * @returns number
		 */
		generate(){}

		/**
		 * Update the private params object with the 
		 * values of the parameters at the given index
		 * @param parameters { [name: string]: Float32Array },
		 * @param index number
		 */
		updateParams(parameters, index) {
			for (const paramName in parameters) {
				const param = parameters[paramName];
				if (param.length > 1) {
					this.params[paramName] = parameters[paramName][index];
				} else {
					this.params[paramName] = parameters[paramName][0];
				}
			}
		}

		/**
		 * Process a single frame of the audio
		 * @param inputs Float32Array[][]
		 * @param outputs Float32Array[][]
		 */
		process(inputs, outputs, parameters) {
			const input = inputs[0];
			const output = outputs[0];
			// get the parameter values
			const channelCount = Math.max(input && input.length || 0, output.length);
			for (let sample = 0; sample < this.blockSize; sample++) {
				this.updateParams(parameters, sample);
				for (let channel = 0; channel < channelCount; channel++) {
					const inputSample = input && input.length ? input[channel][sample] : 0;
					output[channel][sample] = this.generate(inputSample, channel, this.params);
				}
			}
			return !this.disposed;
		}
	};
`;ii(xh);const Ch=`
	/**
	 * A multichannel buffer for use within an AudioWorkletProcessor as a delay line
	 */
	class DelayLine {
		
		constructor(size, channels) {
			this.buffer = [];
			this.writeHead = []
			this.size = size;

			// create the empty channels
			for (let i = 0; i < channels; i++) {
				this.buffer[i] = new Float32Array(this.size);
				this.writeHead[i] = 0;
			}
		}

		/**
		 * Push a value onto the end
		 * @param channel number
		 * @param value number
		 */
		push(channel, value) {
			this.writeHead[channel] += 1;
			if (this.writeHead[channel] > this.size) {
				this.writeHead[channel] = 0;
			}
			this.buffer[channel][this.writeHead[channel]] = value;
		}

		/**
		 * Get the recorded value of the channel given the delay
		 * @param channel number
		 * @param delay number delay samples
		 */
		get(channel, delay) {
			let readHead = this.writeHead[channel] - Math.floor(delay);
			if (readHead < 0) {
				readHead += this.size;
			}
			return this.buffer[channel][readHead];
		}
	}
`;ii(Ch);const Sh="feedback-comb-filter",Ah=`
	class FeedbackCombFilterWorklet extends SingleIOProcessor {

		constructor(options) {
			super(options);
			this.delayLine = new DelayLine(this.sampleRate, options.channelCount || 2);
		}

		static get parameterDescriptors() {
			return [{
				name: "delayTime",
				defaultValue: 0.1,
				minValue: 0,
				maxValue: 1,
				automationRate: "k-rate"
			}, {
				name: "feedback",
				defaultValue: 0.5,
				minValue: 0,
				maxValue: 0.9999,
				automationRate: "k-rate"
			}];
		}

		generate(input, channel, parameters) {
			const delayedSample = this.delayLine.get(channel, parameters.delayTime * this.sampleRate);
			this.delayLine.push(channel, input + delayedSample * parameters.feedback);
			return delayedSample;
		}
	}
`;Vr(Sh,Ah);class ks extends Kt{constructor(){super(x(ks.getDefaults(),arguments,["voice","options"])),this.name="PolySynth",this._availableVoices=[],this._activeVoices=[],this._voices=[],this._gcTimeout=-1,this._averageActiveVoices=0,this._syncedRelease=i=>this.releaseAll(i);const t=x(ks.getDefaults(),arguments,["voice","options"]);F(!Ht(t.voice),"DEPRECATED: The polyphony count is no longer the first argument.");const e=t.voice.getDefaults();this.options=Object.assign(e,t.options),this.voice=t.voice,this.maxPolyphony=t.maxPolyphony,this._dummyVoice=this._getNextAvailableVoice();const n=this._voices.indexOf(this._dummyVoice);this._voices.splice(n,1),this._gcTimeout=this.context.setInterval(this._collectGarbage.bind(this),1)}static getDefaults(){return Object.assign(Kt.getDefaults(),{maxPolyphony:32,options:{},voice:je})}get activeVoices(){return this._activeVoices.length}_makeVoiceAvailable(t){this._availableVoices.push(t);const e=this._activeVoices.findIndex(n=>n.voice===t);this._activeVoices.splice(e,1)}_getNextAvailableVoice(){if(this._availableVoices.length)return this._availableVoices.shift();if(this._voices.length<this.maxPolyphony){const t=new this.voice(Object.assign(this.options,{context:this.context,onsilence:this._makeVoiceAvailable.bind(this)}));return F(t instanceof Ut,"Voice must extend Monophonic class"),t.connect(this.output),this._voices.push(t),t}else as("Max polyphony exceeded. Note dropped.")}_collectGarbage(){if(this._averageActiveVoices=Math.max(this._averageActiveVoices*.95,this.activeVoices),this._availableVoices.length&&this._voices.length>Math.ceil(this._averageActiveVoices+1)){const t=this._availableVoices.shift(),e=this._voices.indexOf(t);this._voices.splice(e,1),this.context.isOffline||t.dispose()}}_triggerAttack(t,e,n){t.forEach(i=>{const r=new en(this.context,i).toMidi(),o=this._getNextAvailableVoice();o&&(o.triggerAttack(i,e,n),this._activeVoices.push({midi:r,voice:o,released:!1}),this.log("triggerAttack",i,e))})}_triggerRelease(t,e){t.forEach(n=>{const i=new en(this.context,n).toMidi(),r=this._activeVoices.find(({midi:o,released:a})=>o===i&&!a);r&&(r.voice.triggerRelease(e),r.released=!0,this.log("triggerRelease",n,e))})}_scheduleEvent(t,e,n,i){F(!this.disposed,"Synth was already disposed"),n<=this.now()?t==="attack"?this._triggerAttack(e,n,i):this._triggerRelease(e,n):this.context.setTimeout(()=>{this.disposed||this._scheduleEvent(t,e,n,i)},n-this.now())}triggerAttack(t,e,n){Array.isArray(t)||(t=[t]);const i=this.toSeconds(e);return this._scheduleEvent("attack",t,i,n),this}triggerRelease(t,e){Array.isArray(t)||(t=[t]);const n=this.toSeconds(e);return this._scheduleEvent("release",t,n),this}triggerAttackRelease(t,e,n,i){const r=this.toSeconds(n);if(this.triggerAttack(t,r,i),Dt(e)){F(Dt(t),"If the duration is an array, the notes must also be an array"),t=t;for(let o=0;o<t.length;o++){const a=e[Math.min(o,e.length-1)],c=this.toSeconds(a);F(c>0,"The duration must be greater than 0"),this.triggerRelease(t[o],r+c)}}else{const o=this.toSeconds(e);F(o>0,"The duration must be greater than 0"),this.triggerRelease(t,r+o)}return this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1),this.context.transport.on("stop",this._syncedRelease),this.context.transport.on("pause",this._syncedRelease),this.context.transport.on("loopEnd",this._syncedRelease)),this}set(t){const e=fe(t,["onsilence","context"]);return this.options=ve(this.options,e),this._voices.forEach(n=>n.set(e)),this._dummyVoice.set(e),this}get(){return this._dummyVoice.get()}releaseAll(t){const e=this.toSeconds(t);return this._activeVoices.forEach(({voice:n})=>{n.triggerRelease(e)}),this}dispose(){return super.dispose(),this._dummyVoice.dispose(),this._voices.forEach(t=>t.dispose()),this._activeVoices=[],this._availableVoices=[],this.context.clearInterval(this._gcTimeout),this}}class mn extends Kt{constructor(){super(x(mn.getDefaults(),arguments,["urls","onload","baseUrl"],"urls")),this.name="Sampler",this._activeSources=new Map;const t=x(mn.getDefaults(),arguments,["urls","onload","baseUrl"],"urls"),e={};Object.keys(t.urls).forEach(n=>{const i=parseInt(n,10);if(F(On(n)||Ht(i)&&isFinite(i),`url key is neither a note or midi pitch: ${n}`),On(n)){const r=new xt(this.context,n).toMidi();e[r]=t.urls[n]}else Ht(i)&&isFinite(i)&&(e[i]=t.urls[i])}),this._buffers=new ti({urls:e,onload:t.onload,baseUrl:t.baseUrl,onerror:t.onerror}),this.attack=t.attack,this.release=t.release,this.curve=t.curve,this._buffers.loaded&&Promise.resolve().then(t.onload)}static getDefaults(){return Object.assign(Kt.getDefaults(),{attack:0,baseUrl:"",curve:"exponential",onload:Y,onerror:Y,release:.1,urls:{}})}_findClosest(t){let n=0;for(;n<96;){if(this._buffers.has(t+n))return-n;if(this._buffers.has(t-n))return n;n++}throw new Error(`No available buffers for note: ${t}`)}triggerAttack(t,e,n=1){return this.log("triggerAttack",t,e,n),Array.isArray(t)||(t=[t]),t.forEach(i=>{const r=Or(new xt(this.context,i).toFrequency()),o=Math.round(r),a=r-o,c=this._findClosest(o),u=o-c,l=this._buffers.get(u),h=Nr(c+a),p=new We({url:l,context:this.context,curve:this.curve,fadeIn:this.attack,fadeOut:this.release,playbackRate:h}).connect(this.output);p.start(e,0,l.duration/h,n),Dt(this._activeSources.get(o))||this._activeSources.set(o,[]),this._activeSources.get(o).push(p),p.onended=()=>{if(this._activeSources&&this._activeSources.has(o)){const f=this._activeSources.get(o),d=f.indexOf(p);d!==-1&&f.splice(d,1)}}}),this}triggerRelease(t,e){return this.log("triggerRelease",t,e),Array.isArray(t)||(t=[t]),t.forEach(n=>{const i=new xt(this.context,n).toMidi();if(this._activeSources.has(i)&&this._activeSources.get(i).length){const r=this._activeSources.get(i);e=this.toSeconds(e),r.forEach(o=>{o.stop(e)}),this._activeSources.set(i,[])}}),this}releaseAll(t){const e=this.toSeconds(t);return this._activeSources.forEach(n=>{for(;n.length;)n.shift().stop(e)}),this}sync(){return this._syncState()&&(this._syncMethod("triggerAttack",1),this._syncMethod("triggerRelease",1)),this}triggerAttackRelease(t,e,n,i=1){const r=this.toSeconds(n);return this.triggerAttack(t,r,i),Dt(e)?(F(Dt(t),"notes must be an array when duration is array"),t.forEach((o,a)=>{const c=e[Math.min(a,e.length-1)];this.triggerRelease(o,r+this.toSeconds(c))})):this.triggerRelease(t,r+this.toSeconds(e)),this}add(t,e,n){if(F(On(t)||isFinite(t),`note must be a pitch or midi: ${t}`),On(t)){const i=new xt(this.context,t).toMidi();this._buffers.add(i,e,n)}else this._buffers.add(t,e,n);return this}get loaded(){return this._buffers.loaded}dispose(){return super.dispose(),this._buffers.dispose(),this._activeSources.forEach(t=>{t.forEach(e=>e.dispose())}),this._activeSources.clear(),this}}Lt([ne(0)],mn.prototype,"attack",void 0);Lt([ne(0)],mn.prototype,"release",void 0);class Jn extends V{constructor(){super(Object.assign(x(Jn.getDefaults(),arguments,["fade"]))),this.name="CrossFade",this._panner=this.context.createStereoPanner(),this._split=this.context.createChannelSplitter(2),this._g2a=new Th({context:this.context}),this.a=new K({context:this.context,gain:0}),this.b=new K({context:this.context,gain:0}),this.output=new K({context:this.context}),this._internalChannels=[this.a,this.b];const t=x(Jn.getDefaults(),arguments,["fade"]);this.fade=new J({context:this.context,units:"normalRange",value:t.fade}),Z(this,"fade"),this.context.getConstant(1).connect(this._panner),this._panner.connect(this._split),this._panner.channelCount=1,this._panner.channelCountMode="explicit",Jt(this._split,this.a.gain,0),Jt(this._split,this.b.gain,1),this.fade.chain(this._g2a,this._panner.pan),this.a.connect(this.output),this.b.connect(this.output)}static getDefaults(){return Object.assign(V.getDefaults(),{fade:.5})}dispose(){return super.dispose(),this.a.dispose(),this.b.dispose(),this.output.dispose(),this.fade.dispose(),this._g2a.dispose(),this._panner.disconnect(),this._split.disconnect(),this}}class Be extends V{constructor(t){super(t),this.name="Effect",this._dryWet=new Jn({context:this.context}),this.wet=this._dryWet.fade,this.effectSend=new K({context:this.context}),this.effectReturn=new K({context:this.context}),this.input=new K({context:this.context}),this.output=this._dryWet,this.input.fan(this._dryWet.a,this.effectSend),this.effectReturn.connect(this._dryWet.b),this.wet.setValueAtTime(t.wet,0),this._internalChannels=[this.effectReturn,this.effectSend],Z(this,"wet")}static getDefaults(){return Object.assign(V.getDefaults(),{wet:1})}connectEffect(t){return this._internalChannels.push(t),this.effectSend.chain(t,this.effectReturn),this}dispose(){return super.dispose(),this._dryWet.dispose(),this.effectSend.dispose(),this.effectReturn.dispose(),this.wet.dispose(),this}}class Ai extends Be{constructor(t){super(t),this.name="LFOEffect",this._lfo=new Hn({context:this.context,frequency:t.frequency,amplitude:t.depth}),this.depth=this._lfo.amplitude,this.frequency=this._lfo.frequency,this.type=t.type,Z(this,["frequency","depth"])}static getDefaults(){return Object.assign(Be.getDefaults(),{frequency:1,type:"sine",depth:1})}start(t){return this._lfo.start(t),this}stop(t){return this._lfo.stop(t),this}sync(){return this._lfo.sync(),this}unsync(){return this._lfo.unsync(),this}get type(){return this._lfo.type}set type(t){this._lfo.type=t}dispose(){return super.dispose(),this._lfo.dispose(),this.frequency.dispose(),this.depth.dispose(),this}}class _n extends V{constructor(){super(Object.assign(x(_n.getDefaults(),arguments,["pan"]))),this.name="Panner",this._panner=this.context.createStereoPanner(),this.input=this._panner,this.output=this._panner;const t=x(_n.getDefaults(),arguments,["pan"]);this.pan=new U({context:this.context,param:this._panner.pan,value:t.pan,minValue:-1,maxValue:1}),this._panner.channelCount=t.channelCount,this._panner.channelCountMode="explicit",Z(this,"pan")}static getDefaults(){return Object.assign(V.getDefaults(),{pan:0,channelCount:1})}dispose(){return super.dispose(),this._panner.disconnect(),this.pan.dispose(),this}}class Ns extends Ai{constructor(){super(x(Ns.getDefaults(),arguments,["frequency"])),this.name="AutoPanner";const t=x(Ns.getDefaults(),arguments,["frequency"]);this._panner=new _n({context:this.context,channelCount:t.channelCount}),this.connectEffect(this._panner),this._lfo.connect(this._panner.pan),this._lfo.min=-1,this._lfo.max=1}static getDefaults(){return Object.assign(Ai.getDefaults(),{channelCount:1})}dispose(){return super.dispose(),this._panner.dispose(),this}}const kh="bit-crusher",Nh=`
	class BitCrusherWorklet extends SingleIOProcessor {

		static get parameterDescriptors() {
			return [{
				name: "bits",
				defaultValue: 12,
				minValue: 1,
				maxValue: 16,
				automationRate: 'k-rate'
			}];
		}

		generate(input, _channel, parameters) {
			const step = Math.pow(0.5, parameters.bits - 1);
			const val = step * Math.floor(input / step + 0.5);
			return val;
		}
	}
`;Vr(kh,Nh);class Kn extends V{constructor(){super(x(Kn.getDefaults(),arguments,["channels"])),this.name="Merge";const t=x(Kn.getDefaults(),arguments,["channels"]);this._merger=this.output=this.input=this.context.createChannelMerger(t.channels)}static getDefaults(){return Object.assign(V.getDefaults(),{channels:2})}dispose(){return super.dispose(),this._merger.disconnect(),this}}class ki extends Be{constructor(t){super(t),this.name="FeedbackEffect",this._feedbackGain=new K({context:this.context,gain:t.feedback,units:"normalRange"}),this.feedback=this._feedbackGain.gain,Z(this,"feedback"),this.effectReturn.chain(this._feedbackGain,this.effectSend)}static getDefaults(){return Object.assign(Be.getDefaults(),{feedback:.125})}dispose(){return super.dispose(),this._feedbackGain.dispose(),this.feedback.dispose(),this}}class Os extends ki{constructor(){super(x(Os.getDefaults(),arguments,["delayTime","feedback"])),this.name="FeedbackDelay";const t=x(Os.getDefaults(),arguments,["delayTime","feedback"]);this._delayNode=new Zn({context:this.context,delayTime:t.delayTime,maxDelay:t.maxDelay}),this.delayTime=this._delayNode.delayTime,this.connectEffect(this._delayNode),Z(this,"delayTime")}static getDefaults(){return Object.assign(ki.getDefaults(),{delayTime:.25,maxDelay:1})}dispose(){return super.dispose(),this._delayNode.dispose(),this.delayTime.dispose(),this}}class Ds extends Be{constructor(){super(x(Ds.getDefaults(),arguments,["decay"])),this.name="Reverb",this._convolver=this.context.createConvolver(),this.ready=Promise.resolve();const t=x(Ds.getDefaults(),arguments,["decay"]);this._decay=t.decay,this._preDelay=t.preDelay,this.generate(),this.connectEffect(this._convolver)}static getDefaults(){return Object.assign(Be.getDefaults(),{decay:1.5,preDelay:.01})}get decay(){return this._decay}set decay(t){t=this.toSeconds(t),Ft(t,.001),this._decay=t,this.generate()}get preDelay(){return this._preDelay}set preDelay(t){t=this.toSeconds(t),Ft(t,0),this._preDelay=t,this.generate()}generate(){return lt(this,void 0,void 0,function*(){const t=this.ready,e=new ls(2,this._decay+this._preDelay,this.context.sampleRate),n=new sn({context:e}),i=new sn({context:e}),r=new Kn({context:e});n.connect(r,0,0),i.connect(r,0,1);const o=new K({context:e}).toDestination();r.connect(o),n.start(0),i.start(0),o.gain.setValueAtTime(0,0),o.gain.setValueAtTime(1,this._preDelay),o.gain.exponentialApproachValueAtTime(0,this._preDelay,this.decay);const a=e.render();return this.ready=a.then(Y),yield t,this._convolver.buffer=(yield a).get(),this})}dispose(){return super.dispose(),this._convolver.disconnect(),this}}class ut extends V{constructor(){super(x(ut.getDefaults(),arguments,["solo"])),this.name="Solo";const t=x(ut.getDefaults(),arguments,["solo"]);this.input=this.output=new K({context:this.context}),ut._allSolos.has(this.context)||ut._allSolos.set(this.context,new Set),ut._allSolos.get(this.context).add(this),this.solo=t.solo}static getDefaults(){return Object.assign(V.getDefaults(),{solo:!1})}get solo(){return this._isSoloed()}set solo(t){t?this._addSolo():this._removeSolo(),ut._allSolos.get(this.context).forEach(e=>e._updateSolo())}get muted(){return this.input.gain.value===0}_addSolo(){ut._soloed.has(this.context)||ut._soloed.set(this.context,new Set),ut._soloed.get(this.context).add(this)}_removeSolo(){ut._soloed.has(this.context)&&ut._soloed.get(this.context).delete(this)}_isSoloed(){return ut._soloed.has(this.context)&&ut._soloed.get(this.context).has(this)}_noSolos(){return!ut._soloed.has(this.context)||ut._soloed.has(this.context)&&ut._soloed.get(this.context).size===0}_updateSolo(){this._isSoloed()?this.input.gain.value=1:this._noSolos()?this.input.gain.value=1:this.input.gain.value=0}dispose(){return super.dispose(),ut._allSolos.get(this.context).delete(this),this._removeSolo(),this}}ut._allSolos=new Map;ut._soloed=new Map;class ts extends V{constructor(){super(x(ts.getDefaults(),arguments,["pan","volume"])),this.name="PanVol";const t=x(ts.getDefaults(),arguments,["pan","volume"]);this._panner=this.input=new _n({context:this.context,pan:t.pan,channelCount:t.channelCount}),this.pan=this._panner.pan,this._volume=this.output=new be({context:this.context,volume:t.volume}),this.volume=this._volume.volume,this._panner.connect(this._volume),this.mute=t.mute,Z(this,["pan","volume"])}static getDefaults(){return Object.assign(V.getDefaults(),{mute:!1,pan:0,volume:0,channelCount:1})}get mute(){return this._volume.mute}set mute(t){this._volume.mute=t}dispose(){return super.dispose(),this._panner.dispose(),this.pan.dispose(),this._volume.dispose(),this.volume.dispose(),this}}class pe extends V{constructor(){super(x(pe.getDefaults(),arguments,["volume","pan"])),this.name="Channel";const t=x(pe.getDefaults(),arguments,["volume","pan"]);this._solo=this.input=new ut({solo:t.solo,context:this.context}),this._panVol=this.output=new ts({context:this.context,pan:t.pan,volume:t.volume,mute:t.mute,channelCount:t.channelCount}),this.pan=this._panVol.pan,this.volume=this._panVol.volume,this._solo.connect(this._panVol),Z(this,["pan","volume"])}static getDefaults(){return Object.assign(V.getDefaults(),{pan:0,volume:0,mute:!1,solo:!1,channelCount:1})}get solo(){return this._solo.solo}set solo(t){this._solo.solo=t}get muted(){return this._solo.muted||this.mute}get mute(){return this._panVol.mute}set mute(t){this._panVol.mute=t}_getBus(t){return pe.buses.has(t)||pe.buses.set(t,new K({context:this.context})),pe.buses.get(t)}send(t,e=0){const n=this._getBus(t),i=new K({context:this.context,units:"decibels",gain:e});return this.connect(i),i.connect(n),i}receive(t){return this._getBus(t).connect(this),this}dispose(){return super.dispose(),this._panVol.dispose(),this.pan.dispose(),this.volume.dispose(),this._solo.dispose(),this}}pe.buses=new Map;class Oh extends V{constructor(){super(...arguments),this.name="Listener",this.positionX=new U({context:this.context,param:this.context.rawContext.listener.positionX}),this.positionY=new U({context:this.context,param:this.context.rawContext.listener.positionY}),this.positionZ=new U({context:this.context,param:this.context.rawContext.listener.positionZ}),this.forwardX=new U({context:this.context,param:this.context.rawContext.listener.forwardX}),this.forwardY=new U({context:this.context,param:this.context.rawContext.listener.forwardY}),this.forwardZ=new U({context:this.context,param:this.context.rawContext.listener.forwardZ}),this.upX=new U({context:this.context,param:this.context.rawContext.listener.upX}),this.upY=new U({context:this.context,param:this.context.rawContext.listener.upY}),this.upZ=new U({context:this.context,param:this.context.rawContext.listener.upZ})}static getDefaults(){return Object.assign(V.getDefaults(),{positionX:0,positionY:0,positionZ:0,forwardX:0,forwardY:0,forwardZ:-1,upX:0,upY:1,upZ:0})}dispose(){return super.dispose(),this.positionX.dispose(),this.positionY.dispose(),this.positionZ.dispose(),this.forwardX.dispose(),this.forwardY.dispose(),this.forwardZ.dispose(),this.upX.dispose(),this.upY.dispose(),this.upZ.dispose(),this}}cs(s=>{s.listener=new Oh({context:s})});us(s=>{s.listener.dispose()});class Es extends V{constructor(){super(x(Es.getDefaults(),arguments,["threshold","ratio"])),this.name="Compressor",this._compressor=this.context.createDynamicsCompressor(),this.input=this._compressor,this.output=this._compressor;const t=x(Es.getDefaults(),arguments,["threshold","ratio"]);this.threshold=new U({minValue:this._compressor.threshold.minValue,maxValue:this._compressor.threshold.maxValue,context:this.context,convert:!1,param:this._compressor.threshold,units:"decibels",value:t.threshold}),this.attack=new U({minValue:this._compressor.attack.minValue,maxValue:this._compressor.attack.maxValue,context:this.context,param:this._compressor.attack,units:"time",value:t.attack}),this.release=new U({minValue:this._compressor.release.minValue,maxValue:this._compressor.release.maxValue,context:this.context,param:this._compressor.release,units:"time",value:t.release}),this.knee=new U({minValue:this._compressor.knee.minValue,maxValue:this._compressor.knee.maxValue,context:this.context,convert:!1,param:this._compressor.knee,units:"decibels",value:t.knee}),this.ratio=new U({minValue:this._compressor.ratio.minValue,maxValue:this._compressor.ratio.maxValue,context:this.context,convert:!1,param:this._compressor.ratio,units:"positive",value:t.ratio}),Z(this,["knee","release","attack","ratio","threshold"])}static getDefaults(){return Object.assign(V.getDefaults(),{attack:.003,knee:30,ratio:12,release:.25,threshold:-24})}get reduction(){return this._compressor.reduction}dispose(){return super.dispose(),this._compressor.disconnect(),this.attack.dispose(),this.release.dispose(),this.threshold.dispose(),this.ratio.dispose(),this.knee.dispose(),this}}const ad=Nt().transport;Nt().destination;Nt().destination;Nt().listener;Nt().draw;Nt();export{Ns as A,Es as C,Os as F,As as M,ks as P,Ds as R,ad as T,od as a,rd as b,id as s};
//# sourceMappingURL=tone.9e14688a.js.map
